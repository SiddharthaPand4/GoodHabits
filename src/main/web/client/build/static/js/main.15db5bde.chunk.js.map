{"version":3,"sources":["components/event.js","services/axios.js","helpers/auth-header.js","helpers/config.js","helpers/history.js","services/UserService.js","components/Sidebar.js","components/Headbar.js","components/Footerbar.js","components/PrivateRoute.js","services/DashboardService.js","services/CommonService.js","views/HomeView.js","services/FeedService.js","views/FeedView.js","services/DeviceService.js","views/DeviceView.js","views/UserListView.js","views/DeviceConfigView.js","views/LoginView.js","services/TrafficIncidentService.js","views/IncidentListView.js","services/TriggerService.js","components/TriggerSet.js","views/TriggerView.js","components/GenericFilter.js","services/AnprService.js","views/AnprView.js","views/TrafficIncidentView.js","views/incidentsRepeated/IncidentTimeline.js","views/incidentsRepeated/IncidentRepeatedView.js","services/HotListVehicleService.js","components/HotListedVehicles/HotListedVehiclesList.js","views/IncidentHotlistView.js","views/masterData/IncidentTimeline.js","views/masterData/MasterDataView.js","services/facerec/FaceMatchService.js","components/facerec/FaceMatchView.js","App.js","serviceWorker.js","index.js"],"names":["EventBus","events","publish","event","data","this","forEach","callback","subscribe","console","log","push","module","exports","HttpService","ax","axios","create","baseURL","timeout","headers","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","Authorization","response","undefined","err","url","includes","Promise","reject","status","clear","window","location","Instance","authHeader","history","createBrowserHistory","UserService","userId","get","user","requestBody","userName","lastName","firstName","email","id","roles","method","stringify","delete","username","password","post","setItem","removeItem","Sider","Layout","SubMenu","Menu","Sidebar","state","collapsed","toggleCollapsed","setState","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","type","className","src","theme","mode","defaultSelectedKeys","Item","key","to","title","onClick","logout","Component","Header","Headbar","style","background","padding","Footer","textAlign","PrivateRoute","component","rest","render","props","isLoggedIn","pathname","from","DashboardService","filter","fromDate","toDate","xAxis","fromDateString","moment","format","toDateString","index","getRandomColor","color","i","Math","floor","random","selectedCustomDateRangeEnum","selectedCustomDateRangeMoment","baseDate","from_date","to_date","startOf","endOf","subtract","CommonService","array","attr","value","length","RangePicker","Select","Option","DatePicker","HomeView","handleCancel","e","isOpencustomDateRangeModal","atcc","selectedCustomDateRange","selectedXAxisOption","chartData","labels","datasets","incident","getIncidentVehicleCount","bind","getAtccVehicleCount","getBarChartOptions","selectDateRange","selectXAxisOption","refresh","getDateRangeOptions","getXAxisOptions","handleDateRangeChange","graphName","graph","fromToDate","extractFromToDate","then","resposne","rawData","labelDates","rawDataByVehicleData","date","vehicleType","vehicleTypeIndex","dataSet","label","backgroundColor","getColor","vehicleCount","catch","error","helmetMissingIncidents","reverseDirectionIncidents","parseInt","sort","a","b","Moment","helmetMissingDataset","reverseDirectionDataset","dataValue","findIndex","dates","dateString","showCustomDateRangeModal","chartName","yAxisScaleLabel","yAxisLabel","responsive","maintainAspectRatio","animation","duration","hover","animationDuration","responsiveAnimationDuration","legend","position","scales","xAxes","stacked","ticks","beginAtZero","scaleLabel","display","labelString","yAxes","atccChartOptions","incidentChartOptions","onCancel","visible","footer","onChange","changedDateRange","overlay","options","FeedService","feed","ID","Text","Typography","FeedView","loading","videoVisible","feeds","removeFeed","getFeeds","startFeed","stopFeed","WrappedFeedForm","Form","name","FeedForm","gutter","map","span","site","cover","alt","bordered","actions","submitted","loginError","handleSubmit","preventDefault","validationError","form","getFieldValue","addFeed","fieldsError","getFieldDecorator","getFieldsError","onSubmit","rules","required","message","addonBefore","placeholder","htmlType","disabled","Object","keys","some","field","DeviceService","DeviceView","device","getDevice","width","extra","fingerprint","model","license","registeredTo","Column","Table","confirm","Modal","UserListView","Button","Group","showModal","users","showUserDetails","addUser","refreshUsers","close","getUsers","getRoles","getUser","okText","okType","cancelText","onOk","deleteUser","success","WrappedUserForm","UserForm","bodyStyle","dataSource","pagination","scroll","x","dataIndex","text","record","href","showUser","showDeleteConfirm","createUser","initialValue","role","align","size","TabPane","Tabs","DeviceConfigView","deviceconfig","getDeviceConfig","tab","defaultActiveKey","onTabChange","LoginView","WrappedLoginForm","LoginForm","login","reload","xl","lg","md","sm","xs","prefix","block","withRouter","TrafficIncidentService","Panel","ColumnGroup","Collapse","ButtonGroup","TriggerService","trigger","put","TriggerSet","days","onChange0","onChange1","onChange2","onChange3","onChange4","onChange5","onChange6","onChangeValue","saveTrigger","deleteTrigger","setName","changed","idx","TriggerDays","Start","End","new","createTrigger","Day","target","selected","marks","day","start","end","dlist","min","max","range","TriggerView","triggers","tsRef","React","createRef","handleChange","newTrigger","getTriggers","selectedt","current","NewTrigger","ChangeTrigger","selectedname","Name","selector","ref","layout","page","pageSize","onFromDateChange","onFromTimeChange","onToDateChange","onToTimeChange","onPageChange","onPageSizeChange","handleRefresh","refreshNow","handleLayoutChange","handleFilterChange","time","fromTime","toTime","minuteStep","secondStep","icon","changeLayout","AnprService","lpr","Paragraph","AnprView","handleOnClick","workingEvent","workingEventLoading","magnifyEvent","magnifyEventId","zoomFactor","minZoomFactor","maxZoomFactor","onLprInputChange","editEvent","updateEvent","updateZoomFactor","getEvents","archiveEvent","anprText","alert","header","renderTable","renderGrid","anprresponse","totalPage","description","count","totalPages","mid","toFixed","preColor","nextColor","1","2","3","4","5","margin","direction","helmet","download","height","marginTop","strong","editable","copyable","code","eventDate","onShowSizeChange","showSizeChanger","showQuickJumper","defaultCurrent","total","Total","paginationOptions","TrafficIncidentView","getIncidents","IncidentTimeline","currentPage","pageSizes","incidentType","toggleVisible","refreshBriefIncidentsNow","onModalPageChange","onModalPageSizeChange","nextProps","getBriefIncidentsRepeated","paginationOption","showLessItems","antIcon","fontSize","spin","indicator","onClose","Anchor","Link","Search","Input","tabList","IncidentRepeatedView","timelineLpr","activeTab","helmetMissing","pages","briefIncident","reverseDirection","pagess","onHelmetMissingPageChange","onReverseDirectionPageChange","onHelmetMissingPageSizeChange","onReverseDirectionPageSizeChange","handleTabClick","refreshHelmetMissingIncidentsNow","refreshReverseDirectionIncidentsNow","search","toggleIncidentTimelineModal","tabIndex","activeTabIndex","defaultActiveTabIndex","getHelmetMissingIncidentsRepeated","getReverseDirectionIncidentsRepeated","hasError","searchText","allowClear","onSearch","enterButton","activeTabKey","renderReverseData","renderHelmetMissingData","repeatedTimes","HotListVehicleService","vehicle","HotListedVehiclesList","activeModal","hotListedVehicleResponse","workingVehicle","archived","vehiclesList","openHotListVehicleForm","handleSubmitWorkingHotListVehicle","handleCancelWorkingHotListVehicle","archiveHotListedVehicle","workingVehicleOnChange","getHotListedVehicles","checked","saveHotListedVehicle","vehicles","hoverable","IncidentHotlistView","getIncidentsHotlisted","renderIncidents","getIncidentTimeline","MasterDataView","archiveEventsLoading","archiveLpr","allData","onMasterDataPageChange","onMasterDataPageSizeChange","refreshIncidentsNow","archiveLprOnChange","getIncidentsList","archiveAllEvent","renderMasterData","FaceMatchService","image","userdata","FaceMatchView","captured","webcamRef","capture","resetcamera","getScreenshot","elmnt","audio","screenshotFormat","videoConstraints","facingMode","WrapperUserForm","address","screenshot","lookup","setFieldsInitialValue","setFieldsValue","register","Content","App","loggedIn","refreshMenu","sideBar","minHeight","path","exact","Boolean","hostname","match","Root","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15db5bde.chunk.js","sourcesContent":["const EventBus  = {\r\n    events : {},\r\n    publish: function (event, data) {\r\n        if (!this.events[event]) return;\r\n        this.events[event].forEach(callback => callback(data))\r\n    },\r\n    subscribe: function (event, callback) {\r\n        console.log('subs called:', event);\r\n        if (!this.events[event]) this.events[event] = [];\r\n        this.events[event].push(callback)\r\n    }\r\n};\r\n\r\nmodule.exports = {EventBus};","import axios from \"axios\";\r\n\r\nfunction forceLogout() {\r\n    localStorage.clear();\r\n    window.location = '/login';\r\n}\r\n\r\nclass HttpService {\r\n\r\n    static Instance() {\r\n\r\n        let ax = new axios.create({\r\n            baseURL: \"/\",\r\n            timeout: 5000,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        ax.interceptors.request.use(config => {\r\n            let token = JSON.parse(localStorage.getItem('syntoken'));\r\n            if (token) {\r\n                config.headers.Authorization = \"Bearer \" + token.token\r\n            }\r\n            return config\r\n        });\r\n\r\n        axios.interceptors.response.use(undefined, err => {\r\n            if (err.response.config.url.includes('/login'))\r\n                return Promise.reject(err);\r\n\r\n            if (err.response.status === 403) {\r\n                console.log('I am at 403');\r\n                return forceLogout();\r\n            }\r\n            if (err.response.status !== 401) {\r\n                console.log('I am at 401');\r\n                return Promise.reject(err);\r\n            }\r\n        });\r\n\r\n        return ax;\r\n    }\r\n\r\n}\r\n//https://gist.github.com/alfonmga/96474f6adb6ed8dee8bc8bf8627c0ae1\r\nexport default HttpService.Instance()","export function authHeader() {\r\n    // return authorization header with jwt token\r\n    let token = JSON.parse(localStorage.getItem('syntoken'));\r\n\r\n    if (token) {\r\n        return {\r\n            'Authorization': 'Bearer ' + token,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        };\r\n    } else {\r\n        return {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        };\r\n    }\r\n}","export const config = {\r\n    apiUrl: '/'\r\n};","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import axios from \"./axios\";\r\nimport { authHeader } from '../helpers/auth-header';\r\nimport { config } from '../helpers/config'\r\nimport {history} from \"../helpers/history\";\r\nimport {EventBus} from \"../components/event\";\r\n\r\nclass UserService {\r\n\r\n    static Instance() {\r\n        return new UserService()\r\n    }\r\n\r\n    getUser(userId) {\r\n        return axios.get('/api/user/' + userId);\r\n    }\r\n\r\n    getUsers() {\r\n        return axios.get('/api/user/');\r\n    }\r\n\r\n    getRoles(){\r\n        return axios.get('/api/user/roles');\r\n    }\r\n\r\n     createUser(user){\r\n        const requestBody = {\r\n             userName:user.userName,\r\n             lastName:user.lastName,\r\n             firstName:user.firstName,\r\n             email:user.email,\r\n             id:user.id,\r\n             roles:user.roles,\r\n        };\r\n\r\n        const request = {\r\n            method: 'POST',\r\n            headers: authHeader(),\r\n            data: JSON.stringify(requestBody),\r\n            url: config.apiUrl + 'api/user/'\r\n        };\r\n        if(user.id){\r\n            request.method='PUT';\r\n        }\r\n        return axios(request);\r\n    }\r\n\r\n    deleteUser(userId){\r\n        return axios.delete('/api/user/' + userId);\r\n    }\r\n\r\n    isLoggedIn() {\r\n        let token = JSON.parse(localStorage.getItem('syntoken'));\r\n        if (!token) {\r\n            console.log(\"cannot locate token, returning false\");\r\n            return false;\r\n        }\r\n        console.log(\"located token, returning true\");\r\n        return true\r\n    }\r\n\r\n    async login(username, password) {\r\n        let response = await axios.post('/login', JSON.stringify({ username, password }), {headers: {\r\n                'Content-Type': 'application/json',\r\n            }});\r\n        console.log(\"got this response\", response);\r\n        let token = response.data;\r\n        if (token) {\r\n            localStorage.setItem('syntoken', JSON.stringify(token));\r\n        }\r\n        return token;\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"syntoken\");\r\n        history.push( \"/#/login\");\r\n        EventBus.publish('login-logout', {})\r\n\r\n    }\r\n}\r\n\r\nexport default UserService.Instance()\r\n\r\n//TODO valiate token,\r\n// https://medium.com/@siddharthac6/json-web-token-jwt-the-right-way-of-implementing-with-node-js-65b8915d550e","import React, {Component} from 'react';\r\nimport {Icon, Layout, Menu,Button} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport UserService from \"../services/UserService\";\r\n\r\nconst {Sider} = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\nexport default class Sidebar extends Component {\r\nstate = {\r\n    collapsed: false,\r\n  };\r\n  toggleCollapsed = () => {\r\n      this.setState({\r\n        collapsed: !this.state.collapsed,\r\n      });\r\n    };\r\n    render() {\r\n        return (\r\n            <Sider\r\n                breakpoint=\"lg\"\r\n                collapsedWidth=\"0\"\r\n                onBreakpoint={broken => {\r\n                    console.log(broken);\r\n                }}\r\n                onCollapse={(collapsed, type) => {\r\n                    console.log(collapsed, type);\r\n                }}\r\n            >\r\n                <div className=\"logo\">\r\n                    <img src={\"synlabs-logo.png\"}/>\r\n                </div>\r\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['0']}>\r\n                    <Menu.Item key=\"0\">\r\n                        <Link to='/'><Icon type='home'/><span className='nav-text'>Home</span></Link>\r\n                    </Menu.Item>\r\n                    <SubMenu\r\n                      key=\"sub1\"\r\n                      title={\r\n                        <span>\r\n                          <Icon type='box-plot'/>\r\n                          <span>ANPR</span>\r\n                        </span>\r\n                      }\r\n                    >\r\n                    <Menu.Item key=\"1\" className=\"sidebar-nav-link\">\r\n                        <Link to='/anpr'><span className='nav-text'>Events</span></Link>\r\n                    </Menu.Item>\r\n                     <Menu.Item key=\"2\" className=\"sidebar-nav-link\">\r\n                          <Link to='/anpr/masterdata'><span className='nav-text'>Repeated Events</span></Link>\r\n                     </Menu.Item></SubMenu>\r\n                     <SubMenu\r\n                       key=\"sub2\"\r\n                       title={\r\n                         <span>\r\n                           <Icon type='box-plot'/>\r\n                           <span>Offends</span>\r\n                         </span>\r\n                       }\r\n                     >\r\n                    <Menu.Item key=\"3\" className=\"sidebar-nav-link\">\r\n                        <Link to='/incidents'><span className='nav-text'>Events</span></Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"4\" className=\"sidebar-nav-link\">\r\n                        <Link to='/incidents/repeated'><span className='nav-text'>Repeated Events</span></Link>\r\n                    </Menu.Item></SubMenu>\r\n\r\n                    <Menu.Item key=\"5\" className=\"sidebar-nav-link\">\r\n                        <Link to=\"/incidents/hotlisted\"><Icon type='alert'/><span className='nav-text'>Hotlisted Vehicle Event</span></Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"6\">\r\n                        <Link to='/feed'><Icon type='video-camera'/><span className='nav-text'>Feed</span></Link>\r\n                    </Menu.Item>\r\n                    {/*<SubMenu key=\"admin\" title={<span><Icon type=\"deployment-unit\"/>Admin</span>}>\r\n                        <Menu.Item key=\"51\">\r\n                            <Link to='/user'><Icon type='user'/><span className='nav-text'>Users</span></Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"52\">\r\n                            <Link to='/device'><Icon type='laptop'/><span className='nav-text'>Device</span></Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"53\">\r\n                            <Link to='/trigger'><Icon type=\"clock-circle\"/><span\r\n                                className='nav-text'>Triggers</span></Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>*/}\r\n                    <Menu.Item key=\"7\">\r\n                        <Link to='/ngofr'><Icon type='video-camera'/><span className='nav-text'>FRS</span></Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"8\">\r\n                        <Link to='/' onClick={() => UserService.logout()}><Icon type='logout'/><span\r\n                            className='nav-text'>Logout</span></Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n        );\r\n    }\r\n}","\r\nimport React, {Component} from 'react';\r\nimport {Layout} from \"antd\";\r\nconst {Header} = Layout;\r\n\r\nexport default class Headbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header style={{ background: '#fff', padding: 10 }} >&nbsp;</Header>\r\n        )\r\n    }\r\n}","\r\nimport React, {Component} from 'react';\r\nimport {Layout} from \"antd\";\r\nconst {Footer} = Layout;\r\n\r\nexport default class Headbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Footer style={{ textAlign: 'center' }}>SynergyLabs © 2019</Footer>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport UserService from \"../services/UserService\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        UserService.isLoggedIn()\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n);\r\n\r\nexport default PrivateRoute","import axios from \"./axios\";\r\nimport moment from 'moment';\r\n\r\nclass DashboardService {\r\n\r\n    static Instance() {\r\n        return new DashboardService()\r\n    }\r\n\r\n    getTotalNoOfVehiclesBetweenTwoDates(filter) {\r\n        return axios.post('/api/dashboard/vehiclescount/datefilter', filter);\r\n    }\r\n\r\n    getTotalNoOfVehiclesBySelectedDate(filter) {\r\n        return axios.post('/api/dashboard/vehiclescount/date', filter);\r\n    }\r\n\r\n    getTotalNoOfVehiclesForLastMonths(filter) {\r\n        return axios.post('/api/dashboard/vehiclescount/month', filter);\r\n    }\r\n\r\n    getAtccVehicleCount(fromDate, toDate, xAxis) {\r\n        let filter = {\r\n            fromDateString: moment(fromDate).format('YYYY-MM-DD HH:mm:ss'),\r\n            toDateString: moment(toDate).format('YYYY-MM-DD HH:mm:ss\"'),\r\n            xAxis: xAxis\r\n        };\r\n        return axios.post('/api/dashboard/atcc/vehicle/count', filter);\r\n    }\r\n\r\n    getIncidentVehicleCount(fromDate, toDate, xAxis) {\r\n        let filter = {\r\n            fromDateString: moment(fromDate).format('YYYY-MM-DD HH:mm:ss'),\r\n            toDateString: moment(toDate).format('YYYY-MM-DD HH:mm:ss'),\r\n            xAxis: xAxis\r\n        };\r\n        return axios.post('/api/dashboard/incident/vehicle/count', filter);\r\n    }\r\n\r\n    getColor(index) {\r\n        let color = \"\";\r\n        let colors = [\r\n            '#e83e8c',\r\n            '#dc3545',\r\n            '#007bff',\r\n            '#6610f2',\r\n            '#fd7e14',\r\n            '#ffc107',\r\n            '#28a745',\r\n            '#20c997',\r\n            '#17a2b8',\r\n            '#6c757d',\r\n            '#343a40',\r\n            '#6f42c1'];\r\n\r\n        color = colors[index];\r\n        if (color) {\r\n            return color;\r\n        }\r\n        return this.getRandomColor();\r\n\r\n    }\r\n\r\n\r\n    getRandomColor() {\r\n        let letters = '0123456789ABCDEF';\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n\r\n    extractFromToDate(selectedCustomDateRangeEnum, selectedCustomDateRangeMoment) {\r\n\r\n        let baseDate;\r\n        let from_date;\r\n        let to_date;\r\n        switch (selectedCustomDateRangeEnum) {\r\n            case  \"Today\":\r\n                baseDate = moment();\r\n                from_date = baseDate.startOf('day').toDate();\r\n                to_date = baseDate.endOf('day').toDate();\r\n                break;\r\n            case  \"Yesterday\":\r\n                baseDate = moment().subtract(1, 'days');\r\n                from_date = baseDate.startOf('day').toDate();\r\n                to_date = baseDate.endOf('day').toDate();\r\n                break;\r\n            case  \"This week\":\r\n                baseDate = moment();\r\n                from_date = baseDate.startOf('week').toDate();\r\n                to_date = baseDate.endOf('week').toDate();\r\n                break;\r\n            case  \"This month\":\r\n                baseDate = moment();\r\n                from_date = baseDate.startOf('month').toDate();\r\n                to_date = baseDate.endOf('month').toDate();\r\n                break;\r\n            case  \"This quarter\":\r\n                baseDate = moment();\r\n                from_date = baseDate.startOf('quarter').toDate();\r\n                to_date = baseDate.endOf('quarter').toDate();\r\n                break;\r\n            case  \"This year\":\r\n                baseDate = moment();\r\n                from_date = baseDate.startOf('year').toDate();\r\n                to_date = baseDate.endOf('year').toDate();\r\n                break;\r\n            case  \"Last week\":\r\n                baseDate = moment().subtract(1, 'weeks');\r\n                from_date = baseDate.startOf('week').toDate();\r\n                to_date = baseDate.endOf('week').toDate();\r\n                break;\r\n            case  \"Last month\":\r\n                baseDate = moment().subtract(1, 'months');\r\n                from_date = baseDate.startOf('month').toDate();\r\n                to_date = baseDate.endOf('month').toDate();\r\n                break;\r\n            case  \"Last quarter\":\r\n                baseDate = moment().subtract(1, 'quarters');\r\n                from_date = baseDate.startOf('quarter').toDate();\r\n                to_date = baseDate.endOf('quarter').toDate();\r\n                break;\r\n            case  \"Last year\":\r\n                baseDate = moment().subtract(1, 'years');\r\n                from_date = baseDate.startOf('year').toDate();\r\n                to_date = baseDate.endOf('year').toDate();\r\n                break;\r\n            case  \"Second Last week\":\r\n                baseDate = moment().subtract(2, 'weeks');\r\n                from_date = baseDate.startOf('week').toDate();\r\n                to_date = baseDate.endOf('week').toDate();\r\n                break;\r\n            case  \"Second Last month\":\r\n                baseDate = moment().subtract(2, 'months');\r\n                from_date = baseDate.startOf('month').toDate();\r\n                to_date = baseDate.endOf('month').toDate();\r\n                break;\r\n            case  \"Second Last quarter\":\r\n                baseDate = moment().subtract(2, 'quarters');\r\n                from_date = baseDate.startOf('quarter').toDate();\r\n                to_date = baseDate.endOf('quarter').toDate();\r\n                break;\r\n            case  \"Second Last year\":\r\n                baseDate = moment().subtract(2, 'years');\r\n                from_date = baseDate.startOf('year').toDate();\r\n                to_date = baseDate.endOf('year').toDate();\r\n                break;\r\n            case  \"Custom\":\r\n                from_date = selectedCustomDateRangeMoment[0].toDate();\r\n                to_date = selectedCustomDateRangeMoment[1].toDate();\r\n                break;\r\n        }\r\n\r\n        return {\r\n            from_date: from_date,\r\n            to_date: to_date\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default DashboardService.Instance()","\r\n\r\nclass CommonService {\r\n\r\n    static Instance() {\r\n        return new CommonService()\r\n    }\r\n\r\n    ifExist(array, attr, value) {\r\n        for (let i = 0; i < array.length; i += 1) {\r\n            if (array[i][attr] === value) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    findIndex(array, attr, value) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        for (let i = 0; i < array.length; i += 1) {\r\n            if (array[i][attr] === value) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n\r\nexport default CommonService.Instance()","import React, {Component} from \"react\";\r\nimport {Col, Row, Statistic, TimePicker, DatePicker, Button, Icon, message, Card, Modal,Menu, Dropdown, Select} from \"antd\";\r\nimport DashboardService from \"../services/DashboardService\";\r\nimport CommonService from \"../services/CommonService\";\r\nimport Moment from 'moment';\r\nimport classnames from 'classnames';\r\nimport {Bar, Pie, Line} from 'react-chartjs-2';\r\nimport * as name from \"chartjs-plugin-colorschemes\";\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nconst {Option} = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class HomeView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpencustomDateRangeModal:\"\",\r\n            atcc: {\r\n                filter: {\r\n                    selectedCustomDateRange: \"Today\",\r\n                    selectedXAxisOption: \"Hourly\",\r\n                    fromDate:{},\r\n                    toDate:{}\r\n                },\r\n                chartData: {\r\n                    labels: [],\r\n                    datasets: []\r\n                }\r\n            }, incident: {\r\n                filter: {\r\n                    selectedCustomDateRange: \"Today\",\r\n                    selectedXAxisOption: \"Hourly\",\r\n                    fromDate:{},\r\n                    toDate:{}\r\n                },\r\n                chartData: {\r\n                    labels: [],\r\n                    datasets: []\r\n                }\r\n            },\r\n        };\r\n\r\n        this.getIncidentVehicleCount = this.getIncidentVehicleCount.bind(this);\r\n        this.getAtccVehicleCount = this.getAtccVehicleCount.bind(this);\r\n        this.getBarChartOptions = this.getBarChartOptions.bind(this);\r\n        this.selectDateRange = this.selectDateRange.bind(this);\r\n        this.selectXAxisOption = this.selectXAxisOption.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.getDateRangeOptions = this.getDateRangeOptions.bind(this);\r\n        this.getXAxisOptions = this.getXAxisOptions.bind(this);\r\n        this.handleDateRangeChange = this.handleDateRangeChange.bind(this);\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n    showCustomDateRangeModal(graphName){\r\n        this.setState({\r\n          isOpencustomDateRangeModal: graphName,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        this.setState({\r\n          isOpencustomDateRangeModal: \"\",\r\n        });\r\n      };\r\n\r\n    selectDateRange(graphName, selectedCustomDateRangeEnum, selectedCustomDateRangeMoment) {\r\n        let {isOpencustomDateRangeModal} = this.state;\r\n        let graph = this.state[graphName];\r\n        graph.filter.selectedCustomDateRange = selectedCustomDateRangeEnum;\r\n        let fromToDate = DashboardService.extractFromToDate(graph.filter.selectedCustomDateRange, selectedCustomDateRangeMoment);\r\n        graph.filter.fromDate = fromToDate.from_date;\r\n        graph.filter.toDate = fromToDate.to_date;\r\n\r\n\r\n        if(selectedCustomDateRangeEnum=== \"Custom\"){\r\n            isOpencustomDateRangeModal = \"\"\r\n        }\r\n        this.setState({[graphName]: graph, isOpencustomDateRangeModal}, () => {\r\n            this.refresh();\r\n        });\r\n\r\n    }\r\n\r\n    selectXAxisOption(graphName, selectedXAxisOption) {\r\n        let graph = this.state[graphName];\r\n        graph.filter.selectedXAxisOption = selectedXAxisOption;\r\n        this.setState({[graphName]: graph}, () => {\r\n            this.refresh();\r\n        });\r\n    }\r\n\r\n    refresh() {\r\n\r\n        this.getAtccVehicleCount(this.state.atcc.filter.fromDate, this.state.atcc.filter.toDate, this.state.atcc.filter.selectedXAxisOption);\r\n\r\n        this.getIncidentVehicleCount(this.state.incident.filter.fromDate, this.state.incident.filter.toDate, this.state.incident.filter.selectedXAxisOption);\r\n    }\r\n\r\n\r\n    getAtccVehicleCount(from_date, to_date, xAxis) {\r\n        let {atcc} = this.state;\r\n        atcc.chartData = {\r\n            labels: [],\r\n            datasets: []\r\n        };\r\n        DashboardService.getAtccVehicleCount(from_date, to_date, xAxis).then(resposne => {\r\n\r\n            let rawData = resposne.data;\r\n            if (rawData && rawData.length > 0) {\r\n                //let labelDates = DashboardService.enumerateDaysBetweenDates(from_date, to_date);\r\n                let labelDates = [];\r\n\r\n                let rawDataByVehicleData = [];\r\n                for (let i in rawData) {\r\n\r\n                    if (!labelDates.includes(rawData[i].date)) {\r\n                        labelDates.push(rawData[i].date)\r\n                    }\r\n\r\n                    if (!rawDataByVehicleData[rawData[i].vehicleType]) {\r\n                        rawDataByVehicleData[rawData[i].vehicleType] = {};\r\n                    }\r\n                    if (!rawDataByVehicleData[rawData[i].vehicleType][rawData[i].date]) {\r\n                        rawDataByVehicleData[rawData[i].vehicleType][rawData[i].date] = rawData[i];\r\n                    }\r\n                }\r\n                atcc.chartData.labels = labelDates;\r\n                let vehicleTypeIndex = 0;\r\n                for (let vehicleType in rawDataByVehicleData) {\r\n\r\n                    let color = DashboardService.getColor(vehicleTypeIndex);\r\n                    let dataSet = {\r\n                        label: vehicleType,\r\n                        data: [],\r\n                        backgroundColor: color\r\n                    };\r\n\r\n                    for (let i in labelDates) {\r\n                        if (rawDataByVehicleData[vehicleType][labelDates[i]]) {\r\n                            dataSet.data.push(rawDataByVehicleData[vehicleType][labelDates[i]].vehicleCount);\r\n                        } else {\r\n                            dataSet.data.push(0);\r\n                        }\r\n                    }\r\n                    atcc.chartData.datasets.push(dataSet);\r\n                    vehicleTypeIndex++;\r\n                }\r\n            }\r\n            this.setState({atcc});\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    getIncidentVehicleCount(from_date, to_date, xAxis) {\r\n        let {incident} = this.state;\r\n        incident.chartData = {\r\n            labels: [],\r\n            datasets: []\r\n        };\r\n        DashboardService.getIncidentVehicleCount(from_date, to_date, xAxis).then(resposne => {\r\n\r\n            let helmetMissingIncidents = resposne.data.helmetMissingIncidents;\r\n            let reverseDirectionIncidents = resposne.data.reverseDirectionIncidents;\r\n\r\n            //Get all unique labels(timestamps) from both type of incidents\r\n            let labels = [];\r\n            for (let i in reverseDirectionIncidents) {\r\n                if (xAxis === \"Hourly\") {\r\n                    reverseDirectionIncidents[i].date = parseInt(reverseDirectionIncidents[i].date);\r\n                }\r\n                if (!labels.includes(reverseDirectionIncidents[i].date)) {\r\n                    labels.push(reverseDirectionIncidents[i].date);\r\n                }\r\n            }\r\n\r\n            for (let i in helmetMissingIncidents) {\r\n                if (xAxis === \"Hourly\") {\r\n                    helmetMissingIncidents[i].date = parseInt(helmetMissingIncidents[i].date);\r\n                }\r\n                if (!labels.includes(helmetMissingIncidents[i].date)) {\r\n                    labels.push(helmetMissingIncidents[i].date);\r\n                }\r\n            }\r\n\r\n            // sort the labels, as it is a timeseries\r\n            if (xAxis === \"Hourly\") {\r\n                labels.sort((a, b) => a - b);\r\n            }\r\n            if (xAxis === \"Daily\") {\r\n                labels.sort((a, b) => new Moment(a).format('YYYY-MM-DD') - new Moment(b).format('YYYY-MM-DD'))\r\n            }\r\n\r\n            //prepare dataset\r\n            let helmetMissingDataset = {\r\n                label: \"Without Helmet\",\r\n                data: [],\r\n                backgroundColor: DashboardService.getColor(0)\r\n            };\r\n            let reverseDirectionDataset = {\r\n                label: \"Reverse Direction\",\r\n                data: [],\r\n                backgroundColor: DashboardService.getColor(2)\r\n            };\r\n\r\n            //fill the value of dataset for each label\r\n            let dataValue = 0;\r\n            let index = -1;\r\n            for (let i in labels) {\r\n                dataValue = 0;\r\n                index = CommonService.findIndex(helmetMissingIncidents, 'date', labels[i]);\r\n                if (index > -1) {\r\n                    dataValue = helmetMissingIncidents[index].vehicleCount;\r\n                }\r\n                helmetMissingDataset.data.push(dataValue);\r\n\r\n                dataValue = 0;\r\n                index = CommonService.findIndex(reverseDirectionIncidents, 'date', labels[i]);\r\n                if (index > -1) {\r\n                    dataValue = reverseDirectionIncidents[index].vehicleCount;\r\n                }\r\n                reverseDirectionDataset.data.push(dataValue);\r\n            }\r\n\r\n            //finalize it with setState\r\n            incident.chartData.labels = labels;\r\n            incident.chartData.datasets.push(helmetMissingDataset);\r\n            incident.chartData.datasets.push(reverseDirectionDataset);\r\n            this.setState({incident});\r\n        }).catch(error => {\r\n            this.setState({incident});\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    handleDateRangeChange(dates, dateString){\r\n\r\n        let startDate = dates[0].toDate();\r\n        let endDate = dates[1].toDate();\r\n        this.setState( () => {\r\n                    this.refresh();\r\n                });\r\n         console.log(dates, dateString);\r\n    }\r\n\r\n    getXAxisOptions(graphName) {\r\n        return (<Menu>\r\n\r\n            <Menu.Item key=\"1\"\r\n                       onClick={() => this.selectXAxisOption(graphName, \"Hourly\")}>\r\n                Hourly\r\n            </Menu.Item>\r\n            <Menu.Item key=\"5\"\r\n                       onClick={() => this.selectXAxisOption(graphName, \"Daily\")}>\r\n                Daily\r\n            </Menu.Item>\r\n        </Menu>)\r\n    }\r\n\r\n    getDateRangeOptions(graphName) {\r\n        return (\r\n            <Menu>\r\n                <Menu.Item key=\"1\" onClick={() => this.selectDateRange(graphName, \"Today\")}>\r\n                    Today\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\" onClick={() => this.selectDateRange(graphName, \"Yesterday\")}>\r\n                    Yesterday\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\" onClick={() => this.selectDateRange(graphName, \"This week\")}>\r\n                    This week\r\n                </Menu.Item>\r\n                <Menu.Item key=\"4\" onClick={() => this.selectDateRange(graphName, \"Last week\")}>\r\n                    Last week\r\n                </Menu.Item>\r\n                <Menu.Item key=\"5\" onClick={() => this.selectDateRange(graphName, \"This month\")}>\r\n                    This month\r\n                </Menu.Item>\r\n                <Menu.Item key=\"6\" onClick={() => this.selectDateRange(graphName, \"This year\")}>\r\n                    This year\r\n                </Menu.Item>\r\n                <Menu.Item key=\"7\" onClick={() => this.selectDateRange(graphName, \"Last year\")}>\r\n                    Last year\r\n                </Menu.Item>\r\n                <Menu.Item  onClick={() =>this.showCustomDateRangeModal(graphName)}>\r\n                    Custom\r\n                </Menu.Item>\r\n\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    getBarChartOptions(chartName) {\r\n        let yAxisScaleLabel = \"Day\";\r\n        if (this.state[chartName].filter.selectedXAxisOption === \"Hourly\") {\r\n            yAxisScaleLabel = \"Hours(24-hour)\"\r\n        }\r\n        let yAxisLabel = \"Vehicles\";\r\n        if (chartName === \"incident\") {\r\n            yAxisLabel = \"Challans\"\r\n        }\r\n\r\n        let options = {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            animation: {\r\n                duration: 0\r\n            },\r\n            hover: {\r\n                animationDuration: 0\r\n            },\r\n            responsiveAnimationDuration: 0,\r\n            legend: {\r\n                position: 'right'\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }, scaleLabel: {\r\n                        display: true,\r\n                        labelString: yAxisScaleLabel\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }, scaleLabel: {\r\n                        display: true,\r\n                        labelString: yAxisLabel\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        let {atcc, incident} = this.state;\r\n        const atccChartOptions = this.getBarChartOptions(\"atcc\");\r\n        const incidentChartOptions = this.getBarChartOptions(\"incident\");\r\n        return (\r\n            <div>\r\n            <div>\r\n\r\n                    <Modal\r\n                     onCancel={this.handleCancel}\r\n                      title=\"Custom Date Range\"\r\n                      visible={this.state.isOpencustomDateRangeModal ? true : false}\r\n                      footer={[\r\n                      ]}\r\n\r\n                    >\r\n                         <RangePicker\r\n                          onChange={(changedDateRange)=> this.selectDateRange(this.state.isOpencustomDateRangeModal, \"Custom\", changedDateRange)} />\r\n                    </Modal>\r\n                  </div>\r\n                <div>\r\n                    <Card title={<div>ATCC\r\n                        &nbsp;\r\n                        <Dropdown overlay={() => this.getDateRangeOptions(\"atcc\")}>\r\n                            <Button>\r\n                                {atcc.filter.selectedCustomDateRange ? atcc.filter.selectedCustomDateRange : \"Select\"}\r\n                                <Icon\r\n                                    type=\"down\"/>\r\n                            </Button>\r\n                        </Dropdown>\r\n                        &nbsp;<Dropdown overlay={() => this.getXAxisOptions(\"atcc\")}>\r\n                            <Button>\r\n                                {atcc.filter.selectedXAxisOption ? atcc.filter.selectedXAxisOption : \"Select\"} <Icon\r\n                                type=\"down\"/>\r\n                            </Button>\r\n                        </Dropdown>\r\n                    </div>}>\r\n                        <Line data={atcc.chartData} options={atccChartOptions}/>\r\n\r\n                    </Card>\r\n                    <br/>\r\n                    <Card title={<div>Incidents\r\n                        &nbsp;\r\n                        <Dropdown overlay={() => this.getDateRangeOptions(\"incident\")}>\r\n                            <Button>\r\n                                {incident.filter.selectedCustomDateRange ? incident.filter.selectedCustomDateRange : \"Select\"}\r\n                                <Icon\r\n                                    type=\"down\"/>\r\n                            </Button>\r\n                        </Dropdown>\r\n                        &nbsp;<Dropdown overlay={() => this.getXAxisOptions(\"incident\")}>\r\n                            <Button>\r\n                                {incident.filter.selectedXAxisOption ? incident.filter.selectedXAxisOption : \"Select\"}\r\n                                <Icon\r\n                                    type=\"down\"/>\r\n                            </Button>\r\n                        </Dropdown>\r\n                    </div>}>\r\n                        <Line data={incident.chartData} options={incidentChartOptions}/>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import axios from './axios';\r\n\r\nclass FeedService {\r\n\r\n    static Instance() {\r\n        return new FeedService()\r\n    }\r\n\r\n    getFeeds() {\r\n        return axios.get('/api/feeds');\r\n    }\r\n\r\n    getFeed(feed) {\r\n        return axios.get('/api/feed/' + feed.ID);\r\n    }\r\n\r\n    addFeed(feed) {\r\n        return axios.post('/api/feed/', feed)\r\n    }\r\n\r\n    removeFeed(feed) {\r\n        return axios.delete('/api/feed/' + feed.ID);\r\n    }\r\n\r\n    startFeed(feed) {\r\n        return axios.get('/api/feed/' +feed.ID+ '/start');\r\n    }\r\n\r\n    stopFeed(feed) {\r\n        return axios.get('/api/feed/' +feed.ID+ '/stop');\r\n    }\r\n}\r\n\r\nexport default FeedService.Instance()\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, Col, Form, Input, Row, Tag, Typography} from \"antd\";\r\nimport FeedService from \"../services/FeedService\";\r\nimport {EventBus} from \"../components/event\";\r\nconst {Text} = Typography;\r\n\r\nexport default class FeedView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            videoVisible: false,\r\n            feeds: {},\r\n        };\r\n\r\n        EventBus.subscribe('feed-refresh', (event) => this.refresh());\r\n        this.removeFeed = this.removeFeed.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        FeedService.getFeeds().then(request => {\r\n            this.setState({\"feeds\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    removeFeed(feed) {\r\n        FeedService.removeFeed(feed).then(() => {\r\n            this.refresh()\r\n        })\r\n    }\r\n\r\n    startFeed(feed) {\r\n        FeedService.startFeed(feed).then(() => {\r\n            //this should force re-render :)\r\n            this.setState({\"refresh_state\": Math.random()})\r\n        })\r\n    }\r\n\r\n    stopFeed(feed) {\r\n        FeedService.stopFeed(feed).then(() => {\r\n            //this should force re-render :)\r\n            this.setState({\"refresh_state\": Math.random()})\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let feeds = this.state.feeds;\r\n\r\n        if (this.state.loading || !this.state.feeds || this.state.feeds.length === 0) {\r\n            feeds = []\r\n        }\r\n\r\n        const WrappedFeedForm = Form.create({name: 'feed_form'})(FeedForm);\r\n\r\n        return (\r\n            <Row gutter={16}>\r\n                {\r\n                    feeds.map((feed, index) =>\r\n\r\n                        <Col span={8} key={index}>\r\n\r\n                            <Card\r\n                                title={\r\n                                    <Tag color=\"#f50\">{feed.site}/{feed.location}/{feed.name}</Tag>\r\n                                }\r\n                                cover={<img alt=\"feedview\" src={\"/api/feed/\" + feed.ID+ \"/view\"}/>}\r\n                                bordered={true}\r\n                                actions={[\r\n                                    <Button onClick={() => {this.startFeed(feed)}}>Start</Button>,\r\n                                    <Button onClick={() => {this.stopFeed(feed)}}>Stop</Button>,\r\n                                    <Button onClick={() => {this.removeFeed(feed)}}>Delete</Button>\r\n                                ]}\r\n                            >\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                }\r\n\r\n                <Col span={8} key={-1}>\r\n\r\n                    <Card bordered={true}>\r\n                        <WrappedFeedForm/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass FeedForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false,\r\n            loading: false,\r\n            loginError: '',\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        const form = this.props.form;\r\n        var feed = {};\r\n        feed.url = form.getFieldValue(\"url\");\r\n        feed.site = form.getFieldValue(\"site\");\r\n        feed.location = form.getFieldValue(\"location\");\r\n        feed.name = form.getFieldValue(\"name\");\r\n        let validationError;\r\n        if (!feed.url) {\r\n            validationError = \"Missing url\"\r\n        }\r\n\r\n        if (!feed.site) {\r\n            validationError = \"Missing site\"\r\n        }\r\n\r\n        if (!feed.location) {\r\n            validationError = \"Missing location\"\r\n        }\r\n\r\n        if (!feed.name) {\r\n            validationError = \"Missing name\"\r\n        }\r\n\r\n        if (validationError) {\r\n            this.setState({validationError: validationError});\r\n            return\r\n        }\r\n\r\n        console.log('saving feed', feed);\r\n        this.setState({submitted: true, loading: true});\r\n\r\n        FeedService.addFeed(feed).then(response => {\r\n            EventBus.publish('feed-refresh', {})\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {getFieldDecorator, getFieldsError} = this.props.form;\r\n        const validationError = this.state.validationError;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Item>\r\n                    {getFieldDecorator('url', {rules: [{required: true, message: 'enter feed url!'}],})(\r\n                        <Input addonBefore=\"Feed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\" placeholder=\"rtsp://\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('site', {rules: [{required: true, message: 'enter site!'}],})(\r\n                        <Input addonBefore=\"Site&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\r\n                               placeholder=\"Site (e.g. gurgaon)\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('location', {rules: [{required: true, message: 'enter location!'}],})(\r\n                        <Input addonBefore=\"Location\" placeholder=\"Location (e.g. 9th floor)\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('name', {rules: [{required: true, message: 'enter name!'}],})(\r\n                        <Input addonBefore=\"Name&nbsp;&nbsp;&nbsp;&nbsp;\" placeholder=\"Name (e.g. front gate )\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Button htmlType=\"submit\" type=\"primary\" disabled={hasErrors(getFieldsError())}>Add</Button>\r\n                {validationError && <Text type=\"danger\">{validationError}</Text>}\r\n            </Form>\r\n        )\r\n    }\r\n}","import axios from './axios';\r\nimport { authHeader } from '../helpers/auth-header';\r\nimport { config } from '../helpers/config'\r\n\r\nclass DeviceService {\r\n\r\n    static Instance() {\r\n        return new DeviceService()\r\n    }\r\n\r\n    getDevice() {\r\n       return axios.get('/api/device');\r\n    }\r\n\r\n    getDeviceConfig() {\r\n        return axios.get('/api/device/config');\r\n    }\r\n\r\n}\r\n\r\nexport default DeviceService.Instance()","import React, {Component} from \"react\";\r\nimport {Card, Icon} from 'antd';\r\nimport DeviceService from \"../services/DeviceService\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class DeviceView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {loading:true, device:{}}\r\n    }\r\n\r\n    componentDidMount() {\r\n        DeviceService.getDevice().then(request => {\r\n            this.setState({\"device\" : request.data, loading : false})\r\n        },\r\n        error =>{\r\n            console.log(\"error\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let loading = this.state.loading;\r\n        let device = this.state.device;\r\n\r\n        if (loading) {\r\n            return (<div>Loading..</div>)\r\n        }\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Card title=\"Device details\" style={{width: 300}} extra={<Link to=\"/device/conf\"><Icon type=\"setting\" /></Link>}>\r\n                    <p>ID: {device.fingerprint}</p>\r\n                    <p>Name: {device.name}</p>\r\n                    <p>Model: {device.model}</p>\r\n                    <p>License: {device.license}</p>\r\n                    <p>Status: {device.status}</p>\r\n                    <p>RegisteredTo: {device.registeredTo}</p>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Table, Divider,Row,Col,Card,Form,Button,Input,Icon,Typography,Select,Modal,message} from 'antd';\r\nimport UserService from \"../services/UserService\";\r\nimport {EventBus} from \"../components/event\";\r\nimport '../form.css';\r\nconst { Column} = Table;\r\nconst {Text} = Typography;\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nconst ButtonGroup = Button.Group;\r\nexport default class UserListView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            users: [],\r\n            showUserDetails:false,\r\n            mode:\"Add\",\r\n            user:{userName:\"\", lastName:\"\",firstName:\"\",email:\"\",password:\"\",roles:[],id:\"\"},\r\n            roles:[],\r\n            visible: false ,\r\n        }\r\n\r\n\r\n        this.addUser=this.addUser.bind(this);\r\n        this.refresh=this.refresh.bind(this);\r\n        this.refreshUsers=this.refreshUsers.bind(this);\r\n        this.close=this.close.bind(this);\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh(){\r\n        UserService.getUsers().then(request => {\r\n            this.setState({\"users\": request.data, loading: false,showUserDetails:false})\r\n        },\r\n        error=>{\r\n          message.error(error.response.data.message);\r\n        });\r\n\r\n        UserService.getRoles().then(request =>{\r\n            this.setState({roles:request.data})\r\n        },\r\n        error=>{\r\n          message.error(error.response.data.message);\r\n        });\r\n    }\r\n\r\n    refreshUsers(){\r\n        this.refresh();\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n    };\r\n\r\n\r\n    addUser(){\r\n        this.setState({mode:\"Add\",showUserDetails:true, user:{userName:\"\", lastName:\"\",firstName:\"\",email:\"\",password:\"\"}})\r\n    }\r\n\r\n    showUser(userId){\r\n        this.setState({showUserDetails:true,mode:\"Edit\"})\r\n        UserService.getUser(userId).then(response =>{\r\n            this.setState({user : response.data})\r\n        },\r\n        error=>{\r\n          message.error(error.response.data.message);\r\n        });\r\n    }\r\n\r\n    close(){\r\n        this.setState({showUserDetails:false})\r\n    }\r\n\r\n     showDeleteConfirm(userId,refresh) {\r\n      confirm({\r\n        title: 'Are you sure you want to make user inactive?',\r\n        okText: 'Yes',\r\n        okType: 'danger',\r\n        cancelText: 'No',\r\n        onOk() {\r\n          console.log('OK');\r\n          UserService.deleteUser(userId).then(response=>{\r\n            message.success(\"User Deactivated!\");\r\n            refresh();\r\n          },\r\n          error=>{\r\n            message.error(error.response.data.message);\r\n          });\r\n\r\n\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel');\r\n        },\r\n      });\r\n     }\r\n\r\n    render() {\r\n\r\n     const WrappedUserForm = Form.create({name: 'user_form'})(UserForm);\r\n     const showUserDetails=this.state.showUserDetails;\r\n     const mode=this.state.mode;\r\n     const user=this.state.user;\r\n\r\n        return (\r\n         <div>\r\n            <Row gutter={2}>\r\n                <Col span={2}>\r\n                    <Button type=\"primary\" onClick={this.addUser}>\r\n                         + ADD\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row gutter={24}>\r\n                <Col span={12}>\r\n                    <Card\r\n                      className=\"limitable\"\r\n                      bodyStyle={{ padding: \"0px\", width: \"100%\" }}\r\n                    >\r\n                     <Table dataSource={this.state.users} pagination={false} scroll={{ x: true}} >\r\n                            <Column title=\"Username\" dataIndex=\"userName\" key=\"userName\" render={(text, record) => (\r\n                                <span><a href={\"user/\" + record.ID}>{text}</a></span>\r\n                            )}/>\r\n                            <Column title=\"Email\" dataIndex=\"email\" key=\"email\" />\r\n                            <Column title=\"Token\" dataIndex=\"token\" key=\"token\" />\r\n                            <Column title=\"Action\" key=\"action\" render={(text, record) => (\r\n                                    <span>\r\n                                        <a onClick={this.showUser.bind(this,record.id)}>Edit</a>\r\n                                        <Divider type=\"vertical\" />\r\n                                        <a onClick={this.showDeleteConfirm.bind(this,record.id,this.refresh)}>Delete</a>\r\n                                    </span>\r\n                                )}\r\n                            />\r\n                     </Table>\r\n                    </Card>\r\n                </Col>\r\n\r\n               {showUserDetails ?\r\n                 <Col span={12}>\r\n                   <WrappedUserForm user={this.state.user} roles={this.state.roles} refresh={this.refreshUsers} close={this.close} mode={this.state.mode}/>\r\n                 </Col>\r\n                :null}\r\n\r\n            </Row>\r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass UserForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user:{},\r\n            loading: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.close = this.close.bind(this);\r\n\r\n    }\r\n\r\n    close(){\r\n        this.props.close();\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const form = this.props.form;\r\n        var user = {};\r\n        user.firstName = form.getFieldValue(\"firstname\");\r\n        user.userName = form.getFieldValue(\"username\");\r\n        user.lastName = form.getFieldValue(\"lastname\");\r\n        user.email = form.getFieldValue(\"email\");\r\n        user.password = form.getFieldValue(\"password\");\r\n        user.roles=form.getFieldValue(\"role\");\r\n        user.id=this.props.user.id;\r\n        let validationError;\r\n        if (!user.firstName) {\r\n            validationError = \"Missing firstname\"\r\n        }\r\n        if (!user.userName) {\r\n            validationError = \"Missing username\"\r\n        }\r\n        if (!user.lastName) {\r\n            validationError = \"Missing lastname\"\r\n        }\r\n        if (!user.email) {\r\n            validationError = \"Missing email\"\r\n        }\r\n\r\n        if(user.roles.length==0){\r\n            validationError=\"Missing role\"\r\n        }\r\n        if (validationError) {\r\n            this.setState({validationError: validationError});\r\n            return\r\n        }\r\n        this.setState({loading: true});\r\n        console.log('saving user', user);\r\n        UserService.createUser(user).then(response => {\r\n            if(user.id){\r\n                 message.success(\"User updated\")\r\n            }\r\n            else{\r\n                 message.success(\"User created\")\r\n            }\r\n            this.setState({loading: false});\r\n            this.props.refresh();\r\n\r\n        }).catch(error=> {\r\n            console.log(error);\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n        const validationError = this.state.validationError;\r\n\r\n         return (\r\n            <Card title={this.props.mode==\"Add\"? \"Add User\" : \"Edit User\"}>\r\n\r\n               <Form onSubmit={this.handleSubmit} className=\"user-form\" >\r\n                    <Form.Item label=\"Username\" className=\"formitem\">\r\n                        {getFieldDecorator('username', {\r\n                            initialValue:this.props.user.userName,\r\n                            rules: [{required: true, message: 'Please input your username!'}],\r\n                        })(\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Firstname\" className=\"formitem\">\r\n                        {getFieldDecorator('firstname', {\r\n                            initialValue:this.props.user.firstName,\r\n                            rules: [{required: true, message: 'Please input your Firstname!'}],\r\n                        })(\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Firstname\"\r\n\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Lastname\" className=\"formitem\">\r\n                        {getFieldDecorator('lastname', {\r\n                            initialValue:this.props.user.lastName,\r\n                            rules: [{required: true, message: 'Please input your lastname!'}],\r\n                        })(\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Lastname\"\r\n\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Email\" className=\"formitem\">\r\n                        {getFieldDecorator('email', {\r\n                            initialValue:this.props.user.email,\r\n                            rules: [{required: true, message: 'Please input your email!'}],\r\n                        })(\r\n                            <Input\r\n                                type=\"email\"\r\n                                placeholder=\"email\"\r\n\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Role\" className=\"formitem\">\r\n                          {getFieldDecorator('role', {\r\n                            initialValue:this.props.user.roles,\r\n                            rules: [{ required: true, message: 'Please select role!' }],\r\n                          })(\r\n                            <Select mode=\"multiple\"\r\n                              placeholder=\"Select a role\"\r\n                            >\r\n                            {this.props.roles.map(role =>\r\n                                 <option key={role.id} value={role.name} >{role.name}</option>\r\n                             )}\r\n\r\n                            </Select>,\r\n                              )}\r\n                    </Form.Item>\r\n                    <br/>\r\n                    <div align=\"right\">\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"user-form-button\"  size=\"small\" loading={this.state.loading}>\r\n                            Save\r\n                        </Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button type=\"secondary\" className=\"user-form-button\"  size=\"small\" onClick={this.close}>\r\n                            Close\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {validationError && <Text type=\"danger\">{validationError}</Text>}\r\n               </Form>\r\n            </Card>\r\n\r\n\r\n         )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport DeviceService from \"../services/DeviceService\";\r\nimport { Tabs } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class DeviceConfigView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {loading:true, deviceconfig:{}}\r\n    }\r\n\r\n    componentDidMount() {\r\n        DeviceService.getDeviceConfig().then(request => {\r\n            this.setState({\"deviceconfig\" : request.data, loading : false})\r\n        })\r\n    }\r\n\r\n    onTabChange(tab) {\r\n        console.log(\"tab changed\", tab)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Tabs defaultActiveKey=\"1\" onChange={this.onTabChange}>\r\n                <TabPane tab=\"Feed\" key=\"common\">\r\n                    Feed details\r\n                </TabPane>\r\n                <TabPane tab=\"Basic Intrusion\" key=\"bi\">\r\n                    Basic Intrusion\r\n                </TabPane>\r\n                <TabPane tab=\"Advanced Intrusion\" key=\"ai\">\r\n                    Advanced Intrusion\r\n                </TabPane>\r\n            </Tabs>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport UserService from \"../services/UserService\";\r\nimport {EventBus} from \"../components/event\";\r\nimport {Button, Col, Form, Icon, Input, Row, Typography, Card} from 'antd';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {history} from \"../helpers/history\";\r\nimport {Router} from 'react-router';\r\n\r\nconst {Text} = Typography;\r\n\r\n\r\nclass LoginView extends Component {\r\n\r\n    componentDidMount() {\r\n        if (UserService.isLoggedIn()) {\r\n            history.push(\"/#/\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const WrappedLoginForm = Form.create({name: 'login_form'})(LoginForm);\r\n        return (\r\n            <WrappedLoginForm/>\r\n        )\r\n    }\r\n}\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false,\r\n            loading: false,\r\n            loginError: '',\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        const form = this.props.form;\r\n        const username = form.getFieldValue(\"username\");\r\n        const password = form.getFieldValue(\"password\");\r\n        this.setState({submitted: true});\r\n\r\n        if (!(username && password)) {\r\n            return\r\n        }\r\n\r\n        this.setState({loading: true});\r\n        let self = this;\r\n        UserService.login(username, password)\r\n            .then(token => {\r\n                const {from} = history.state || {from: {pathname: \"/\"}};\r\n                history.push(from);\r\n               /* EventBus.publish('login-logout', {});*/\r\n                window.location.reload();\r\n\r\n            }).catch(error => {\r\n            this.setState({\r\n                loginError: \"Something went wrong, please try again\",\r\n                loading: false\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n        const loginError = this.state.loginError;\r\n\r\n        return (\r\n            <Row>\r\n                <Col xl={{span: 8}} lg={{span: 6}} md={{span: 4}} sm={{span: 2}} xs={{span: 2}}/>\r\n                <Col xl={{span: 8}} lg={{span: 12}} md={{span: 12}} sm={{span: 24}} xs={{span: 24}}>\r\n                    <Card title={ <img style={{}} src={\"synlabs-logo-full.png\"}/>}>\r\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                            <Form.Item>\r\n                                {getFieldDecorator('username', {\r\n                                    rules: [{required: true, message: 'Please input your username!'}],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                        placeholder=\"Username\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [{required: true, message: 'Please input your Password!'}],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block className=\"login-form-button\">\r\n                                    Log in\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                        {loginError && <Text type=\"danger\">{loginError}</Text>\r\n                        }\r\n                    </Card>\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(LoginView);\r\n","\r\nimport axios from \"./axios\";\r\n\r\nclass TrafficIncidentService {\r\n\r\n    static Instance() {\r\n        return new TrafficIncidentService()\r\n    }\r\n\r\n    getIncidents(filter) {\r\n        return axios.post('/api/traffic/incident/', filter);\r\n    }\r\n\r\n    archiveIncident(incident) {\r\n        return axios.delete('/api/traffic/incident/' + incident.id);\r\n    }\r\n}\r\n\r\nexport default TrafficIncidentService.Instance()","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    Col,\r\n    Collapse,\r\n    DatePicker,\r\n    Divider,\r\n    Empty,\r\n    Icon,\r\n    message,\r\n    Modal,\r\n    Pagination,\r\n    Row,\r\n    Table,\r\n    Tag,\r\n    TimePicker\r\n} from 'antd';\r\nimport IncidentService from \"../services/TrafficIncidentService\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Moment from 'react-moment';\r\n\r\nconst {Column, ColumnGroup} = Table;\r\nconst {Panel} = Collapse;\r\nconst ButtonGroup = Button.Group;\r\nconst {confirm} = Modal;\r\n\r\n\r\nexport default class IncidentListView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            videoVisible: false,\r\n            layout: \"list\",\r\n            incidents: {},\r\n            filter: {\r\n                page: 1,\r\n                pageSize: 10\r\n            }\r\n        };\r\n        this.handleDone = this.handleDone.bind(this);\r\n        this.archiveIncident = this.archiveIncident.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onFromDateChange = this.onFromDateChange.bind(this);\r\n        this.onFromTimeChange = this.onFromTimeChange.bind(this);\r\n\r\n        this.onToDateChange = this.onToDateChange.bind(this);\r\n        this.onToTimeChange = this.onToTimeChange.bind(this);\r\n        this.onPageChange = this.onPageChange.bind(this);\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        let self = this;\r\n        IncidentService.getIncidents(this.state.filter).then(response => {\r\n            console.log(\"daada\", response.data);\r\n            self.setState({\"incidents\": response.data, loading: false})\r\n        },\r\n        error => {\r\n            message.error(error.response.data.message);\r\n        })\r\n    }\r\n\r\n    //cant use refresh to read from state as state may not have been set\r\n    refreshNow(filter) {\r\n        IncidentService.getIncidents(filter).then(request => {\r\n            this.setState({\"incidentsresponse\": request.data, loading: false, filter: filter})\r\n        })\r\n    }\r\n\r\n    archiveIncident(incident) {\r\n        IncidentService.archiveIncident(incident).then(() => {\r\n                this.refresh();\r\n                message.success(\"Incident successfully archived!\");\r\n            },\r\n            error => {\r\n                message.error(error.response.data.message);\r\n            })\r\n    }\r\n\r\n    changeLayout(layout) {\r\n        this.setState({\"layout\": layout});\r\n    }\r\n\r\n    showVideo(videoid) {\r\n\r\n        let cp = ReactPlayer.canPlay(\"/api/incident/video/\" + this.state.videoid + \"/video.mp4\");\r\n        this.setState({\r\n            videoVisible: true,\r\n            videoid: videoid\r\n        });\r\n    };\r\n\r\n    handleDone() {\r\n        this.setState({\r\n            videoVisible: false,\r\n            videoid: \"\"\r\n        });\r\n    };\r\n\r\n    onFromDateChange(date) {\r\n        let filter = this.state.filter;\r\n        if (date != null) {\r\n            filter.fromDate = date.format(\"YYYY-MM-DD\");\r\n        } else {\r\n            filter.fromDate = null;\r\n        }\r\n        this.setState({filter: filter});\r\n    }\r\n\r\n    onFromTimeChange(time) {\r\n\r\n        let filter = this.state.filter;\r\n        if (time != null) {\r\n            filter.fromTime = time.format(\"HH:mm:ss\");\r\n        } else {\r\n            filter.fromTime = null;\r\n        }\r\n        this.setState({filter: filter});\r\n    }\r\n\r\n    onToDateChange(date) {\r\n        let filter = this.state.filter;\r\n        if (date != null) {\r\n            filter.toDate = date.format(\"YYYY-MM-DD\");\r\n        } else {\r\n            filter.toDate = null;\r\n        }\r\n        this.setState({filter: filter});\r\n    }\r\n\r\n    onToTimeChange(time) {\r\n        let filter = this.state.filter;\r\n        if (time != null) {\r\n            filter.toTime = time.format(\"HH:mm:ss\");\r\n        } else {\r\n            filter.toTime = null;\r\n        }\r\n        this.setState({filter: filter});\r\n    }\r\n\r\n    onPageChange(page, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter)\r\n    }\r\n\r\n    onPageSizeChange(current, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter);\r\n    }\r\n\r\n    showDeleteConfirm(incident, refresh) {\r\n        confirm({\r\n            title: 'Are you sure you want to archive the incident ?',\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk() {\r\n                console.log('OK');\r\n                IncidentService.archiveIncident(incident).then(() => {\r\n                        refresh();\r\n                        message.success(\"Incident successfully archived!\");\r\n                    },\r\n                    error => {\r\n                        message.error(error.response.data.message);\r\n                    })\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let layout = this.state.layout;\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Modal\r\n                    title=\"Video\"\r\n                    visible={this.state.videoVisible}\r\n                    onOk={this.handleDone}\r\n                    onCancel={this.handleDone}\r\n                >\r\n                    {this.state.videoVisible ? (<ReactPlayer controls={true}\r\n                                                             url={\"/api/incident/video/\" + this.state.videoid + \"/video.mp4\"}\r\n                                                             width=\"300\"/>) : (<div><Empty/></div>)}\r\n                </Modal>\r\n\r\n                <Collapse bordered={false} defaultActiveKey={['1', '2']}>\r\n                    <Panel header=\"Filter\" key=\"1\">\r\n                        <span>From: </span>\r\n                        <DatePicker onChange={this.onFromDateChange}/>&nbsp;&nbsp;\r\n                        <TimePicker minuteStep={15} secondStep={60} onChange={this.onFromTimeChange}/>&nbsp;&nbsp;\r\n                        <span>To: </span>\r\n                        <DatePicker onChange={this.onToDateChange}/>&nbsp;&nbsp;\r\n                        <TimePicker minuteStep={15} secondStep={60} onChange={this.onToTimeChange}/>&nbsp;&nbsp;\r\n\r\n                        <ButtonGroup>\r\n                            <Button type={layout === \"list\" ? \"primary\" : \"\"} size=\"small\" icon=\"unordered-list\"\r\n                                    onClick={() => {\r\n                                        this.changeLayout(\"list\")\r\n                                    }}/>\r\n                            <Button type={layout === \"table\" ? \"primary\" : \"\"} size=\"small\" icon=\"table\"\r\n                                    onClick={() => {\r\n                                        this.changeLayout(\"table\")\r\n                                    }}/>\r\n                        </ButtonGroup>&nbsp;&nbsp;\r\n                        <Button onClick={() => {\r\n                            this.refresh()\r\n                        }}><Icon type=\"reload\"/>Reload</Button>\r\n                    </Panel>\r\n                    <Panel header=\"Incidents\" key=\"2\">\r\n                        {layout === \"table\" ? (this.renderGrid()) : (this.renderTable())}\r\n                    </Panel>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderGrid() {\r\n\r\n        if (this.state.loading || !this.state.incidents || this.state.incidents.Total === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let incidents = this.state.incidents.events;\r\n        let count = this.state.incidents.totalPages * this.state.incidents.pageSize;\r\n\r\n\r\n        return <div style={{background: '#ECECEC', padding: '5px'}}>\r\n            <Row>\r\n                <Col>\r\n                    <Pagination onChange={this.onPageChange} onShowSizeChange={this.onPageSizeChange} showSizeChanger\r\n                                showQuickJumper\r\n                                defaultCurrent={1} total={count} current={this.state.filter.page}\r\n                                pageSize={this.state.filter.pageSize}/>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n                {\r\n                    incidents.map((incident, index) =>\r\n                        <Col span={8} key={index}>\r\n                            <Card\r\n                                title={\r\n                                    <div>\r\n                                        <Tag color=\"#f50\">{incident.eventType}</Tag>\r\n                                        <Tag color=\"#2db7f5\">{incident.eventDate}</Tag>\r\n                                        <Tag color=\"#87d068\"><span><Moment\r\n                                            format=\"LTS\">{incident.eventStart}</Moment></span><Icon\r\n                                            type=\"right\" hidden/><span hidden><Moment\r\n                                            format=\"LTS\">{incident.eventEnd}</Moment></span></Tag>\r\n                                        <Tag color=\"#108ee9\" hidden>{incident.eventDuration}s</Tag>\r\n                                    </div>\r\n                                }\r\n                                bordered={true}\r\n                                cover={<img alt=\"incident image\"\r\n                                            src={\"/api/incident/image/\" + incident.imageId + \"/image.jpg\"}/>}\r\n                                actions={[\r\n                                    <Icon type=\"right\" key=\"play\" onClick={() => this.showVideo(incident.videoId)}/>,\r\n                                    <Icon type=\"edit\" key=\"edit\"/>,\r\n                                    <Icon type=\"delete\" key=\"delete\"\r\n                                          onClick={this.showDeleteConfirm.bind(this, incident, this.refresh)}/>,\r\n                                ]}\r\n                            >\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n        </div>\r\n    }\r\n\r\n    renderTable() {\r\n\r\n        if (this.state.loading || !this.state.incidents || this.state.incidents.Total === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let incidents = this.state.incidents.events;\r\n        let count = this.state.incidents.totalPages * this.state.incidents.pageSize;\r\n\r\n        const paginationOptions = {\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            onShowSizeChange: this.onPageSizeChange,\r\n            onChange: this.onPageChange,\r\n            total: count\r\n        };\r\n\r\n        const pagination = {\r\n            ...paginationOptions,\r\n            total: count,\r\n            current: this.state.filter.page,\r\n            pageSize: this.state.filter.pageSize\r\n        };\r\n\r\n        return (\r\n            <Table dataSource={incidents} pagination={pagination}>\r\n                <Column title=\"ID\" dataIndex=\"id\" key=\"id\"/>\r\n                <Column title=\"Type\" dataIndex=\"eventType\" key=\"eventType\"/>\r\n                <Column title=\"Date\" dataIndex=\"eventDate\" key=\"eventDate\"/>\r\n                <Column title=\"Time\" dataIndex=\"eventStart\" key=\"eventStart\"\r\n                        render={eventStart => (<Moment format=\"LTS\">{eventStart}</Moment>)}/>\r\n                <Column title=\"Duration\" dataIndex=\"eventDuration\" key=\"eventDuration\"\r\n                        render={dur => (<span>{dur}s</span>)}/>\r\n                <Column title=\"Action\" key=\"action\" render={(text, incident) => (\r\n                    <span>\r\n                        <a onClick={() => this.showVideo(incident.videoId)}>Play</a>\r\n                        <Divider type=\"vertical\"/>\r\n                        <a onClick={this.showDeleteConfirm.bind(this, incident, this.refresh)}>Delete</a>\r\n                    </span>\r\n                )}/>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n","\r\nimport axios from './axios';\r\n\r\nclass TriggerService {\r\n\r\n    static Instance() {\r\n        return new TriggerService()\r\n    }\r\n\r\n    getTrigger() {\r\n        return axios.get('/api/trigger/');\r\n    }\r\n\r\n    getTriggers() {\r\n        return axios.get('/api/triggers');\r\n    }\r\n\r\n    createTrigger(trigger) {\r\n        return axios.post('/api/trigger/', trigger);\r\n    }\r\n\r\n    saveTrigger(trigger) {\r\n        return axios.put('/api/trigger/' + trigger.ID, trigger);\r\n    }\r\n\r\n    deleteTrigger(trigger) {\r\n        return axios.delete('/api/trigger/' + trigger.ID);\r\n    }\r\n}\r\n\r\nexport default TriggerService.Instance()","import React, {Component} from \"react\";\r\nimport {Slider, Button, Input} from \"antd\";\r\nimport TriggerService from \"../services/TriggerService\";\r\n\r\nexport default class TriggerSet extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n        this.onChange0 = this.onChange0.bind(this);\r\n        this.onChange1 = this.onChange1.bind(this);\r\n        this.onChange2 = this.onChange2.bind(this);\r\n        this.onChange3 = this.onChange3.bind(this);\r\n        this.onChange4 = this.onChange4.bind(this);\r\n        this.onChange5 = this.onChange5.bind(this);\r\n        this.onChange6 = this.onChange6.bind(this);\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n        this.saveTrigger = this.saveTrigger.bind(this);\r\n        this.deleteTrigger = this.deleteTrigger.bind(this);\r\n        this.setName = this.setName.bind(this);\r\n\r\n        this.state = {\r\n            trigger : this.props.trigger,\r\n            changed : false\r\n        }\r\n    }\r\n\r\n    onChange0(value) { this.onChangeValue(0, value)    }\r\n    onChange1(value) { this.onChangeValue(1, value)    }\r\n    onChange2(value) { this.onChangeValue(2, value)    }\r\n    onChange3(value) { this.onChangeValue(3, value)    }\r\n    onChange4(value) { this.onChangeValue(4, value)    }\r\n    onChange5(value) { this.onChangeValue(5, value)    }\r\n    onChange6(value) { this.onChangeValue(6, value)    }\r\n\r\n    onChangeValue(idx, value) {\r\n        let trigger = this.state.trigger;\r\n        trigger.TriggerDays[idx].Start = value[0];\r\n        trigger.TriggerDays[idx].End = value[1];\r\n        this.setState({trigger:trigger, changed: true})\r\n    }\r\n\r\n    saveTrigger() {\r\n\r\n        if (this.state.trigger.new) {\r\n            TriggerService.createTrigger(this.state.trigger)\r\n        } else {\r\n            TriggerService.saveTrigger(this.state.trigger)\r\n        }\r\n\r\n    }\r\n\r\n    NewTrigger() {\r\n        let trigger = {name:\"New\", TriggerDays: [], new:true};\r\n        for (let i=0;i<7;i++) {\r\n            trigger.TriggerDays.push({\r\n                Start:0,\r\n                End:24,\r\n                Day:i,\r\n            })\r\n        }\r\n        this.setState({trigger:trigger, changed: true})\r\n    }\r\n\r\n    setName(e, value) {\r\n        let trigger = this.state.trigger;\r\n        trigger.name = e.target.value;\r\n        this.setState({trigger:trigger, changed: true});\r\n    }\r\n\r\n    deleteTrigger() {\r\n        TriggerService.deleteTrigger(this.state.trigger)\r\n    }\r\n\r\n    ChangeTrigger(trigger) {\r\n        this.setState({trigger:trigger, changed: false})\r\n    }\r\n\r\n    render() {\r\n        let selected = this.state.trigger;\r\n        let changed = this.state.changed;\r\n\r\n        if (!selected) return (<div>Waiting..</div>);\r\n        let marks = {};\r\n        for (let i = 12; i <= 24; i++) {\r\n            let j = i - 12;\r\n            marks[j] = i + ':00'\r\n        }\r\n\r\n        for (let i = 0; i <= 12; i++) {\r\n            let j = i + 12;\r\n            marks[j] = (i < 10 ? '0' : '') + i + ':00'\r\n        }\r\n\r\n\r\n        selected.TriggerDays.map((day, idx) => {\r\n            let start = day.Start;\r\n            let end = day.End;\r\n            if (start > end) {\r\n                day.Start = start - 12;\r\n                day.End = end + 12\r\n            }\r\n        });\r\n\r\n        let dlist = selected.TriggerDays;\r\n\r\n        return (\r\n            <div>\r\n                {selected.new ? (<Input placeholder=\"Name\" onChange={this.setName}/>) : (<span>{selected.ID} - {selected.name}</span>)}\r\n                <div>\r\n                    <span>{this.days[dlist[0].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[0].Start, dlist[0].End]} onChange={this.onChange0}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[1].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[1].Start, dlist[1].End]} onChange={this.onChange1}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[2].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[2].Start, dlist[2].End]} onChange={this.onChange2}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[3].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[3].Start, dlist[3].End]} onChange={this.onChange3}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[4].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[4].Start, dlist[4].End]} onChange={this.onChange4}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[5].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[5].Start, dlist[5].End]} onChange={this.onChange5}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[6].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[6].Start, dlist[6].End]} onChange={this.onChange6}/>\r\n                </div>\r\n\r\n                <Button type=\"primary\" disabled={!changed} onClick={this.saveTrigger}>Save</Button>\r\n                <Button type=\"link\" disabled={changed} onClick={this.deleteTrigger}>Delete</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\nimport {Select, Button} from 'antd';\r\nimport TriggerService from \"../services/TriggerService\";\r\nimport TriggerSet from \"../components/TriggerSet\";\r\n\r\nconst {Option} = Select;\r\nexport default class TriggerView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            triggers: []\r\n        };\r\n\r\n        this.tsRef = React.createRef();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.newTrigger = this.newTrigger.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        TriggerService.getTriggers().then(request => {\r\n            this.setState({\r\n                triggers: request.data,\r\n                selected: request.data[0].ID,\r\n                selectedt: request.data[0],\r\n                loading: false\r\n            })\r\n        });\r\n    }\r\n\r\n    newTrigger() {\r\n        this.tsRef.current.NewTrigger();\r\n    }\r\n\r\n    handleChange(id) {\r\n\r\n        console.log(\"changing to ...\", id);\r\n\r\n        for (let i = 0; i < this.state.triggers.length; i++) {\r\n            console.log(\"checking:\", this.state.triggers[i].ID);\r\n            if (id == this.state.triggers[i].ID) {\r\n                console.log(\"selected:\", id);\r\n                this.tsRef.current.ChangeTrigger(this.state.triggers[i]);\r\n                this.setState({selected: id, selectedt: this.state.triggers[i]});\r\n                return\r\n            }\r\n        }\r\n\r\n        console.log(\"cant select:(\")\r\n    }\r\n\r\n    render() {\r\n\r\n        let selected = this.state.selected;\r\n        let selectedt = this.state.selectedt;\r\n        let triggers = this.state.triggers;\r\n\r\n        if (this.state.loading) {\r\n            triggers = [];\r\n        }\r\n\r\n        let selectedname = \"\";\r\n        if (selectedt) {\r\n            selectedname = selectedt.Name\r\n        }\r\n\r\n        console.log(\"SN\", selectedname, selected, selectedt);\r\n        let selector = (\r\n\r\n            <div>\r\n                <Select style={{width: 120}} onChange={this.handleChange}>\r\n                    {\r\n                        triggers.map((trigger, index) =>\r\n                            <Option key={trigger.ID}>{trigger.name}</Option>\r\n                        )\r\n                    }\r\n\r\n                </Select>\r\n                &nbsp;\r\n                <Button type=\"primary\" onClick={this.newTrigger}>New</Button>\r\n            </div>\r\n        );\r\n\r\n        if (selectedt) {\r\n            return (\r\n                <div>\r\n                    {selector}\r\n                    <TriggerSet trigger={selectedt} ref={this.tsRef}/>\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n        return (\r\n            selector\r\n        )\r\n    }\r\n}","\r\nimport React, {Component} from \"react\";\r\nimport {Button,  Card, DatePicker, Icon, TimePicker} from 'antd';\r\nimport DeviceService from \"../services/DeviceService\";\r\nimport {Link} from \"react-router-dom\";\r\nconst ButtonGroup = Button.Group;\r\n\r\nexport default class DeviceView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            layout: \"list\",\r\n            filter: {\r\n                page: 1,\r\n                pageSize: 10\r\n            }\r\n        };\r\n        this.onFromDateChange = this.onFromDateChange.bind(this);\r\n        this.onFromTimeChange = this.onFromTimeChange.bind(this);\r\n        this.onToDateChange = this.onToDateChange.bind(this);\r\n        this.onToTimeChange = this.onToTimeChange.bind(this);\r\n        this.onPageChange = this.onPageChange.bind(this);\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    refresh(){\r\n        this.props.handleRefresh();\r\n    }\r\n    onPageChange(page, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter)\r\n    }\r\n\r\n    onPageSizeChange(current, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter);\r\n    }\r\n\r\n    changeLayout(layout) {\r\n        this.setState({\"layout\": layout});\r\n        this.props.handleLayoutChange(layout);\r\n    }\r\n\r\n   onFromDateChange(date) {\r\n       let filter = this.state.filter;\r\n       if(date!=null){\r\n         filter.fromDate = date.format(\"YYYY-MM-DD\");\r\n       }\r\n       else{\r\n           filter.fromDate=null;\r\n       }\r\n       this.setState({filter: filter});\r\n       this.props.handleFilterChange(filter);\r\n   }\r\n\r\n   onFromTimeChange(time) {\r\n       let filter = this.state.filter;\r\n       if(time!=null){\r\n         filter.fromTime = time.format(\"HH:mm:ss\");\r\n       }\r\n       else{\r\n           filter.fromTime=null;\r\n       }\r\n       this.setState({filter: filter});\r\n       this.props.handleFilterChange(filter);\r\n   }\r\n\r\n   onToDateChange(date) {\r\n       let filter = this.state.filter;\r\n       if(date!=null){\r\n         filter.toDate = date.format(\"YYYY-MM-DD\");\r\n       }\r\n       else{\r\n         filter.toDate=null;\r\n       }\r\n       this.setState({filter: filter});\r\n       this.props.handleFilterChange(filter);\r\n   }\r\n\r\n   onToTimeChange(time) {\r\n       let filter = this.state.filter;\r\n       if(time!=null){\r\n        filter.toTime = time.format(\"HH:mm:ss\");\r\n       }\r\n       else{\r\n         filter.toTime=null;\r\n       }\r\n       this.setState({filter: filter});\r\n       this.props.handleFilterChange(filter);\r\n   }\r\n\r\n    render() {\r\n\r\n        let layout = this.state.layout;\r\n\r\n        return (\r\n            <div>\r\n                <span>From: </span>\r\n                <DatePicker onChange={this.onFromDateChange}/>&nbsp;&nbsp;\r\n                <TimePicker minuteStep={15} secondStep={60} onChange={this.onFromTimeChange}/>&nbsp;&nbsp;\r\n                <span>To: </span>\r\n                <DatePicker onChange={this.onToDateChange}/>&nbsp;&nbsp;\r\n                <TimePicker minuteStep={15} secondStep={60} onChange={this.onToTimeChange}/>&nbsp;&nbsp;\r\n\r\n                <ButtonGroup>\r\n                    <Button type={layout === \"list\" ? \"primary\" : \"\"} size=\"small\" icon=\"table\"\r\n                            onClick={() => {\r\n                                this.changeLayout(\"list\")\r\n                            }}/>\r\n                    <Button type={layout === \"table\" ? \"primary\" : \"\"} size=\"small\" icon=\"unordered-list\"\r\n                            onClick={() => {\r\n                                this.changeLayout(\"table\")\r\n                            }}/>\r\n                </ButtonGroup>&nbsp;&nbsp;\r\n                <Button onClick={() => {\r\n                    this.refresh()\r\n                }}><Icon type=\"reload\"/>Reload</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import axios from \"./axios\";\r\n\r\nclass AnprService {\r\n\r\n    static Instance() {\r\n        return new AnprService()\r\n    }\r\n\r\n    getEvents(filter) {\r\n        return axios.post('/api/anpr/events', filter);\r\n    }\r\n\r\n    getIncidents(filter) {\r\n        return axios.post('/api/anpr/incidents', filter);\r\n    }\r\n\r\n    getIncidentsHotlisted(filter) {\r\n        return axios.post('/api/anpr/incidents/hotListed', filter);\r\n    }\r\n\r\n    archiveEvent(event) {\r\n        return axios.delete('/api/anpr/' + event.id);\r\n    }\r\n\r\n    archiveAllEvent(lpr) {\r\n            return axios.put('/api/anpr/events/archive/' + lpr);\r\n        }\r\n\r\n    updateEvent(event) {\r\n        return axios.put('/api/anpr/event', event);\r\n    }\r\n\r\n    getEventFile(id) {\r\n        return axios.get('/public/anpr/anprText/' + id + '/image.jpg');\r\n    }\r\n\r\n    getHelmetMissingIncidentsRepeated(filter) {\r\n            return axios.post('/api/incident/repeated/helmet-missing', filter);\r\n    }\r\n    getReverseDirectionIncidentsRepeated(filter) {\r\n            return axios.post('/api/incident/repeated/reverse', filter);\r\n    }\r\n    getBriefIncidentsRepeated(filter) {\r\n                return axios.post('/api/incident/timeline', filter);\r\n    }\r\n     getIncidentTimeline(filter) {\r\n                     return axios.post('/api/anpr/events/list/bylpr', filter);\r\n     }\r\n     getIncidentsList(filter) {\r\n                    return axios.post('/api/anpr/events/list/lpr/count', filter);\r\n     }\r\n\r\n}\r\n\r\nexport default AnprService.Instance()","import React, {Component} from \"react\";\r\nimport {\r\n    Card,\r\n    Col,\r\n    Collapse,\r\n    Divider,\r\n    Empty,\r\n    Icon,\r\n    Pagination,\r\n    Row,\r\n    Table,\r\n    Tag,\r\n    Modal,\r\n    message, Input, Button, Menu, Dropdown, Typography, Slider\r\n} from 'antd';\r\nimport GenericFilter from \"../components/GenericFilter\";\r\nimport Moment from \"react-moment\";\r\nimport AnprService from \"../services/AnprService\";\r\nimport Magnifier from \"react-magnifier\";\r\n\r\nconst {Paragraph, Text} = Typography;\r\n\r\nconst {Column} = Table;\r\nconst {Panel} = Collapse;\r\n\r\n\r\nexport default class AnprView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible:true,\r\n            loading: true,\r\n            layout: \"list\",\r\n            events: {},\r\n            filter: {\r\n                page: 1,\r\n                pageSize: 12\r\n            },\r\n            workingEvent: {},\r\n            workingEventLoading: false,\r\n            magnifyEvent: {\r\n                magnifyEventId: \"\",\r\n                zoomFactor: 2,\r\n                minZoomFactor: 1,\r\n                maxZoomFactor: 5\r\n            },\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.handleFilterChange = this.handleFilterChange.bind(this);\r\n        this.handleLayoutChange = this.handleLayoutChange.bind(this);\r\n        this.handleRefresh = this.handleRefresh.bind(this);\r\n        this.onPageChange = this.onPageChange.bind(this);\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this);\r\n        this.onLprInputChange = this.onLprInputChange.bind(this);\r\n        this.editEvent = this.editEvent.bind(this);\r\n        this.updateEvent = this.updateEvent.bind(this);\r\n        this.magnifyEvent = this.magnifyEvent.bind(this);\r\n        this.updateZoomFactor = this.updateZoomFactor.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        AnprService.getEvents(this.state.filter).then(request => {\r\n            this.setState({\"anprresponse\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    //cant use refresh to read from state as state may not have been set\r\n    refreshNow(filter) {\r\n        AnprService.getEvents(this.state.filter).then(request => {\r\n            this.setState({\"anprresponse\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    archiveEvent(event) {\r\n        AnprService.archiveEvent(event).then(request => {\r\n            this.refresh();\r\n        })\r\n    }\r\n\r\n    onLprInputChange(e) {\r\n\r\n        let filter = this.state.filter;\r\n        filter.lpr = e.target.value;\r\n        console.log(filter);\r\n        this.setState({filter: filter})\r\n    }\r\n\r\n    handleFilterChange(data) {\r\n        this.setState({filter: data})\r\n    }\r\n\r\n    handleLayoutChange(data) {\r\n        this.setState({layout: data})\r\n    }\r\n    handleOnClick = e => {\r\n                console.log(e);\r\n                this.setState({\r\n                  visible: false,\r\n                });\r\n              };\r\n\r\n    handleRefresh() {\r\n        this.refresh();\r\n    }\r\n\r\n    onPageChange(page, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter)\r\n    }\r\n\r\n    onPageSizeChange(current, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter);\r\n    }\r\n\r\n    editEvent(event) {\r\n        this.setState({workingEvent: event});\r\n    }\r\n\r\n    magnifyEvent(event) {\r\n        let magnifyEvent = this.state.magnifyEvent;\r\n        magnifyEvent.magnifyEventId = event.id;\r\n\r\n        this.setState({magnifyEvent});\r\n    }\r\n\r\n    updateZoomFactor(zoomFactor) {\r\n        let magnifyEvent = this.state.magnifyEvent;\r\n        magnifyEvent.zoomFactor = zoomFactor;\r\n\r\n        this.setState({magnifyEvent});\r\n    }\r\n\r\n    updateEvent(anprText) {\r\n\r\n        let {workingEvent, workingEventLoading} = this.state;\r\n        workingEvent.anprText = anprText;\r\n        workingEventLoading = true;\r\n        this.setState({workingEvent, workingEventLoading});\r\n        AnprService.updateEvent(workingEvent).then(request => {\r\n            let {workingEvent, workingEventLoading} = this.state;\r\n            workingEvent.anprText = anprText;\r\n            workingEventLoading = false;\r\n            this.setState({workingEventLoading});\r\n        }).catch(error => {\r\n            alert(\"error in saving\");\r\n            let {workingEventLoading} = this.state;\r\n            workingEventLoading = false;\r\n            this.setState({workingEventLoading});\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let layout = this.state.layout;\r\n        let lpr = this.state.filter.lpr;\r\n\r\n        return (\r\n            <div>\r\n                <h3>ANPR</h3>\r\n                <Collapse bordered={false} defaultActiveKey={['1']}>\r\n                    <Panel header=\"Filter\" key=\"1\">\r\n                        LPR: <Input value={lpr} style={{\"width\": \"200px\"}} onChange={this.onLprInputChange}/> <br/><br/>\r\n                        <GenericFilter handleRefresh={this.refresh} filter={this.state.filter} layout={layout}\r\n                                       handleFilterChange={this.handleFilterChange}\r\n                                       handleLayoutChange={this.handleLayoutChange}/>\r\n                    </Panel>\r\n                </Collapse>\r\n                <div>\r\n                    {layout === \"table\" ? (this.renderTable()) : (this.renderGrid())}\r\n                </div>\r\n            </div>)\r\n    }\r\n\r\n    renderGrid() {\r\n\r\n\r\n        if (this.state.loading || !this.state.anprresponse || this.state.anprresponse.totalPage === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let events = this.state.anprresponse.events;\r\n        let workingEventLoading = this.state.workingEventLoading;\r\n        let workingEvent = this.state.workingEvent;\r\n        let count = this.state.anprresponse.totalPages * this.state.anprresponse.pageSize;\r\n\r\n        let {magnifyEventId, zoomFactor, minZoomFactor, maxZoomFactor} = this.state.magnifyEvent;\r\n        const mid = ((maxZoomFactor - minZoomFactor) / 2).toFixed(5);\r\n        const preColor = zoomFactor >= mid ? '' : 'rgba(0, 0, 0, .45)';\r\n        const nextColor = zoomFactor >= mid ? 'rgba(0, 0, 0, .45)' : '';\r\n        const marks = {\r\n            1: {label: <span><Icon style={{color: preColor}} type=\"zoom-out\"/></span>},\r\n            2: {label: <span>2</span>},\r\n            3: {label: <span>3</span>},\r\n            4: {label: <span>4</span>},\r\n            5: {label: <span><Icon style={{color: nextColor}} type=\"zoom-in\"/></span>,}\r\n        };\r\n        return <div style={{background: '#ECECEC', padding: '5px'}} >\r\n            <Row>\r\n                {\r\n                    events.map((event, index) =>\r\n                        <Col xl={{span: 8}} lg={{span: 12}} md={{span: 12}} sm={{span: 24}} xs={{span: 24}} key={index}>\r\n                            <Card\r\n                                style={{margin: \"5px\"}}\r\n                                title={\r\n                                    <div>\r\n                                        {(event.direction && event.direction === \"rev\") ?\r\n                                            <Tag color=\"#f50\">Reverse</Tag> : null}\r\n                                        {(event.helmet) ? <Tag color=\"#f50\">Without helmet</Tag> : null}\r\n                                    </div>\r\n                                }\r\n                                extra={<Dropdown overlay={<Menu>\r\n                                    <Menu.Item key=\"0\" onClick={() => this.magnifyEvent(event)}><Icon type=\"zoom-in\"/>Zoom\r\n                                        image\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"1\">\r\n                                        <a\r\n                                            title={\"click here to download\"}\r\n                                            href={\"/public/anpr/vehicle/\" + event.id + \"/image.jpg\"}\r\n                                            download={true}><Icon type=\"download\"/>{' '} Full\r\n                                            image</a>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"2\">\r\n                                        <a\r\n                                            title={\"click here to download\"}\r\n                                            href={\"/public/anpr/lpr/\" + event.id + \"/image.jpg\"}\r\n                                            download={true}><Icon type=\"download\"/>{' '} Cropped image</a>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"3\">\r\n                                        <Button type=\"danger\" onClick={() => this.archiveEvent(event)}><Icon\r\n                                            type=\"delete\"/>{' '}\r\n                                            Delete\r\n                                        </Button>\r\n                                    </Menu.Item>\r\n\r\n                                </Menu>}>\r\n                                    <Button>\r\n                                        More <Icon type=\"down\"/>\r\n                                    </Button>\r\n                                </Dropdown>}\r\n                                bordered={true}\r\n                                cover={(magnifyEventId === event.id) ?\r\n                                    <Magnifier src={\"/public/anpr/vehicle/\" + event.id + \"/image.jpg\"}\r\n                                               zoomFactor={zoomFactor}/> : <img alt=\"event\"\r\n                                                                    src={\"/public/anpr/vehicle/\" + event.id + \"/image.jpg\"}/>\r\n\r\n                                }\r\n                            >\r\n                                <div>\r\n                                    {(magnifyEventId === event.id) ?\r\n                                        <Slider\r\n                                            marks={marks}\r\n                                            min={minZoomFactor}\r\n                                            max={maxZoomFactor}\r\n                                            onChange={this.updateZoomFactor}\r\n                                            value={typeof zoomFactor === 'number' ? zoomFactor : 0}\r\n                                        />\r\n                                        :\r\n                                        <div style={{height:\"54px\",textAlign: \"center\"}}>\r\n                                            <Button size=\"small\"  onClick={() => this.magnifyEvent(event)} >\r\n                                                <Icon type=\"zoom-in\"/>Zoom Image\r\n                                            </Button>\r\n                                        </div>\r\n\r\n                                    }\r\n                                </div>\r\n                                <div style={{textAlign: \"center\"}}>\r\n                                    <img alt=\"event\"\r\n                                         src={\"/public/anpr/lpr/\" + event.id + \"/image.jpg\"}   />\r\n                                </div>\r\n                                <div style={{marginTop: \"5px\", textAlign: \"center\"}}\r\n                                     onClick={() => this.editEvent(event)}>\r\n                                    <Paragraph\r\n                                        strong\r\n                                        editable={{onChange: this.updateEvent}}\r\n                                        copyable>{event.anprText}</Paragraph>\r\n                                    <Text\r\n                                        type=\"secondary\">{(workingEventLoading && workingEvent.id === event.id) ? \"saving...\" : \"\"}</Text>\r\n                                    <div>\r\n                                        <Text code><Icon type=\"schedule\"/> <Moment\r\n                                            format=\"lll\">{event.eventDate}</Moment>{' '}|{' '}<Moment\r\n                                            format=\"LTS\">{event.eventDate}</Moment></Text>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Text code><Icon type=\"environment\"/> {event.location}</Text>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n            <div style={{textAlign: \"right\"}}>\r\n                <Pagination onChange={this.onPageChange} onShowSizeChange={this.onPageSizeChange} showSizeChanger\r\n                            showQuickJumper\r\n                            defaultCurrent={1} total={count} current={this.state.filter.page}\r\n                            pageSize={this.state.filter.pageSize}/>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n\r\n    renderTable() {\r\n\r\n        if (this.state.loading || !this.state.events || this.state.events.Total === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let events = this.state.anprresponse.events;\r\n        let count = this.state.anprresponse.totalPages * this.state.anprresponse.pageSize;\r\n\r\n        const paginationOptions = {\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            onShowSizeChange: this.onPageSizeChange,\r\n            onChange: this.onPageChange,\r\n            total: count\r\n        };\r\n\r\n        const pagination = {\r\n            ...paginationOptions,\r\n            total: count,\r\n            current: this.state.filter.page,\r\n            pageSize: this.state.filter.pageSize\r\n        };\r\n\r\n        return (\r\n            <Table dataSource={events} pagination={pagination}>\r\n                <Column title=\"Location\" dataIndex=\"location\" key=\"location\"\r\n                        render={location => location}/>\r\n                <Column title=\"Date\" dataIndex=\"eventDate\" key=\"eventDate\"\r\n                        render={eventDate => (<Moment format=\"L\">{eventDate}</Moment>)}/>\r\n                <Column title=\"Time\" dataIndex=\"eventDate\" key=\"eventTime\"\r\n                        render={eventDate => (<Moment format=\"LTS\">{eventDate}</Moment>)}/>\r\n                <Column title=\"LPR\" dataIndex=\"anprText\" key=\"anprText\"\r\n                        render={anprText => anprText}/>\r\n                <Column title=\"LP Image\" dataIndex=\"id\" key=\"anprimage\"\r\n                        render={id => (\r\n                            <a title={\"click here to download\"} href={\"/public/anpr/lpr/\" + id + \"/image.jpg\"}\r\n                               download={true}>\r\n                                <img alt=\"event\"\r\n                                     src={\"/public/anpr/lpr/\" + id + \"/image.jpg\"}/></a> )}/>\r\n                <Column title=\"direction\" dataIndex=\"direction\" key=\"direction\"\r\n                        render={direction => direction}/>\r\n                <Column title=\"Helmet?\" dataIndex=\"helmet\" key=\"helmet\"\r\n                        render={helmet => helmet ? <span>No</span> : <span>N/A</span>}/>\r\n                <Column title=\"Action\"\r\n                        key=\"action\"\r\n                        render={(text, event) => (\r\n                            <Button type=\"danger\" onClick={() => this.archiveEvent(event)}><Icon type=\"warning\"/>{' '}\r\n                                Delete</Button>\r\n                        )}\r\n                />\r\n\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {\r\n    Card,\r\n    Col,\r\n    Collapse,\r\n    Divider,\r\n    Empty,\r\n    Icon,\r\n    Pagination,\r\n    Row,\r\n    Table,\r\n    Tag,\r\n    Modal,\r\n    message, Input, Button, Menu, Dropdown, Typography, Slider\r\n} from 'antd';\r\nimport GenericFilter from \"../components/GenericFilter\";\r\nimport Moment from \"react-moment\";\r\nimport AnprService from \"../services/AnprService\";\r\nimport Magnifier from \"react-magnifier\";\r\n\r\nconst {Column} = Table;\r\nconst {Panel} = Collapse;\r\nconst {Paragraph, Text} = Typography;\r\n\r\n\r\nexport default class TrafficIncidentView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            layout: \"list\",\r\n            events: {},\r\n            filter: {\r\n                page: 1,\r\n                pageSize: 24\r\n            },\r\n            workingEvent: {},\r\n            workingEventLoading: false,\r\n            magnifyEvent: {\r\n                magnifyEventId: \"\",\r\n                zoomFactor: 2,\r\n                minZoomFactor: 1,\r\n                maxZoomFactor: 5\r\n            },\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.handleFilterChange = this.handleFilterChange.bind(this);\r\n        this.handleLayoutChange = this.handleLayoutChange.bind(this);\r\n        this.handleRefresh = this.handleRefresh.bind(this);\r\n        this.onPageChange = this.onPageChange.bind(this);\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this);\r\n        this.onLprInputChange = this.onLprInputChange.bind(this);\r\n        this.editEvent = this.editEvent.bind(this);\r\n        this.updateEvent = this.updateEvent.bind(this);\r\n        this.magnifyEvent = this.magnifyEvent.bind(this);\r\n        this.updateZoomFactor = this.updateZoomFactor.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        AnprService.getIncidents(this.state.filter).then(request => {\r\n            this.setState({\"anprresponse\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    //cant use refresh to read from state as state may not have been set\r\n    refreshNow(filter) {\r\n        AnprService.getIncidents(this.state.filter).then(request => {\r\n            this.setState({\"anprresponse\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    archiveEvent(event) {\r\n        AnprService.archiveEvent(event).then(request => {\r\n            this.refresh();\r\n        })\r\n    }\r\n\r\n    onLprInputChange(e) {\r\n\r\n        let filter = this.state.filter;\r\n        filter.lpr = e.target.value;\r\n        console.log(filter);\r\n        this.setState({filter: filter})\r\n    }\r\n\r\n    handleFilterChange(data) {\r\n        this.setState({filter: data})\r\n    }\r\n\r\n    handleLayoutChange(data) {\r\n        this.setState({layout: data})\r\n    }\r\n\r\n    handleRefresh() {\r\n        this.refresh();\r\n    }\r\n\r\n    onPageChange(page, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter)\r\n    }\r\n\r\n    onPageSizeChange(current, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter);\r\n    }\r\n\r\n    editEvent(event) {\r\n        this.setState({workingEvent: event});\r\n    }\r\n\r\n    magnifyEvent(event) {\r\n        let magnifyEvent = this.state.magnifyEvent;\r\n        magnifyEvent.magnifyEventId = event.id;\r\n\r\n        this.setState({magnifyEvent});\r\n    }\r\n\r\n    updateZoomFactor(zoomFactor) {\r\n        let magnifyEvent = this.state.magnifyEvent;\r\n        magnifyEvent.zoomFactor = zoomFactor;\r\n\r\n        this.setState({magnifyEvent});\r\n    }\r\n\r\n\r\n    updateEvent(anprText) {\r\n\r\n        let {workingEvent, workingEventLoading} = this.state;\r\n        workingEvent.anprText = anprText;\r\n        workingEventLoading = true;\r\n        this.setState({workingEvent, workingEventLoading});\r\n        AnprService.updateEvent(workingEvent).then(request => {\r\n            let {workingEvent, workingEventLoading} = this.state;\r\n            workingEvent.anprText = anprText;\r\n            workingEventLoading = false;\r\n            this.setState({workingEventLoading});\r\n        }).catch(error => {\r\n            alert(\"error in saving\");\r\n            let {workingEventLoading} = this.state;\r\n            workingEventLoading = false;\r\n            this.setState({workingEventLoading});\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let layout = this.state.layout;\r\n        let lpr = this.state.filter.lpr;\r\n\r\n        return (<div>\r\n            <h3>Incidents</h3>\r\n            <Collapse bordered={false} defaultActiveKey={['1']}>\r\n                <Panel header=\"Filter\" key=\"1\">\r\n                    LPR: <Input value={lpr} style={{\"width\": \"200px\"}} onChange={this.onLprInputChange}/> <br/><br/>\r\n                    <GenericFilter handleRefresh={this.refresh} filter={this.state.filter} layout={layout}\r\n                                   handleFilterChange={this.handleFilterChange}\r\n                                   handleLayoutChange={this.handleLayoutChange}/>\r\n                </Panel>\r\n                <div>\r\n                    {layout === \"table\" ? (this.renderTable()) : (this.renderGrid())}\r\n                </div>\r\n            </Collapse>\r\n        </div>)\r\n    }\r\n\r\n    renderGrid() {\r\n\r\n\r\n        if (this.state.loading || !this.state.anprresponse || this.state.anprresponse.totalPage === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let events = this.state.anprresponse.events;\r\n        let workingEventLoading = this.state.workingEventLoading;\r\n        let workingEvent = this.state.workingEvent;\r\n        let count = this.state.anprresponse.totalPages * this.state.anprresponse.pageSize;\r\n\r\n        let {magnifyEventId, zoomFactor, minZoomFactor, maxZoomFactor} = this.state.magnifyEvent;\r\n        const mid = ((maxZoomFactor - minZoomFactor) / 2).toFixed(5);\r\n        const preColor = zoomFactor >= mid ? '' : 'rgba(0, 0, 0, .45)';\r\n        const nextColor = zoomFactor >= mid ? 'rgba(0, 0, 0, .45)' : '';\r\n        const marks = {\r\n            1: {label: <span><Icon style={{color: preColor}} type=\"zoom-out\"/></span>},\r\n            2: {label: <span>2</span>},\r\n            3: {label: <span>3</span>},\r\n            4: {label: <span>4</span>},\r\n            5: {label: <span><Icon style={{color: nextColor}} type=\"zoom-in\"/></span>,}\r\n        };\r\n        return <div style={{background: '#ECECEC', padding: '5px'}}>\r\n            <Row>\r\n                {\r\n                    events.map((event, index) =>\r\n                        <Col xl={{span: 8}} lg={{span: 12}} md={{span: 12}} sm={{span: 24}} xs={{span: 24}} key={index}>\r\n                            <Card\r\n                                style={{margin: \"5px\"}}\r\n                                title={\r\n                                    <div>\r\n                                        {(event.direction && event.direction === \"rev\") ?\r\n                                            <Tag color=\"#f50\">Reverse</Tag> : null}\r\n                                        {(event.helmet) ? <Tag color=\"#f50\">Without helmet</Tag> : null}\r\n                                    </div>\r\n                                }\r\n                                extra={<Dropdown overlay={<Menu>\r\n                                    <Menu.Item key=\"0\" onClick={() => this.magnifyEvent(event)}><Icon type=\"zoom-in\"/>Zoom\r\n                                        image\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"1\">\r\n                                        <a\r\n                                            title={\"click here to download\"}\r\n                                            href={\"/public/anpr/vehicle/\" + event.id + \"/image.jpg\"}\r\n                                            download={true}><Icon type=\"download\"/>{' '} Full\r\n                                            image</a>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"2\">\r\n                                        <a\r\n                                            title={\"click here to download\"}\r\n                                            href={\"/public/anpr/lpr/\" + event.id + \"/image.jpg\"}\r\n                                            download={true}><Icon type=\"download\"/>{' '} Cropped image</a>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"3\">\r\n                                        <Button type=\"danger\" onClick={() => this.archiveEvent(event)}><Icon\r\n                                            type=\"delete\"/>{' '}\r\n                                            Delete\r\n                                        </Button>\r\n                                    </Menu.Item>\r\n\r\n                                </Menu>}>\r\n                                    <Button>\r\n                                        More <Icon type=\"down\"/>\r\n                                    </Button>\r\n                                </Dropdown>}\r\n                                bordered={true}\r\n                                cover={(magnifyEventId === event.id) ?\r\n                                    <Magnifier src={\"/public/anpr/vehicle/\" + event.id + \"/image.jpg\"}\r\n                                               zoomFactor={zoomFactor}/> : <img alt=\"event\"\r\n                                                                    src={\"/public/anpr/vehicle/\" + event.id + \"/image.jpg\"}/>\r\n\r\n                                }\r\n                            >\r\n                                <div>\r\n                                    {(magnifyEventId === event.id) ?\r\n                                        <Slider\r\n                                            marks={marks}\r\n                                            min={minZoomFactor}\r\n                                            max={maxZoomFactor}\r\n                                            onChange={this.updateZoomFactor}\r\n                                            value={typeof zoomFactor === 'number' ? zoomFactor : 0}\r\n                                        />\r\n                                        : <div style={{height:\"54px\",textAlign: \"center\"}}>\r\n                                               <Button size=\"small\" type=\"primary\" onClick={() => this.magnifyEvent(event)} >\r\n                                                   <Icon type=\"zoom-in\"/>Zoom Image\r\n                                               </Button>\r\n                                           </div>\r\n                                    }\r\n                                </div>\r\n                                <div style={{textAlign: \"center\"}}>\r\n                                    <img alt=\"event\"\r\n                                         src={\"/public/anpr/lpr/\" + event.id + \"/image.jpg\"}/>\r\n                                </div>\r\n                                <div style={{marginTop: \"5px\", textAlign: \"center\"}}\r\n                                     onClick={() => this.editEvent(event)}>\r\n                                    <Paragraph\r\n                                        strong\r\n                                        editable={{onChange: this.updateEvent}}\r\n                                        copyable>{event.anprText}</Paragraph>\r\n                                    <Text\r\n                                        type=\"secondary\">{(workingEventLoading && workingEvent.id === event.id) ? \"saving...\" : \"\"}</Text>\r\n                                    <div>\r\n                                        <Text code> <Moment format=\"lll\">{event.eventDate}</Moment>{' '}|{' '}<Moment\r\n                                            format=\"LTS\">{event.eventDate}</Moment></Text>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Text code><Icon type=\"environment\"/> {event.location}</Text>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n            <div style={{textAlign: \"right\"}}>\r\n                <Pagination onChange={this.onPageChange} onShowSizeChange={this.onPageSizeChange} showSizeChanger\r\n                            showQuickJumper\r\n                            defaultCurrent={1} total={count} current={this.state.filter.page}\r\n                            pageSize={this.state.filter.pageSize}/>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n\r\n    renderTable() {\r\n\r\n        if (this.state.loading || !this.state.events || this.state.events.Total === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let events = this.state.anprresponse.events;\r\n        let count = this.state.anprresponse.totalPages * this.state.anprresponse.pageSize;\r\n\r\n        const paginationOptions = {\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            onShowSizeChange: this.onPageSizeChange,\r\n            onChange: this.onPageChange,\r\n            total: count\r\n        };\r\n\r\n        const pagination = {\r\n            ...paginationOptions,\r\n            total: count,\r\n            current: this.state.filter.page,\r\n            pageSize: this.state.filter.pageSize\r\n        };\r\n\r\n        return (\r\n            <Table dataSource={events} pagination={pagination}>\r\n                <Column title=\"Location\" dataIndex=\"location\" key=\"location\"\r\n                        render={location => location}/>\r\n                <Column title=\"Date\" dataIndex=\"eventDate\" key=\"eventDate\"\r\n                        render={eventDate => (<Moment format=\"L\">{eventDate}</Moment>)}/>\r\n                <Column title=\"Time\" dataIndex=\"eventDate\" key=\"eventTime\"\r\n                        render={eventDate => (<Moment format=\"LTS\">{eventDate}</Moment>)}/>\r\n                <Column title=\"LPR\" dataIndex=\"anprText\" key=\"anprText\"\r\n                        render={anprText => anprText}/>\r\n                <Column title=\"image\" dataIndex=\"id\" key=\"anprimage\"\r\n                        render={id => (\r\n                            <a title={\"click here to download\"} href={\"/public/anpr/lpr/\" + id + \"/image.jpg\"}\r\n                               download={true}>\r\n                                <img alt=\"event\"\r\n                                     src={\"/public/anpr/lpr/\" + id + \"/image.jpg\"}/></a>)}/>\r\n                <Column title=\"direction\" dataIndex=\"direction\" key=\"direction\"\r\n                        render={direction => direction}/>\r\n                <Column title=\"Helmet\" dataIndex=\"helmet\" key=\"helmet\"\r\n                        render={helmet => helmet ? <span>No</span> : <span>Yes</span>}/>\r\n                <Column title=\"Action\"\r\n                        key=\"action\"\r\n                        render={(text, event) => (\r\n                            <Button type=\"danger\" onClick={() => this.archiveEvent(event)}><Icon type=\"delete\"/>{' '}\r\n                                Delete</Button>\r\n                        )}\r\n                />\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport {\r\n  Anchor,\r\n  Card,\r\n  Col,\r\n  Collapse,\r\n  Divider,\r\n  Empty,\r\n  Icon,\r\n  Spin,\r\n  Pagination,\r\n  Row,\r\n  Table,\r\n  Tag,\r\n  Timeline,\r\n  Modal,\r\n  Tabs,\r\n  message,\r\n  Input,\r\n  Button,\r\n  Menu,\r\n  Dropdown,\r\n  Typography,\r\n  Slider\r\n} from \"antd\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport AnprService from \"../../services/AnprService\";\r\n\r\nconst {Paragraph, Text} = Typography;\r\nconst {Column} = Table;\r\nexport default class IncidentTimeline extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n          loading:false,\r\n          anprresponse: {},\r\n          filter:{\r\n            currentPage: 1,\r\n            pageSizes: 24,\r\n            lpr: \"\",\r\n            incidentType:\"\"\r\n          }\r\n        };\r\n\r\n       this.toggleVisible = this.toggleVisible.bind(this);\r\n       this.refreshBriefIncidentsNow = this.refreshBriefIncidentsNow.bind(this);\r\n       this.onModalPageChange = this.onModalPageChange.bind(this);\r\n              this.onModalPageSizeChange = this.onModalPageSizeChange.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        let filter = this.state.filter;\r\n        if((filter.lpr != nextProps.lpr) || (filter.incidentType != nextProps.incidentType)) {\r\n            filter.lpr = nextProps.lpr;\r\n            filter.incidentType = nextProps.incidentType;\r\n            this.setState({filter},()=>{\r\n              this.refreshBriefIncidentsNow();\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    toggleVisible(){\r\n        let filter = this.state.filter;\r\n                filter.currentPage = 1;\r\n                this.setState({filter: filter});\r\n                this.props.toggleVisible();\r\n\r\n    }\r\n\r\n    refreshBriefIncidentsNow() {\r\n\r\n           let {loading, filter, anprresponse} = this.state;\r\n\r\n           if(filter.lpr && filter.incidentType){\r\n              this.setState({loading : true});\r\n              AnprService.getBriefIncidentsRepeated(filter).then(request =>\r\n              {\r\n                loading = false;\r\n                anprresponse= request.data;\r\n                this.setState({loading, anprresponse});\r\n              }).catch(error=> {\r\n               loading = false;\r\n               this.setState({loading});\r\n               alert(\"Something went wrong\");\r\n                 });\r\n           }\r\n\r\n    }\r\n    onModalPageChange(currentPage, pageSizes){\r\n             let filter = this.state.filter;\r\n             filter.currentPage = currentPage;\r\n             filter.pageSizes = pageSizes;\r\n             this.refreshBriefIncidentsNow(filter);\r\n          }\r\n\r\n          onModalPageSizeChange(current, pageSizes) {\r\n               let filter = this.state.filter;\r\n               filter.pageSizes = pageSizes;\r\n               this.refreshBriefIncidentsNow(filter);\r\n            }\r\n\r\n    render(){\r\n         let events = this.state.anprresponse.events;\r\n         let count = this.state.anprresponse.totalPages * this.state.anprresponse.pageSizes;\r\n\r\n                  const paginationOption = {\r\n                         showSizeChanger: false,\r\n                         showQuickJumper: false,\r\n                         pageSize:5,\r\n                         showLessItems: true,\r\n                         onShowSizeChange: this.onModalPageSizeChange,\r\n                         onChange: this.onModalPageChange,\r\n                         total: count\r\n                     };\r\n\r\n                     const pagination = {\r\n                         ...paginationOption,\r\n                         total: count,\r\n                         current: this.state.filter.currentPage,\r\n                         pageSizes: this.state.filter.pageSizes\r\n                     };\r\n\r\n         if (this.state.loading)\r\n         {\r\n            const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\r\n            return <Spin indicator={antIcon}/>\r\n         }\r\n\r\n         if (!this.state.anprresponse.events){\r\n                   return <Empty description={false}/>\r\n         }\r\n\r\n        return <Modal\r\n\r\n                title={<div>{this.state.filter.incidentType}<Paragraph copyable>{this.state.filter.lpr}</Paragraph></div> }\r\n                visible={this.props.visible}\r\n                onCancel={this.toggleVisible}\r\n                onClose={this.toggleVisible}\r\n                footer={[\r\n                         <Button key=\"close\"  type=\"primary\" onClick={this.toggleVisible}>\r\n                           Close\r\n                         </Button>\r\n                        ]}\r\n                >\r\n                 <div>\r\n                                               <Table dataSource={events} pagination={pagination}>\r\n                                                    <Column title=\"When and Where\"\r\n                                                             render={(text, record, index)=> <Timeline.Item>\r\n                                                           <div>\r\n                                                             <p><Icon type=\"clock-circle\" />  <Moment format=\"lll\">{record.eventDate}</Moment></p>\r\n                                                             <p><Icon type=\"environment\"/> {record.location}</p>\r\n                                                             <a title={\"click here to download\"}\r\n                                                               href={\"/public/anpr/lpr/\" + record.id + \"/image.jpg\"}\r\n                                                             download={true}>\r\n                                                             <img alt=\"event\"\r\n                                                                 src={\"/public/anpr/lpr/\" + record.id + \"/image.jpg\"}style={{width:160,height:\"auto\"}}/>\r\n                                                             </a>\r\n                                                           </div>\r\n                                                             </Timeline.Item>\r\n                                                             }/>\r\n                                                    <Column  title=\"Captured Image\" dataIndex=\"id\" key=\"anprimage\"\r\n                                                              render={id => (\r\n                                                                      <a title={\"click here to download\"}  href={\"/public/anpr/vehicle/\" + id + \"/image.jpg\"}\r\n                                                                      download={true}>\r\n                                                                      <img alt=\"event\"\r\n                                                                      src={\"/public/anpr/vehicle/\" + id + \"/image.jpg\" }style={{width:200,height:\"auto\"}}/></a>)}/>\r\n                                               </Table>\r\n                                            </div>\r\n               </Modal>\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport {\r\n  Anchor,\r\n  Card,\r\n  Col,\r\n  Collapse,\r\n  Divider,\r\n  Empty,\r\n  Icon,\r\n  Spin,\r\n  Pagination,\r\n  Row,\r\n  Table,\r\n  Tag,\r\n  Timeline,\r\n  Modal,\r\n  Tabs,\r\n  message,\r\n  Input,\r\n  Button,\r\n  Menu,\r\n  Dropdown,\r\n  Typography,\r\n  Slider\r\n} from \"antd\";\r\nimport GenericFilter from \"../../components/GenericFilter\";\r\nimport Moment from \"react-moment\";\r\nimport AnprService from \"../../services/AnprService\";\r\nimport IncidentTimeline from \"./IncidentTimeline\";\r\nimport Magnifier from \"react-magnifier\";\r\n\r\nconst { Link } = Anchor;\r\nconst { Panel } = Collapse;\r\nconst { Paragraph, Text } = Typography;\r\nconst {Column} = Table;\r\nconst { TabPane } = Tabs;\r\nconst { Search } = Input;\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\r\nconst tabList = [\r\n    {\r\n        key: 'Reverse',\r\n        tab: 'Reverse',\r\n    },\r\n    {\r\n        key: 'Helmet-Missing',\r\n        tab: 'Helmet-Missing',\r\n    },\r\n];\r\n\r\nexport default class IncidentRepeatedView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab:\"Reverse\",\r\n      visible:false,\r\n      timelineLpr:\"\",\r\n      filter: {\r\n        lpr: \"\"\r\n      },\r\n      helmetMissing:{\r\n        loading:false,\r\n        anprresponse: {},\r\n        filter: {\r\n          pages: 1,\r\n          pageSizes: 24,\r\n          lpr: \"\",\r\n          incidentType:\"\"\r\n        }\r\n      },\r\n      briefIncident:{\r\n        loading:false,\r\n        anprresponse: {},\r\n          filter:{\r\n            lpr: \"\",\r\n          }\r\n      },\r\n      reverseDirection:{\r\n        loading:false,\r\n        anprresponse: {},\r\n        filter: {\r\n          pagess: 1,\r\n          pageSizes: 24,\r\n           lpr: \"\",\r\n           incidentType:\"\"\r\n        }\r\n      }\r\n    };\r\n\r\n    this.refresh = this.refresh.bind(this);\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n    this.onHelmetMissingPageChange = this.onHelmetMissingPageChange.bind(this);\r\n    this.onReverseDirectionPageChange = this.onReverseDirectionPageChange.bind(this);\r\n    this.onHelmetMissingPageSizeChange = this.onHelmetMissingPageSizeChange.bind(this);\r\n    this.onReverseDirectionPageSizeChange = this.onReverseDirectionPageSizeChange.bind(this);\r\n    this.handleTabClick = this.handleTabClick.bind(this);\r\n    this.refreshHelmetMissingIncidentsNow = this.refreshHelmetMissingIncidentsNow.bind(this);\r\n    this.refreshReverseDirectionIncidentsNow = this.refreshReverseDirectionIncidentsNow.bind(this);\r\n    this.onLprInputChange=this.onLprInputChange.bind(this);\r\n    this.search=this.search.bind(this);\r\n    this.onTabChange=this.onTabChange.bind(this);\r\n    this.toggleIncidentTimelineModal = this.toggleIncidentTimelineModal.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refresh();\r\n  }\r\n\r\n  handleTabClick(tabIndex) {\r\n       this.setState({\r\n         activeTabIndex:\r\n          tabIndex === this.state.activeTabIndex\r\n            ? this.props.defaultActiveTabIndex\r\n          : tabIndex\r\n       });\r\n     }\r\n\r\n  refresh() {\r\n     this.refreshHelmetMissingIncidentsNow();\r\n     this.refreshReverseDirectionIncidentsNow();\r\n  }\r\n\r\n  showModal = (lpr) => {\r\n      this.setState({\r\n        visible: true,\r\n        timelineLpr: lpr\r\n      });\r\n  }\r\n\r\n  toggleIncidentTimelineModal(){\r\n    let visible = this.state.visible;\r\n    this.setState({visible: !visible});\r\n  }\r\n\r\n  //cant use refresh to read from state as state may not have been set\r\n  refreshHelmetMissingIncidentsNow() {\r\n\r\n     let helmetMissing = this.state.helmetMissing;\r\n     helmetMissing.loading = true;\r\n     this.setState({helmetMissing:helmetMissing});\r\n\r\n     AnprService.getHelmetMissingIncidentsRepeated(this.state.helmetMissing.filter).then(request =>\r\n         {\r\n           helmetMissing.loading = false;\r\n           helmetMissing.anprresponse= request.data;\r\n           this.setState({helmetMissing:helmetMissing});\r\n         }).catch(error=> {\r\n              helmetMissing.loading = false;\r\n              this.setState({helmetMissing:helmetMissing});\r\n              alert(\"Something went wrong\");\r\n            });\r\n  }\r\n  refreshReverseDirectionIncidentsNow() {\r\n      let reverseDirection = this.state.reverseDirection;\r\n      reverseDirection.loading=true;\r\n      this.setState({reverseDirection:reverseDirection});\r\n      AnprService.getReverseDirectionIncidentsRepeated(this.state.reverseDirection.filter).then(request =>\r\n          {\r\n           reverseDirection.loading = false;\r\n           reverseDirection.anprresponse= request.data;\r\n           this.setState({reverseDirection:reverseDirection});\r\n          }).catch(error=> {\r\n             reverseDirection.loading = false;\r\n             this.setState({ hasError: true });\r\n             alert(\"Something went wrong\");\r\n          });\r\n  }\r\n\r\n\r\n  handleRefresh(){\r\n    this.refresh();\r\n  }\r\n\r\n  onLprInputChange(e) {\r\n    let filter = this.state.filter;\r\n    filter.lpr = e.target.value;\r\n    this.setState({filter: filter})\r\n  }\r\n\r\n  search(searchText) {\r\n    let {filter, reverseDirection, helmetMissing} = this.state;\r\n    filter.lpr = searchText;\r\n    reverseDirection.filter.lpr = searchText;\r\n    helmetMissing.filter.lpr = searchText;\r\n    this.setState({filter,reverseDirection,helmetMissing},()=>{\r\n      this.refresh();\r\n    });\r\n  }\r\n\r\n  onHelmetMissingPageChange(page, pageSize){\r\n    let filter = this.state.helmetMissing.filter;\r\n    filter.page = page;\r\n    filter.pageSize = pageSize;\r\n    this.refreshHelmetMissingIncidentsNow(filter);\r\n  }\r\n\r\n  onReverseDirectionPageChange(pages, pageSizes){\r\n     let filter = this.state.reverseDirection.filter;\r\n     filter.pages = pages;\r\n     filter.pageSizes = pageSizes;\r\n     this.refreshReverseDirectionIncidentsNow(filter);\r\n  }\r\n\r\n  onHelmetMissingPageSizeChange(current, pageSize){\r\n    let filter = this.state.helmetMissing.filter;\r\n    filter.pageSize = pageSize;\r\n    this.refreshHelmetMissingIncidentsNow(filter);\r\n  }\r\n\r\n  onReverseDirectionPageSizeChange(current, pageSizes) {\r\n     let filter = this.state.reverseDirection.filter;\r\n     filter.pageSizes = pageSizes;\r\n     this.refreshReverseDirectionIncidentsNow(filter);\r\n  }\r\n\r\n  onTabChange(key) {\r\n      this.setState({activeTab: key})\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n          <div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n                <Card\r\n                style={{width: '100%'}}\r\n                title={<Row>\r\n                  <Col xl={{span: 16}} lg={{span: 16}} md={{span: 12}} sm={{span: 12}} xs={{span: 12}}>\r\n                       <h4>Repeated Incidents</h4>\r\n                  </Col>\r\n                  <Col xl={{span: 8}} lg={{span: 8}} md={{span: 12}} sm={{span: 12}} xs={{span: 12}}>\r\n\r\n                     <Search  allowClear\r\n                       placeholder=\"Search Vehicle \"\r\n                       onChange={this.onLprInputChange}\r\n                       style={{textAlign:\"right\"}}\r\n                       onSearch={value => this.search(value)} enterButton\r\n                      />\r\n                  </Col>\r\n                </Row>}\r\n\r\n                tabList={tabList}\r\n                activeTabKey={this.state.activeTab}\r\n\r\n                onTabChange={key => {\r\n                    this.onTabChange(key);\r\n                }}\r\n                >\r\n                 {this.state.activeTab === \"Reverse\" ? (this.renderReverseData()) : this.renderHelmetMissingData()}\r\n\r\n                 <IncidentTimeline\r\n                   lpr={this.state.timelineLpr}\r\n                   incidentType={this.state.activeTab}\r\n                   visible={this.state.visible}\r\n                   toggleVisible={this.toggleIncidentTimelineModal}\r\n                   />\r\n              </Card>\r\n\r\n          </div>\r\n    );\r\n  }\r\n\r\n  renderReverseData(){\r\n\r\n\r\n   let events = this.state.reverseDirection.anprresponse.events;\r\n   let count = this.state.reverseDirection.anprresponse.totalPages * this.state.reverseDirection.anprresponse.pageSizes;\r\n\r\n   const paginationOption = {\r\n       showSizeChanger: true,\r\n       showQuickJumper: true,\r\n       onShowSizeChange: this.onReverseDirectionPageSizeChange,\r\n       onChange: this.onReverseDirectionPageChange,\r\n       total: count\r\n   };\r\n\r\n   const pagination = {\r\n       ...paginationOption,\r\n       total: count,\r\n       current: this.state.reverseDirection.filter.pages,\r\n       pageSizes: this.state.reverseDirection.filter.pageSizes\r\n   };\r\n\r\n   if (this.state.reverseDirection.loading)\r\n   {\r\n      const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\r\n      return <Spin indicator={antIcon}/>\r\n   }\r\n\r\n   if (!this.state.reverseDirection.anprresponse.events){\r\n       return <Empty description={false}/>\r\n   }\r\n\r\n   return (\r\n     <div>\r\n       <Table dataSource={events} pagination={pagination}>\r\n\r\n         <Column  title=\"LPR\" dataIndex=\"anprText\" key=\"anprText\"\r\n            render={anprText => <Button onClick={()=> this.showModal(anprText)}>{anprText}</Button>}/>\r\n\r\n         <Column title=\"Repeated Times\" dataIndex=\"repeatedTimes\" key=\"repeatedTimes\"\r\n             render={repeatedTimes => repeatedTimes}/>\r\n       </Table>\r\n     </div>\r\n\r\n   )\r\n  }\r\n\r\n  renderHelmetMissingData(){\r\n\r\n\r\n   let events = this.state.helmetMissing.anprresponse.events;\r\n   let count = this.state.helmetMissing.anprresponse.totalPages * this.state.helmetMissing.anprresponse.pageSize;\r\n\r\n   const paginationOptions = {\r\n       showSizeChanger: true,\r\n       showQuickJumper: true,\r\n       onShowSizeChange: this.onHelmetMissingPageSizeChange,\r\n       onChange: this.onHelmetMissingPageChange,\r\n       total: count\r\n   };\r\n\r\n   const pagination = {\r\n       ...paginationOptions,\r\n       total: count,\r\n       current: this.state.helmetMissing.filter.page,\r\n       pageSize: this.state.helmetMissing.filter.pageSize\r\n   };\r\n\r\n   if (this.state.helmetMissing.loading)\r\n   {\r\n      const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\r\n      return <Spin indicator={antIcon}/>\r\n   }\r\n\r\n   if (!this.state.helmetMissing.anprresponse.events){\r\n             return <Empty description={false}/>\r\n   }\r\n\r\n    return (\r\n      <div>\r\n         <Table dataSource={events} pagination={pagination}>\r\n\r\n              <Column title=\"LPR\" dataIndex=\"anprText\" key=\"anprText\"\r\n                      render={anprText => <Button onClick={()=> this.showModal(anprText)}>{anprText}</Button>}/>\r\n               <Column title=\"Repeated Times\" dataIndex=\"repeatedTimes\" key=\"repeatedTimes\"\r\n                      render={repeatedTimes => repeatedTimes}/>\r\n         </Table>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n","import axios from \"./axios\";\r\n\r\nclass HotListVehicleService {\r\n\r\n    static Instance() {\r\n        return new HotListVehicleService()\r\n    }\r\n\r\n    getHotListedVehicles(filter) {\r\n        return axios.post('/api/hotlist/vehicle/list', filter);\r\n    }\r\n\r\n    saveHotListedVehicle(vehicle) {\r\n        return axios.post('/api/hotlist/vehicle/save', vehicle);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default HotListVehicleService.Instance()","import React, {Component} from \"react\";\r\nimport {\r\n    Card,\r\n    Col,\r\n    Empty,\r\n    Icon,\r\n    Pagination,\r\n    Row,\r\n    Modal,\r\n    message, Input, Typography, Spin, Checkbox, Tag\r\n} from 'antd';\r\n\r\nimport HotListVehicleService from \"../../services/HotListVehicleService\";\r\n\r\nconst {Search} = Input;\r\nconst {Text} = Typography;\r\n\r\nexport default class HotListedVehiclesList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeModal: \"\",\r\n            hotListedVehicleResponse: {},\r\n            filter: {\r\n                page: 1,\r\n                pageSize: 40,\r\n                lpr: \"\"\r\n            },\r\n            workingVehicle: {\r\n                id: undefined,\r\n                lpr: \"\",\r\n                archived: false\r\n            },\r\n            loading: {\r\n                vehiclesList: false\r\n            }\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onPageChange = this.onPageChange.bind(this);\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this);\r\n        this.openHotListVehicleForm = this.openHotListVehicleForm.bind(this);\r\n        this.handleSubmitWorkingHotListVehicle = this.handleSubmitWorkingHotListVehicle.bind(this);\r\n        this.handleCancelWorkingHotListVehicle = this.handleCancelWorkingHotListVehicle.bind(this);\r\n        this.archiveHotListedVehicle = this.archiveHotListedVehicle.bind(this);\r\n        this.workingVehicleOnChange = this.workingVehicleOnChange.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.onLprInputChange = this.onLprInputChange.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh(this.state.filter);\r\n    }\r\n\r\n    refresh(filter) {\r\n        let loading = this.state.loading;\r\n        loading.vehiclesList = true;\r\n        this.setState({loading});\r\n        HotListVehicleService.getHotListedVehicles(filter).then(response => {\r\n            loading.vehiclesList = false;\r\n            this.setState({hotListedVehicleResponse: response.data, loading})\r\n        }).catch(error => {\r\n            loading.vehiclesList = false;\r\n            this.setState({loading});\r\n            message.error('Something went wrong!');\r\n        })\r\n    }\r\n\r\n\r\n    archiveHotListedVehicle(event) {\r\n        HotListVehicleService.archiveHotListedVehicle(event).then(request => {\r\n            this.refresh(this.state.filter);\r\n            message.success('Vehicle archived!');\r\n        }).catch(error => {\r\n            message.error('Something went wrong!');\r\n        })\r\n    }\r\n\r\n\r\n    onPageChange(page, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.pageSize = pageSize;\r\n        this.refresh(filter)\r\n    }\r\n\r\n    onPageSizeChange(current, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.pageSize = pageSize;\r\n        this.refresh(filter);\r\n    }\r\n\r\n\r\n    confirm(e) {\r\n        console.log(e);\r\n        message.success('Click on Yes');\r\n    }\r\n\r\n    cancel(e) {\r\n        console.log(e);\r\n        message.error('Click on No');\r\n    }\r\n\r\n    openHotListVehicleForm(vehicle) {\r\n        let workingVehicle = {\r\n            id: undefined,\r\n            lpr: \"\",\r\n            archived: false\r\n        };\r\n        if (vehicle) {\r\n            workingVehicle.id = vehicle.id;\r\n            workingVehicle.lpr = vehicle.lpr;\r\n            workingVehicle.archived = vehicle.archived;\r\n        }\r\n\r\n        this.setState({\r\n            activeModal: \"workingVehicle\", workingVehicle: workingVehicle\r\n        });\r\n    };\r\n\r\n    workingVehicleOnChange(e) {\r\n        let {workingVehicle} = this.state;\r\n\r\n        switch (e.target.type) {\r\n            case \"checkbox\":\r\n                workingVehicle[e.target.name] = e.target.checked;\r\n                break;\r\n            default:\r\n                workingVehicle[e.target.name] = e.target.value;\r\n                break;\r\n\r\n        }\r\n        this.setState({workingVehicle: workingVehicle});\r\n    }\r\n\r\n    handleSubmitWorkingHotListVehicle(e) {\r\n        HotListVehicleService.saveHotListedVehicle(this.state.workingVehicle).then(response => {\r\n            this.refresh(this.state.filter);\r\n            let workingVehicle = {\r\n                id: undefined,\r\n                lpr: \"\",\r\n                archived: false\r\n            };\r\n            this.setState({activeModal: \"\", workingVehicle});\r\n            message.success('Saved!');\r\n        }).catch(error => {\r\n            message.error('Something went wrong!');\r\n        })\r\n    };\r\n\r\n    handleCancelWorkingHotListVehicle(e) {\r\n        let workingVehicle = {\r\n            id: undefined,\r\n            lpr: \"\",\r\n            archived: false\r\n        };\r\n        this.setState({\r\n            activeModal: \"\",\r\n            workingVehicle\r\n        });\r\n    };\r\n\r\n    onLprInputChange(e) {\r\n\r\n        let filter = this.state.filter;\r\n        filter.lpr = e.target.value;\r\n        console.log(filter);\r\n        this.setState({filter: filter})\r\n    }\r\n\r\n    search(searchText) {\r\n        let {filter} = this.state;\r\n        filter.lpr = searchText;\r\n        this.setState({filter: filter});\r\n        this.refresh(filter)\r\n    }\r\n\r\n\r\n    onLprInputChange(e) {\r\n\r\n        let filter = this.state.filter;\r\n        filter.lpr = e.target.value;\r\n        this.setState({filter: filter})\r\n    }\r\n\r\n    render() {\r\n        let {filter, hotListedVehicleResponse, workingVehicle, loading} = this.state;\r\n\r\n        let vehicles = hotListedVehicleResponse.events;\r\n        let count = hotListedVehicleResponse.totalPages * hotListedVehicleResponse.pageSize;\r\n\r\n\r\n        if (loading.vehiclesList) {\r\n            const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\r\n            return <Spin indicator={antIcon}/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col xl={{span: 8}} lg={{span: 8}} md={{span: 16}} sm={{span: 12}} xs={{span: 12}}>\r\n                        <Search allowClear placeholder=\"input search text\" name=\"lpr\" value={filter.lpr}\r\n                                onChange={this.onLprInputChange} onSearch={value => this.search(value)} enterButton/>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <br/>\r\n                <div>\r\n                    <div>\r\n                        <Row>\r\n                            <Col xl={{span: 3}} lg={{span: 4}} md={{span: 6}} sm={{span: 8}} xs={{span: 16}}\r\n                                 key={\"new\"}>\r\n                                <Card style={{backgroundColor: \"#40a9ff\"}} hoverable\r\n                                      onClick={() => this.openHotListVehicleForm(undefined)}>\r\n                                    <div style={{textAlign: \"center\"}}>\r\n                                        <Text style={{color: \"white\"}} strong>\r\n                                            <Icon type=\"plus\"/> New</Text>\r\n                                    </div>\r\n                                </Card>\r\n                            </Col>\r\n                            {(vehicles || []).map((vehicle, index) =>\r\n                                <Col xl={{span: 3}} lg={{span: 4}} md={{span: 6}} sm={{span: 8}} xs={{span: 16}}\r\n                                     key={index}>\r\n                                    <div style={{textAlign: \"center\"}}>\r\n                                        <Card hoverable onClick={() => this.openHotListVehicleForm(vehicle)}\r\n                                              style={{backgroundColor: vehicle.archived ? \"#fafafa\" : \"\"}}>\r\n                                            <div style={{textAlign: \"center\"}}>\r\n                                                <Text delete={vehicle.archived} strong>\r\n                                                    {vehicle.lpr}\r\n                                                </Text>\r\n                                            </div>\r\n                                        </Card>\r\n                                    </div>\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n\r\n                        <Modal\r\n                            title={<div><Tag>{workingVehicle.id ? \"EDIT\" : \"NEW\"}</Tag>{' '}<Text\r\n                                copyable={workingVehicle.lpr.length > 0}>{workingVehicle.lpr}</Text></div>}\r\n                            visible={this.state.activeModal === \"workingVehicle\"}\r\n                            onOk={this.handleSubmitWorkingHotListVehicle}\r\n                            onCancel={this.handleCancelWorkingHotListVehicle}\r\n                        >\r\n                            <Checkbox onChange={this.workingVehicleOnChange} name={\"archived\"}\r\n                                      checked={workingVehicle.archived}>Archive</Checkbox>\r\n                            <br/>\r\n                            <br/>\r\n                            <Input onChange={this.workingVehicleOnChange} name={\"lpr\"} value={workingVehicle.lpr}\r\n                                   size=\"large\"\r\n                                   placeholder=\"Enter vehicle number here\"/>\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </div>\r\n                    {(hotListedVehicleResponse && hotListedVehicleResponse.totalPages > 1) ?\r\n                        <div style={{textAlign: \"right\"}}>\r\n                            <Pagination onChange={this.onPageChange} onShowSizeChange={this.onPageSizeChange}\r\n                                        showSizeChanger\r\n                                        showQuickJumper\r\n                                        defaultCurrent={1} total={count} current={this.state.filter.page}\r\n                                        pageSize={this.state.filter.pageSize}/>\r\n                        </div> : null}\r\n\r\n\r\n                </div>\r\n\r\n            </div>)\r\n    }\r\n\r\n\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {\r\n    Card,\r\n    Col,\r\n    Collapse,\r\n    Divider,\r\n    Empty,\r\n    Icon,\r\n    Pagination,\r\n    Row,\r\n    Table,\r\n    Tag,\r\n    Modal,\r\n    message, Input, Button, Menu, Dropdown, Typography, Slider, Popconfirm,\r\n} from 'antd';\r\nimport GenericFilter from \"../components/GenericFilter\";\r\nimport Moment from \"react-moment\";\r\nimport AnprService from \"../services/AnprService\";\r\nimport HotListVehicleService from \"../services/HotListVehicleService\";\r\nimport Magnifier from \"react-magnifier\";\r\nimport HotListedVehiclesList from \"../components/HotListedVehicles/HotListedVehiclesList\";\r\n\r\n\r\nconst {Column} = Table;\r\nconst {Panel} = Collapse;\r\nconst {Paragraph, Text} = Typography;\r\nconst tabList = [\r\n    {\r\n        key: 'incidents',\r\n        tab: 'Incidents',\r\n    },\r\n    {\r\n        key: 'vehicles',\r\n        tab: 'Vehicles',\r\n    },\r\n];\r\n\r\n\r\nexport default class IncidentHotlistView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: \"incidents\",\r\n            loading: true,\r\n            layout: \"list\",\r\n            events: {},\r\n            filter: {\r\n                page: 1,\r\n                pageSize: 12\r\n            },\r\n            workingEvent: {},\r\n            workingEventLoading: false,\r\n            magnifyEvent: {\r\n                magnifyEventId: \"\",\r\n                zoomFactor: 2,\r\n                minZoomFactor: 1,\r\n                maxZoomFactor: 5\r\n            },\r\n\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.handleFilterChange = this.handleFilterChange.bind(this);\r\n        this.handleLayoutChange = this.handleLayoutChange.bind(this);\r\n        this.handleRefresh = this.handleRefresh.bind(this);\r\n        this.onPageChange = this.onPageChange.bind(this);\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this);\r\n        this.onLprInputChange = this.onLprInputChange.bind(this);\r\n        this.editEvent = this.editEvent.bind(this);\r\n        this.updateEvent = this.updateEvent.bind(this);\r\n        this.magnifyEvent = this.magnifyEvent.bind(this);\r\n        this.updateZoomFactor = this.updateZoomFactor.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        AnprService.getIncidentsHotlisted(this.state.filter).then(request => {\r\n            this.setState({\"anprresponse\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    //cant use refresh to read from state as state may not have been set\r\n    refreshNow(filter) {\r\n        AnprService.getIncidentsHotlisted(this.state.filter).then(request => {\r\n            this.setState({\"anprresponse\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    archiveEvent(event) {\r\n        AnprService.archiveEvent(event).then(request => {\r\n            this.refresh();\r\n        })\r\n    }\r\n\r\n    onLprInputChange(e) {\r\n\r\n        let filter = this.state.filter;\r\n        filter.lpr = e.target.value;\r\n        console.log(filter);\r\n        this.setState({filter: filter})\r\n    }\r\n\r\n    handleFilterChange(data) {\r\n        this.setState({filter: data})\r\n    }\r\n\r\n    handleLayoutChange(data) {\r\n        this.setState({layout: data})\r\n    }\r\n\r\n    handleRefresh() {\r\n        this.refresh();\r\n    }\r\n\r\n    onPageChange(page, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter)\r\n    }\r\n\r\n    onPageSizeChange(current, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter);\r\n    }\r\n\r\n    editEvent(event) {\r\n        this.setState({workingEvent: event});\r\n    }\r\n\r\n    magnifyEvent(event) {\r\n        let magnifyEvent = this.state.magnifyEvent;\r\n        magnifyEvent.magnifyEventId = event.id;\r\n\r\n        this.setState({magnifyEvent});\r\n    }\r\n\r\n    updateZoomFactor(zoomFactor) {\r\n        let magnifyEvent = this.state.magnifyEvent;\r\n        magnifyEvent.zoomFactor = zoomFactor;\r\n\r\n        this.setState({magnifyEvent});\r\n    }\r\n\r\n\r\n    updateEvent(anprText) {\r\n\r\n        let {workingEvent, workingEventLoading} = this.state;\r\n        workingEvent.anprText = anprText;\r\n        workingEventLoading = true;\r\n        this.setState({workingEvent, workingEventLoading});\r\n        AnprService.updateEvent(workingEvent).then(request => {\r\n            let {workingEvent, workingEventLoading} = this.state;\r\n            workingEvent.anprText = anprText;\r\n            workingEventLoading = false;\r\n            this.setState({workingEventLoading});\r\n        }).catch(error => {\r\n            alert(\"error in saving\");\r\n            let {workingEventLoading} = this.state;\r\n            workingEventLoading = false;\r\n            this.setState({workingEventLoading});\r\n        })\r\n    }\r\n\r\n    onTabChange(key) {\r\n        if (key === \"incidents\") {\r\n            this.refresh();\r\n        }\r\n        this.setState({activeTab: key})\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (<div>\r\n            <Card\r\n                style={{width: '100%'}}\r\n                title=\"Hotlist\"\r\n                tabList={tabList}\r\n                activeTabKey={this.state.activeTab}\r\n                onTabChange={key => {\r\n                    this.onTabChange(key);\r\n                }}\r\n            >\r\n                {this.state.activeTab === \"incidents\" ? (this.renderIncidents()) : <HotListedVehiclesList/>}\r\n            </Card>\r\n\r\n\r\n        </div>)\r\n    }\r\n\r\n\r\n    renderIncidents() {\r\n        let layout = this.state.layout;\r\n        let lpr = this.state.filter.lpr;\r\n\r\n        return <div>\r\n            <Collapse bordered={false} defaultActiveKey={['1']}>\r\n                <Panel header=\"Filter\" key=\"1\">\r\n                    LPR: <Input value={lpr} style={{\"width\": \"200px\"}} onChange={this.onLprInputChange}/> <br/><br/>\r\n                    <GenericFilter handleRefresh={this.refresh} filter={this.state.filter} layout={layout}\r\n                                   handleFilterChange={this.handleFilterChange}\r\n                                   handleLayoutChange={this.handleLayoutChange}/>\r\n                </Panel>\r\n                <div>\r\n                    {layout === \"table\" ? (this.renderTable()) : (this.renderGrid())}\r\n                </div>\r\n            </Collapse>\r\n\r\n        </div>;\r\n    }\r\n\r\n    renderGrid() {\r\n\r\n\r\n        if (this.state.loading || !this.state.anprresponse || this.state.anprresponse.totalPage === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let events = this.state.anprresponse.events;\r\n        let workingEventLoading = this.state.workingEventLoading;\r\n        let workingEvent = this.state.workingEvent;\r\n        let count = this.state.anprresponse.totalPages * this.state.anprresponse.pageSize;\r\n\r\n        let {magnifyEventId, zoomFactor, minZoomFactor, maxZoomFactor} = this.state.magnifyEvent;\r\n        const mid = ((maxZoomFactor - minZoomFactor) / 2).toFixed(5);\r\n        const preColor = zoomFactor >= mid ? '' : 'rgba(0, 0, 0, .45)';\r\n        const nextColor = zoomFactor >= mid ? 'rgba(0, 0, 0, .45)' : '';\r\n        const marks = {\r\n            1: {label: <span><Icon style={{color: preColor}} type=\"zoom-out\"/></span>},\r\n            2: {label: <span>2</span>},\r\n            3: {label: <span>3</span>},\r\n            4: {label: <span>4</span>},\r\n            5: {label: <span><Icon style={{color: nextColor}} type=\"zoom-in\"/></span>,}\r\n        };\r\n        return <div style={{background: '#ECECEC', padding: '5px'}}>\r\n            <Row>\r\n                {\r\n                    events.map((event, index) =>\r\n                        <Col xl={{span: 8}} lg={{span: 12}} md={{span: 12}} sm={{span: 24}} xs={{span: 24}} key={index}>\r\n                            <Card\r\n                                style={{margin: \"5px\"}}\r\n                                title={\r\n                                    <div>\r\n                                        {(event.direction && event.direction === \"rev\") ?\r\n                                            <Tag color=\"#f50\">Reverse</Tag> : null}\r\n                                        {(event.helmet) ? <Tag color=\"#f50\">Without helmet</Tag> : null}\r\n                                    </div>\r\n                                }\r\n                                extra={<Dropdown overlay={<Menu>\r\n                                    <Menu.Item key=\"0\" onClick={() => this.magnifyEvent(event)}><Icon type=\"zoom-in\"/>Zoom\r\n                                        image\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"1\">\r\n                                        <a\r\n                                            title={\"click here to download\"}\r\n                                            href={\"/public/anpr/vehicle/\" + event.id + \"/image.jpg\"}\r\n                                            download={true}><Icon type=\"download\"/>{' '} Full\r\n                                            image</a>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"2\">\r\n                                        <a\r\n                                            title={\"click here to download\"}\r\n                                            href={\"/public/anpr/lpr/\" + event.id + \"/image.jpg\"}\r\n                                            download={true}><Icon type=\"download\"/>{' '} Cropped image</a>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"3\">\r\n                                        <Button type=\"danger\" onClick={() => this.archiveEvent(event)}><Icon\r\n                                            type=\"delete\"/>{' '}\r\n                                            Delete\r\n                                        </Button>\r\n                                    </Menu.Item>\r\n\r\n                                </Menu>}>\r\n                                    <Button>\r\n                                        More <Icon type=\"down\"/>\r\n                                    </Button>\r\n                                </Dropdown>}\r\n                                bordered={true}\r\n                                cover={(magnifyEventId === event.id) ?\r\n                                    <Magnifier src={\"/public/anpr/vehicle/\" + event.id + \"/image.jpg\"}\r\n                                               zoomFactor={zoomFactor}/> : <img alt=\"event\"\r\n                                                                                src={\"/public/anpr/vehicle/\" + event.id + \"/image.jpg\"}/>\r\n\r\n                                }\r\n                            >\r\n                                <div>\r\n                                    {(magnifyEventId === event.id) ?\r\n                                        <Slider\r\n                                            marks={marks}\r\n                                            min={minZoomFactor}\r\n                                            max={maxZoomFactor}\r\n                                            onChange={this.updateZoomFactor}\r\n                                            value={typeof zoomFactor === 'number' ? zoomFactor : 0}\r\n                                        />\r\n                                        : <div style={{height:\"54px\",textAlign: \"center\"}}>\r\n                                               <Button size=\"small\" type=\"primary\" onClick={() => this.magnifyEvent(event)} >\r\n                                                   <Icon type=\"zoom-in\"/>Zoom Image\r\n                                               </Button>\r\n                                           </div>\r\n                                    }\r\n                                </div>\r\n                                <div style={{textAlign: \"center\"}}>\r\n                                    <img alt=\"event\"\r\n                                         src={\"/public/anpr/lpr/\" + event.id + \"/image.jpg\"}/>\r\n                                </div>\r\n                                <div style={{marginTop: \"5px\", textAlign: \"center\"}}\r\n                                     onClick={() => this.editEvent(event)}>\r\n                                    <Paragraph\r\n                                        strong\r\n                                        editable={{onChange: this.updateEvent}}\r\n                                        copyable>{event.anprText}</Paragraph>\r\n                                    <Text\r\n                                        type=\"secondary\">{(workingEventLoading && workingEvent.id === event.id) ? \"saving...\" : \"\"}</Text>\r\n                                    <div>\r\n                                        <Text code> <Moment format=\"lll\">{event.eventDate}</Moment>{' '}|{' '}<Moment\r\n                                            format=\"LTS\">{event.eventDate}</Moment></Text>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Text code><Icon type=\"environment\"/> {event.location}</Text>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n            <div style={{textAlign: \"right\"}}>\r\n                <Pagination onChange={this.onPageChange} onShowSizeChange={this.onPageSizeChange} showSizeChanger\r\n                            showQuickJumper\r\n                            defaultCurrent={1} total={count} current={this.state.filter.page}\r\n                            pageSize={this.state.filter.pageSize}/>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n\r\n    renderTable() {\r\n\r\n        if (this.state.loading || !this.state.events || this.state.events.Total === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let events = this.state.anprresponse.events;\r\n        let count = this.state.anprresponse.totalPages * this.state.anprresponse.pageSize;\r\n\r\n        const paginationOptions = {\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            onShowSizeChange: this.onPageSizeChange,\r\n            onChange: this.onPageChange,\r\n            total: count\r\n        };\r\n\r\n        const pagination = {\r\n            ...paginationOptions,\r\n            total: count,\r\n            current: this.state.filter.page,\r\n            pageSize: this.state.filter.pageSize\r\n        };\r\n\r\n        return (\r\n            <Table dataSource={events} pagination={pagination}>\r\n                <Column title=\"Location\" dataIndex=\"location\" key=\"location\"\r\n                        render={location => location}/>\r\n                <Column title=\"Date\" dataIndex=\"eventDate\" key=\"eventDate\"\r\n                        render={eventDate => (<Moment format=\"L\">{eventDate}</Moment>)}/>\r\n                <Column title=\"Time\" dataIndex=\"eventDate\" key=\"eventTime\"\r\n                        render={eventDate => (<Moment format=\"LTS\">{eventDate}</Moment>)}/>\r\n                <Column title=\"LPR\" dataIndex=\"anprText\" key=\"anprText\"\r\n                        render={anprText => anprText}/>\r\n                <Column title=\"image\" dataIndex=\"id\" key=\"anprimage\"\r\n                        render={id => (\r\n                            <a title={\"click here to download\"} href={\"/public/anpr/lpr/\" + id + \"/image.jpg\"}\r\n                               download={true}>\r\n                                <img alt=\"event\"\r\n                                     src={\"/public/anpr/lpr/\" + id + \"/image.jpg\"}/></a>)}/>\r\n                <Column title=\"direction\" dataIndex=\"direction\" key=\"direction\"\r\n                        render={direction => direction}/>\r\n                <Column title=\"Helmet\" dataIndex=\"helmet\" key=\"helmet\"\r\n                        render={helmet => helmet ? <span>No</span> : <span>Yes</span>}/>\r\n                <Column title=\"Action\"\r\n                        key=\"action\"\r\n                        render={(text, event) => (\r\n                            <Button type=\"danger\" onClick={() => this.archiveEvent(event)}><Icon type=\"delete\"/>{' '}\r\n                                Delete</Button>\r\n                        )}\r\n                />\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport {\r\n  Anchor,\r\n  Card,\r\n  Col,\r\n  Collapse,\r\n  Divider,\r\n  Empty,\r\n  Icon,\r\n  Spin,\r\n  Pagination,\r\n  Row,\r\n  Table,\r\n  Tag,\r\n  Timeline,\r\n  Modal,\r\n  Tabs,\r\n  message,\r\n  Input,\r\n  Button,\r\n  Menu,\r\n  Dropdown,\r\n  Typography,\r\n  Slider\r\n} from \"antd\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport AnprService from \"../../services/AnprService\";\r\n\r\nconst {Paragraph, Text} = Typography;\r\nconst {Column} = Table;\r\nexport default class IncidentTimeline extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n          loading:false,\r\n          anprresponse: {},\r\n          filter:{\r\n            currentPage: 1,\r\n            pageSizes: 24,\r\n            lpr: \"\",\r\n            incidentType:\"\"\r\n          }\r\n        };\r\n\r\n       this.toggleVisible = this.toggleVisible.bind(this);\r\n       this.refreshBriefIncidentsNow = this.refreshBriefIncidentsNow.bind(this);\r\n       this.onModalPageChange = this.onModalPageChange.bind(this);\r\n       this.onModalPageSizeChange = this.onModalPageSizeChange.bind(this);\r\n       this.refreshBriefIncidentsNow=this.refreshBriefIncidentsNow.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        let filter = this.state.filter;\r\n        if((filter.lpr != nextProps.lpr) || (filter.incidentType != nextProps.incidentType)) {\r\n            filter.lpr = nextProps.lpr;\r\n            filter.incidentType = nextProps.incidentType;\r\n            this.setState({filter},()=>{\r\n              this.refreshBriefIncidentsNow();\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    toggleVisible(){\r\n        let filter = this.state.filter;\r\n        filter.currentPage = 1;\r\n        this.setState({filter: filter});\r\n        this.props.toggleVisible();\r\n\r\n    }\r\n\r\n    refreshBriefIncidentsNow() {\r\n\r\n           let {loading, filter, anprresponse} = this.state;\r\n\r\n           if(filter.lpr && filter.incidentType){\r\n              this.setState({loading : true});\r\n              AnprService.getIncidentTimeline(filter).then(request =>\r\n              {\r\n                loading = false;\r\n                anprresponse= request.data;\r\n                this.setState({loading, anprresponse});\r\n              }).catch(error=> {\r\n               loading = false;\r\n               this.setState({loading});\r\n               alert(\"Something went wrong\");\r\n                 });\r\n           }\r\n\r\n    }\r\n      onModalPageChange(currentPage, pageSizes){\r\n         let filter = this.state.filter;\r\n         filter.currentPage = currentPage;\r\n         filter.pageSizes = pageSizes;\r\n         this.refreshBriefIncidentsNow(filter);\r\n      }\r\n\r\n      onModalPageSizeChange(current, pageSizes) {\r\n           let filter = this.state.filter;\r\n           filter.pageSizes = pageSizes;\r\n           this.refreshBriefIncidentsNow(filter);\r\n        }\r\n\r\n    render(){\r\n         let events = this.state.anprresponse.events;\r\n         let count = this.state.anprresponse.totalPages * this.state.anprresponse.pageSizes;\r\n\r\n         const paginationOption = {\r\n                showSizeChanger: false,\r\n                showQuickJumper: false,\r\n                pageSize:5,\r\n                showLessItems: true,\r\n                onShowSizeChange: this.onModalPageSizeChange,\r\n                onChange: this.onModalPageChange,\r\n                total: count\r\n            };\r\n\r\n            const pagination = {\r\n                ...paginationOption,\r\n                total: count,\r\n                current: this.state.filter.currentPage,\r\n                pageSizes: this.state.filter.pageSizes\r\n            };\r\n\r\n         if (this.state.loading)\r\n         {\r\n            const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\r\n            return <Spin indicator={antIcon}/>\r\n         }\r\n\r\n         if (!this.state.anprresponse.events){\r\n                   return <Empty description={false}/>\r\n         }\r\n\r\n        return <Modal\r\n\r\n                title={<div><Paragraph copyable>{this.state.filter.lpr}</Paragraph></div> }\r\n                visible={this.props.visible}\r\n                onCancel={this.toggleVisible}\r\n                onClose={this.toggleVisible}\r\n                footer={[\r\n                         <Button key=\"close\"  type=\"primary\" onClick={this.toggleVisible}>\r\n                           Close\r\n                         </Button>\r\n                        ]}\r\n                >\r\n                   <div>\r\n                              <Table dataSource={events} pagination={pagination}>\r\n                                   <Column title=\"When and Where\"\r\n\r\n\r\n                                            render={(text, record, index)=> <Timeline.Item>\r\n                                          <div>\r\n                                            <p><Icon type=\"clock-circle\" />  <Moment format=\"lll\">{record.eventDate}</Moment></p>\r\n                                            <p><Icon type=\"environment\"/> {record.location}</p>\r\n                                            <a title={\"click here to download\"}\r\n                                              href={\"/public/anpr/lpr/\" + record.id + \"/image.jpg\"}\r\n                                            download={true}>\r\n                                            <img alt=\"event\"\r\n                                                src={\"/public/anpr/lpr/\" + record.id + \"/image.jpg\"}style={{width:160,height:\"auto\"}}/>\r\n                                            </a>\r\n                                          </div>\r\n                                            </Timeline.Item>\r\n                                            }/>\r\n                                   <Column  title=\"Captured Image\" dataIndex=\"id\" key=\"anprimage\"\r\n                                             render={id => (\r\n                                                     <a title={\"click here to download\"}  href={\"/public/anpr/vehicle/\" + id + \"/image.jpg\"}\r\n                                                     download={true}>\r\n                                                     <img alt=\"event\"\r\n                                                     src={\"/public/anpr/vehicle/\" + id + \"/image.jpg\" }style={{width:200,height:\"auto\"}}/></a>)}/>\r\n                              </Table>\r\n                           </div>\r\n\r\n               </Modal>\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport {\r\n  Anchor,\r\n  Card,\r\n  Col,\r\n  Collapse,\r\n  Checkbox,\r\n  Divider,\r\n  Empty,\r\n  Icon,\r\n  Spin,\r\n  Pagination,\r\n  Row,\r\n  Table,\r\n  Tag,\r\n  Timeline,\r\n  Modal,\r\n  Tabs,\r\n  message,\r\n  Input,\r\n  Button,\r\n  Menu,\r\n  Dropdown,\r\n  Typography,\r\n  Slider\r\n} from \"antd\";\r\nimport GenericFilter from \"../../components/GenericFilter\";\r\nimport Moment from \"react-moment\";\r\nimport AnprService from \"../../services/AnprService\";\r\nimport IncidentTimeline from \"./IncidentTimeline\";\r\nimport Magnifier from \"react-magnifier\";\r\n\r\nconst { Link } = Anchor;\r\nconst { Panel } = Collapse;\r\nconst { Paragraph, Text } = Typography;\r\nconst {Column} = Table;\r\nconst { TabPane } = Tabs;\r\nconst { Search } = Input;\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\r\n\r\nexport default class MasterDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      archiveEventsLoading: \"\",\r\n      activeTab:\"All-Incidents\",\r\n      visible:false,\r\n      timelineLpr:\"\",\r\n      filter: {\r\n        lpr: \"\",\r\n      },\r\n      archiveLpr:{\r\n                 anprresponse: {},\r\n                 lpr: \"\",\r\n              },\r\n\r\n      allData:{\r\n        loading:false,\r\n        anprresponse: {},\r\n        filter: {\r\n          pages: 1,\r\n          pageSizes: 24,\r\n           lpr: \"\",\r\n           incidentType:\"\",\r\n        }\r\n      }\r\n    };\r\n\r\n    this.refresh = this.refresh.bind(this);\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n    this.onMasterDataPageChange = this.onMasterDataPageChange.bind(this);\r\n    this.onMasterDataPageSizeChange = this.onMasterDataPageSizeChange.bind(this);\r\n    this.handleTabClick = this.handleTabClick.bind(this);\r\n    this.refreshIncidentsNow = this.refreshIncidentsNow.bind(this);\r\n    this.onLprInputChange=this.onLprInputChange.bind(this);\r\n    this.search=this.search.bind(this);\r\n    this.onTabChange=this.onTabChange.bind(this);\r\n    this.toggleIncidentTimelineModal = this.toggleIncidentTimelineModal.bind(this);\r\n    this.archiveLprOnChange = this.archiveLprOnChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refresh();\r\n  }\r\n\r\n  handleTabClick(tabIndex) {\r\n       this.setState({\r\n         activeTabIndex:\r\n          tabIndex === this.state.activeTabIndex\r\n            ? this.props.defaultActiveTabIndex\r\n          : tabIndex\r\n       });\r\n     }\r\n\r\n  refresh() {\r\n     this.refreshIncidentsNow();\r\n  }\r\n\r\n  showModal = (lpr) => {\r\n        this.setState({\r\n          visible: true,\r\n          timelineLpr: lpr\r\n        });\r\n  }\r\n  toggleIncidentTimelineModal(){\r\n      let visible = this.state.visible;\r\n      this.setState({visible: !visible});\r\n  }\r\n\r\n  //cant use refresh to read from state as state may not have been set\r\n\r\n  refreshIncidentsNow() {\r\n      let allData = this.state.allData;\r\n      allData.loading=true;\r\n      this.setState({allData:allData});\r\n      AnprService.getIncidentsList(this.state.allData.filter).then(request =>\r\n      {\r\n           allData.loading = false;\r\n           allData.anprresponse= request.data;\r\n           this.setState({allData:allData});\r\n      }).catch(error=> {\r\n             allData.loading = false;\r\n             this.setState({ hasError: true });\r\n             alert(\"Something went wrong\");\r\n      });\r\n  }\r\n\r\n  handleRefresh(){\r\n    this.refresh();\r\n  }\r\n\r\n  onLprInputChange(e) {\r\n    let filter = this.state.filter;\r\n    filter.lpr = e.target.value;\r\n    this.setState({filter: filter})\r\n  }\r\n\r\n  search(searchText) {\r\n    let {filter, allData} = this.state;\r\n    filter.lpr = searchText;\r\n    allData.filter.lpr = searchText;\r\n    this.setState({filter,allData},()=>{\r\n      this.refresh();\r\n    });\r\n  }\r\n\r\n  onMasterDataPageChange(pages, pageSizes){\r\n     let filter = this.state.allData.filter;\r\n     filter.pages = pages;\r\n     filter.pageSizes = pageSizes;\r\n     this.refreshIncidentsNow(filter);\r\n  }\r\n\r\n  onMasterDataPageSizeChange(current, pageSizes) {\r\n     let filter = this.state.allData.filter;\r\n     filter.pageSizes = pageSizes;\r\n     this.refreshIncidentsNow(filter);\r\n  }\r\n\r\n  onTabChange(key) {\r\n      this.setState({activeTab: key})\r\n  }\r\n   archiveLprOnChange(lpr) {\r\n          this.setState({archiveEventsLoading : lpr});\r\n          AnprService.archiveAllEvent(lpr).then(request => {\r\n            this.setState({archiveEventsLoading : \"\"});\r\n            this.refresh(this.state.archiveLpr);\r\n            message.success('Vehicle archived!');\r\n          }).catch(error => {\r\n              this.setState({archiveEventsLoading : \"\"});\r\n              message.error('Something went wrong!');\r\n          })\r\n   }\r\n\r\n  render() {\r\n\r\n    return (\r\n          <div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n                <Card\r\n                style={{width: '100%'}}\r\n                title={<Row>\r\n                  <Col xl={{span: 16}} lg={{span: 16}} md={{span: 12}} sm={{span: 12}} xs={{span: 12}}>\r\n                       <h4>Master-Anpr-Data</h4>\r\n                  </Col>\r\n                  <Col xl={{span: 8}} lg={{span: 8}} md={{span: 12}} sm={{span: 12}} xs={{span: 12}}>\r\n\r\n                     <Search  allowClear\r\n                       placeholder=\"Search Vehicle \"\r\n                       onChange={this.onLprInputChange}\r\n                       style={{textAlign:\"right\"}}\r\n                       onSearch={value => this.search(value)} enterButton\r\n                      />\r\n                  </Col>\r\n                </Row>}\r\n\r\n\r\n\r\n                onTabChange={key => {\r\n                    this.onTabChange(key);\r\n                }}\r\n                >\r\n                  {this.renderMasterData()}\r\n                 <IncidentTimeline\r\n                                    lpr={this.state.timelineLpr}\r\n                                    incidentType={this.state.activeTab}\r\n                                    visible={this.state.visible}\r\n                                    toggleVisible={this.toggleIncidentTimelineModal}\r\n                                    />\r\n\r\n              </Card>\r\n\r\n          </div>\r\n    );\r\n  }\r\n\r\n  renderMasterData(){\r\n\r\n\r\n   let events = this.state.allData.anprresponse.events;\r\n   let count = this.state.allData.anprresponse.totalPages * this.state.allData.anprresponse.pageSizes;\r\n\r\n   let {archiveLpr} = this.state;\r\n\r\n   const paginationOption = {\r\n       showSizeChanger: true,\r\n       showQuickJumper: true,\r\n       onShowSizeChange: this.onMasterDataPageSizeChange,\r\n       onChange: this.onMasterDataPageChange,\r\n       total: count\r\n   };\r\n\r\n   const pagination = {\r\n       ...paginationOption,\r\n       total: count,\r\n       current: this.state.allData.filter.pages,\r\n       pageSizes: this.state.allData.filter.pageSizes\r\n   };\r\n\r\n   if (this.state.allData.loading)\r\n   {\r\n      const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\r\n      return <Spin indicator={antIcon}/>\r\n   }\r\n\r\n   if (!this.state.allData.anprresponse.events){\r\n       return <Empty description={false}/>\r\n   }\r\n\r\n   return (\r\n     <div>\r\n       <Table dataSource={events} pagination={pagination}>\r\n\r\n         <Column  title=\"LPR\" dataIndex=\"anprText\" key=\"anprText\"\r\n            render={anprText => <Button onClick={()=> this.showModal(anprText)}>{anprText}</Button>}/>\r\n\r\n         <Column title=\"Incident Count\" dataIndex=\"repeatedTimes\" key=\"repeatedTimes\"\r\n             render={repeatedTimes => repeatedTimes}/>\r\n\r\n         <Column\r\n             render={(text,record,index)=><div>\r\n              <p><Button type={'danger'} loading={this.state.archiveEventsLoading === record.anprText} onClick={()=>this.archiveLprOnChange(record.anprText)}>Archive</Button></p>\r\n\r\n             </div>\r\n             }/>\r\n       </Table>\r\n     </div>\r\n\r\n   )\r\n  }\r\n\r\n}\r\n","import axios from \"../axios\";\r\n\r\nclass FaceMatchService {\r\n    static Instance() {\r\n        return new FaceMatchService()\r\n    }\r\n\r\n    lookup(image) {\r\n        return axios.post('/api/frs/lookup', {image:image});\r\n    }\r\n\r\n    register(userdata, image) {\r\n        userdata.image = image;\r\n        return axios.post('/api/frs/register', userdata)\r\n    }\r\n}\r\n\r\nexport default FaceMatchService.Instance()","import React, {Component} from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport {Button, Col, Form, Input, Row, Typography} from \"antd\";\r\nimport FaceMatchService from \"../../services/facerec/FaceMatchService\";\r\nimport {EventBus} from \"../event\";\r\nconst {Text} = Typography;\r\n\r\nexport default class FaceMatchView extends Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            captured:false,\r\n            userdata:{},\r\n            image:\"blank\"\r\n        };\r\n        this.webcamRef = React.createRef();\r\n        this.capture = this.capture.bind(this);\r\n        this.resetcamera = this.resetcamera.bind(this);\r\n    }\r\n\r\n    capture() {\r\n        var image = this.webcamRef.current.getScreenshot();\r\n        console.log('publishing image on bus', image);\r\n        EventBus.publish('frs-screenshot', image);\r\n        this.setState({image:image, captured: true});\r\n    }\r\n\r\n    resetcamera() {\r\n        this.setState({image:\"blank\", captured: false});\r\n    }\r\n\r\n    render() {\r\n\r\n        const videoConstraints = {\r\n            width: 400,\r\n            height: 400,\r\n            facingMode: \"environment\"\r\n        };\r\n\r\n        let elmnt;\r\n        if (this.state.captured) {\r\n            elmnt = <img src={this.state.image}/>\r\n        }\r\n        else {\r\n            elmnt = <Webcam\r\n                width={400}\r\n                height={400}\r\n                audio={false}\r\n                screenshotFormat=\"image/jpeg\"\r\n                videoConstraints={videoConstraints}\r\n                ref={this.webcamRef}/>\r\n        }\r\n        return (<div>\r\n            <Row>\r\n                <Col md={6}>\r\n                    {elmnt}\r\n                   <br/>\r\n                    <Button onClick={this.capture}>Capture photo</Button>\r\n                    <Button onClick={this.resetcamera}>Reset</Button>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <WrapperUserForm userdata={this.state.userdata}/>\r\n                </Col>\r\n            </Row>\r\n        </div>)\r\n    }\r\n}\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass UserForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            address:'',\r\n            submitted: false,\r\n            loading: false,\r\n            loginError: '',\r\n            userdata:this.props.userdata\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.screenshot = this.screenshot.bind(this);\r\n        this.lookup = this.lookup.bind(this);\r\n\r\n        EventBus.subscribe('frs-refresh', (data) => this.refresh(data));\r\n        EventBus.subscribe('frs-screenshot', (data) => this.screenshot(data));\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        console.log('component mounted');\r\n\r\n        this.props.form.setFieldsInitialValue({\r\n            id : this.state.userdata.id,\r\n            name: this.state.userdata.name,\r\n            address: this.state.userdata.address\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('component unmounted');\r\n    }\r\n\r\n    screenshot(image) {\r\n        console.log('rcvd image on bus', image);\r\n        this.setState({image: image});\r\n    }\r\n\r\n    lookup() {\r\n        FaceMatchService.lookup(this.state.image).then(response => {\r\n            this.setState({userdata : response.data});\r\n            EventBus.publish('frs-refresh', response.data)\r\n        });\r\n    }\r\n\r\n    refresh(userdata) {\r\n        console.log(\"got refresh with userdata:\", userdata);\r\n        this.props.form.setFieldsValue({\r\n            id : userdata.id,\r\n            name: userdata.name,\r\n            address: userdata.address\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const form = this.props.form;\r\n        var userdata = {};\r\n        userdata.id = form.getFieldValue(\"id\");\r\n        userdata.name = form.getFieldValue(\"name\");\r\n        userdata.address = form.getFieldValue(\"address\");\r\n\r\n        let validationError;\r\n        if (!userdata.id) {\r\n            validationError = \"Missing ID\"\r\n        }\r\n\r\n        if (!userdata.name) {\r\n            validationError = \"Missing name\"\r\n        }\r\n\r\n        if (!userdata.address) {\r\n            validationError = \"Missing address\"\r\n        }\r\n\r\n        if (!this.state.image) {\r\n            validationError = \"First Capture image\"\r\n        }\r\n\r\n        if (validationError) {\r\n            this.setState({validationError: validationError});\r\n            console.log(\"Error validating data\", validationError);\r\n            return\r\n        }\r\n\r\n        console.log('registering user', userdata);\r\n        this.setState({submitted: true, loading: true});\r\n\r\n        FaceMatchService.register(userdata, this.state.image)\r\n    }\r\n\r\n    render() {\r\n        const {getFieldDecorator, getFieldsError} = this.props.form;\r\n        const validationError = this.state.validationError;\r\n\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Item>\r\n                    {getFieldDecorator('id', {rules: [{required: true, message: 'enter id!'}],})(\r\n                        <Input addonBefore=\"ID\" placeholder=\"ID\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('name', {rules: [{required: true, message: 'enter name!'}],})(\r\n                        <Input addonBefore=\"name\" placeholder=\"name\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('address', {rules: [{required: true, message: 'enter address!'}],})(\r\n                        <Input addonBefore=\"address\" placeholder=\"address\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Button onClick={this.lookup}>Lookup</Button>\r\n                <Button htmlType=\"submit\" type=\"primary\" disabled={hasErrors(getFieldsError())}>Register</Button>\r\n                {validationError && <Text type=\"danger\">{validationError}</Text>}\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrapperUserForm = Form.create({name: 'user_form'})(UserForm);","import React, {Component} from 'react';\r\n\r\nimport './App.css';\r\nimport {Layout} from 'antd';\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Headbar from \"./components/Headbar\";\r\nimport Footerbar from \"./components/Footerbar\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport HomeView from \"./views/HomeView\";\r\nimport FeedView from \"./views/FeedView\";\r\nimport {Route} from \"react-router-dom\";\r\nimport DeviceView from \"./views/DeviceView\";\r\nimport UserListView from \"./views/UserListView\";\r\nimport DeviceConfigView from \"./views/DeviceConfigView\";\r\n\r\nimport UserService from \"./services/UserService\";\r\nimport {EventBus} from \"./components/event\"\r\nimport LoginView from \"./views/LoginView\";\r\nimport IncidentListView from \"./views/IncidentListView\";\r\nimport TriggerView from \"./views/TriggerView\";\r\nimport AnprView from \"./views/AnprView\";\r\nimport TrafficIncidentView from \"./views/TrafficIncidentView\";\r\nimport IncidentRepeatedView from \"./views/incidentsRepeated/IncidentRepeatedView\";\r\nimport IncidentHotlistView from \"./views/IncidentHotlistView\";\r\nimport MasterDataView from \"./views/masterData/MasterDataView\";\r\nimport FaceMatchView from \"./components/facerec/FaceMatchView\";\r\n\r\nconst {Content} = Layout;\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {loggedIn: false};\r\n\r\n        EventBus.subscribe('login-logout', (event) => this.refreshMenu(event))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshMenu()\r\n    }\r\n\r\n    refreshMenu() {\r\n        this.setState({loggedIn: UserService.isLoggedIn()});\r\n    }\r\n\r\n    render() {\r\n\r\n        const isLoggedIn = this.state.loggedIn;\r\n\r\n        const sideBar = isLoggedIn ? <Sidebar/> : null;\r\n        const header = isLoggedIn ? <Headbar isLoggedIn={isLoggedIn}/> : null;\r\n\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Layout style={{minHeight: '100vh'}}>\r\n                    {sideBar}\r\n                    <Layout>\r\n                        {header}\r\n                        <Content style={{margin: '24px 16px 0'}}>\r\n                            <div style={{padding: 4}} >\r\n                                <Route path='/login' exact={true} component={LoginView}/>\r\n                                <PrivateRoute path='/' exact={true} component={HomeView}/>\r\n                                <PrivateRoute path='/incidents' exact={true} component={TrafficIncidentView}/>\r\n                                <PrivateRoute path='/incidents/hotlisted' exact={true} component={IncidentHotlistView}/>\r\n                                <PrivateRoute path='/incidents/repeated' exact={true} component={IncidentRepeatedView}/>\r\n                                <PrivateRoute path='/anpr' exact={true} component={AnprView}/>\r\n                                <PrivateRoute path='/anpr/masterdata' exact={true} component={MasterDataView}/>\r\n                                <PrivateRoute path='/user' exact={true} component={UserListView}/>\r\n                                <PrivateRoute path='/feed' exact={true} component={FeedView}/>\r\n                                <PrivateRoute path='/trigger' exact={true} component={TriggerView}/>\r\n                                <PrivateRoute path='/device' exact={true} component={DeviceView}/>\r\n                                <PrivateRoute path='/device/conf' exact={true} component={DeviceConfigView}/>\r\n                                <PrivateRoute path='/ngofr' exact={true} component={FaceMatchView}/>\r\n                            </div>\r\n                        </Content>\r\n                        <Footerbar/>\r\n                    </Layout>\r\n                </Layout>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter as Router, Switch} from 'react-router-dom';\r\n\r\nclass Root extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                    <Switch>\r\n                        <App/>\r\n                    </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<Root/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}