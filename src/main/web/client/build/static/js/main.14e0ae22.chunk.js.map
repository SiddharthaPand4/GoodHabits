{"version":3,"sources":["components/Sidebar.js","components/Headbar.js","components/Footerbar.js","services/axios.js","helpers/auth-header.js","helpers/config.js","services/UserService.js","components/PrivateRoute.js","services/DashboardService.js","views/HomeView.js","services/FeedService.js","views/FeedView.js","services/DeviceService.js","views/DeviceView.js","views/UserListView.js","views/DeviceConfigView.js","helpers/history.js","views/LoginView.js","services/IncidentService.js","views/IncidentListView.js","services/TriggerService.js","components/TriggerSet.js","views/TriggerView.js","components/GenericFilter.js","services/AnprService.js","views/AnprView.js","App.js","serviceWorker.js","index.js","components/event.js"],"names":["Sider","Layout","SubMenu","Menu","Sidebar","breakpoint","collapsedWidth","onBreakpoint","broken","console","log","onCollapse","collapsed","type","className","theme","mode","defaultSelectedKeys","Item","key","to","title","Component","Header","Headbar","style","background","padding","Footer","textAlign","HttpService","ax","axios","create","baseURL","timeout","headers","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","Authorization","response","undefined","err","url","includes","Promise","reject","status","clear","window","location","Instance","authHeader","UserService","userId","get","user","requestBody","userName","lastName","firstName","email","id","roles","method","data","stringify","delete","username","password","post","setItem","PrivateRoute","component","rest","render","props","isLoggedIn","pathname","state","from","DashboardService","filter","RangePicker","DatePicker","Option","Select","HomeView","loading","videoVisible","layout","incidents","filterType","resultSetByDate","chartData","resultSetByTime","aggregation","isOpenDatePicker","refresh","bind","onChange","onOk","fetchDateWiseVehiclesCount","handleChange","openDatePicker","this","getTotalNoOfVehiclesBetweenTwoDates","then","keys","values","i","length","push","countOfTotalVehicles","resultSet","labels","datasets","label","setState","error","message","value","dateString","gutter","span","defaultValue","width","onClick","open","ranges","moment","startOf","endOf","format","showTime","options","display","text","maintainAspectRatio","responsive","legend","scales","yAxes","ticks","beginAtZero","scaleLabel","labelString","xAxes","tooltips","callbacks","tooltipItem","tooltipItems","datasetIndex","index","plugins","colorschemes","scheme","FeedService","feed","ID","Text","Typography","FeedView","feeds","EventBus","subscribe","event","removeFeed","getFeeds","startFeed","Math","random","stopFeed","WrappedFeedForm","Form","name","FeedForm","map","color","site","cover","alt","src","bordered","actions","submitted","loginError","handleSubmit","e","preventDefault","validationError","form","getFieldValue","addFeed","publish","fieldsError","getFieldDecorator","getFieldsError","onSubmit","rules","required","addonBefore","placeholder","htmlType","disabled","Object","some","field","DeviceService","DeviceView","device","getDevice","extra","fingerprint","model","license","registeredTo","Column","Table","confirm","Modal","UserListView","Button","Group","showModal","visible","users","showUserDetails","addUser","refreshUsers","close","getUsers","getRoles","getUser","okText","okType","cancelText","deleteUser","success","onCancel","WrappedUserForm","UserForm","bodyStyle","dataSource","pagination","scroll","x","dataIndex","record","href","showUser","showDeleteConfirm","createUser","catch","initialValue","role","align","size","TabPane","Tabs","DeviceConfigView","deviceconfig","getDeviceConfig","tab","defaultActiveKey","onTabChange","history","createBrowserHistory","LoginView","WrappedLoginForm","LoginForm","login","offset","prefix","withRouter","IncidentService","incident","Panel","ColumnGroup","Collapse","ButtonGroup","IncidentListView","page","pageSize","handleDone","archiveIncident","onFromDateChange","onFromTimeChange","onToDateChange","onToTimeChange","onPageChange","onPageSizeChange","getIncidents","videoid","ReactPlayer","canPlay","date","fromDate","time","fromTime","toDate","toTime","refreshNow","current","controls","header","minuteStep","secondStep","icon","changeLayout","renderGrid","renderTable","Total","description","incidentsresponse","count","totalPages","onShowSizeChange","showSizeChanger","showQuickJumper","defaultCurrent","total","eventType","eventDate","eventStart","hidden","eventEnd","eventDuration","imageId","showVideo","videoId","dur","TriggerService","trigger","put","TriggerSet","days","onChange0","onChange1","onChange2","onChange3","onChange4","onChange5","onChange6","onChangeValue","saveTrigger","deleteTrigger","setName","changed","idx","TriggerDays","Start","End","new","createTrigger","Day","target","selected","marks","day","start","end","dlist","min","max","range","TriggerView","triggers","tsRef","React","createRef","newTrigger","getTriggers","selectedt","NewTrigger","ChangeTrigger","selectedname","Name","selector","ref","handleRefresh","handleLayoutChange","handleFilterChange","AnprService","events","getEvents","anprresponse","totalPage","vehicleImage","Content","App","loggedIn","refreshMenu","sideBar","margin","minHeight","path","exact","AnprView","Boolean","hostname","match","Root","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","forEach","callback"],"mappings":"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","file":"static/js/main.14e0ae22.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Icon, Layout, Menu, } from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class Sidebar extends Component {\r\n    render() {\r\n        return (\r\n            <Sider\r\n                breakpoint=\"lg\"\r\n                collapsedWidth=\"0\"\r\n                onBreakpoint={broken => {\r\n                    console.log(broken);\r\n                }}\r\n                onCollapse={(collapsed, type) => {\r\n                    console.log(collapsed, type);\r\n                }}\r\n            >\r\n                <div className=\"logo\"/>\r\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['0']}>\r\n                    <Menu.Item key=\"0\">\r\n                        <Link to='/'><Icon type='home' /><span className='nav-text'>Home</span></Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"1\" className=\"sidebar-nav-link\">\r\n                        <Link to='/incidents'><Icon type='alert' /><span className='nav-text'>Incidents</span></Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"6\" className=\"sidebar-nav-link\">\r\n                        <Link to='/anpr'><Icon type='box-plot' /><span className='nav-text'>ANPR</span></Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                        <Link to='/feed'><Icon type='video-camera' /><span className='nav-text'>Feed</span></Link>\r\n                    </Menu.Item>\r\n                    <SubMenu key=\"admin\" title={<span><Icon type=\"deployment-unit\"/>Admin</span>}>\r\n                        <Menu.Item key=\"3\">\r\n                            <Link to='/user'><Icon type='user' /><span className='nav-text'>Users</span></Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\">\r\n                            <Link to='/device'><Icon type='laptop' /><span className='nav-text'>Device</span></Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"5\">\r\n                            <Link to='/trigger'><Icon type=\"clock-circle\" /><span className='nav-text'>Triggers</span></Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n        );\r\n    }\r\n}","\r\nimport React, {Component} from 'react';\r\nimport {Layout} from \"antd\";\r\nconst {Header} = Layout;\r\n\r\nexport default class Headbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header style={{ background: '#fff', padding: 10 }} >&nbsp;</Header>\r\n        )\r\n    }\r\n}","\r\nimport React, {Component} from 'react';\r\nimport {Layout} from \"antd\";\r\nconst {Footer} = Layout;\r\n\r\nexport default class Headbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Footer style={{ textAlign: 'center' }}>SynergyLabs © 2019</Footer>\r\n        )\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nfunction forceLogout() {\r\n    localStorage.clear();\r\n    window.location = '/login';\r\n}\r\n\r\nclass HttpService {\r\n\r\n    static Instance() {\r\n\r\n        let ax = new axios.create({\r\n            baseURL: \"/\",\r\n            timeout: 5000,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        ax.interceptors.request.use(config => {\r\n            let token = JSON.parse(localStorage.getItem('syntoken'));\r\n            if (token) {\r\n                config.headers.Authorization = \"Bearer \" + token.token\r\n            }\r\n            return config\r\n        });\r\n\r\n        axios.interceptors.response.use(undefined, err => {\r\n            if (err.response.config.url.includes('/login'))\r\n                return Promise.reject(err);\r\n\r\n            if (err.response.status === 403) return forceLogout();\r\n            if (err.response.status !== 401) return Promise.reject(err);\r\n        });\r\n\r\n        return ax;\r\n    }\r\n\r\n}\r\n//https://gist.github.com/alfonmga/96474f6adb6ed8dee8bc8bf8627c0ae1\r\nexport default HttpService.Instance()","export function authHeader() {\r\n    // return authorization header with jwt token\r\n    let token = JSON.parse(localStorage.getItem('syntoken'));\r\n\r\n    if (token) {\r\n        return {\r\n            'Authorization': 'Bearer ' + token,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        };\r\n    } else {\r\n        return {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        };\r\n    }\r\n}","export const config = {\r\n    apiUrl: '/'\r\n};","import axios from \"./axios\";\r\nimport { authHeader } from '../helpers/auth-header';\r\nimport { config } from '../helpers/config'\r\n\r\nclass UserService {\r\n\r\n    static Instance() {\r\n        return new UserService()\r\n    }\r\n\r\n    getUser(userId) {\r\n        return axios.get('/api/user/' + userId);\r\n    }\r\n\r\n    getUsers() {\r\n        return axios.get('/api/user/');\r\n    }\r\n\r\n    getRoles(){\r\n        return axios.get('/api/user/roles');\r\n    }\r\n\r\n     createUser(user){\r\n        const requestBody = {\r\n             userName:user.userName,\r\n             lastName:user.lastName,\r\n             firstName:user.firstName,\r\n             email:user.email,\r\n             id:user.id,\r\n             roles:user.roles,\r\n        };\r\n\r\n        const request = {\r\n            method: 'POST',\r\n            headers: authHeader(),\r\n            data: JSON.stringify(requestBody),\r\n            url: config.apiUrl + 'api/user/'\r\n        };\r\n        if(user.id){\r\n            request.method='PUT';\r\n        }\r\n        return axios(request);\r\n    }\r\n\r\n    deleteUser(userId){\r\n        return axios.delete('/api/user/' + userId);\r\n    }\r\n\r\n    isLoggedIn() {\r\n        let token = JSON.parse(localStorage.getItem('syntoken'));\r\n        if (!token) {\r\n            console.log(\"cannot locate token, returning false\");\r\n            return false;\r\n        }\r\n        console.log(\"located token, returning true\");\r\n        return true\r\n    }\r\n\r\n    async login(username, password) {\r\n        let response = await axios.post('/login', JSON.stringify({ username, password }), {headers: {\r\n                'Content-Type': 'application/json',\r\n            }});\r\n        console.log(\"got this response\", response);\r\n        let token = response.data;\r\n        if (token) {\r\n            localStorage.setItem('syntoken', JSON.stringify(token));\r\n        }\r\n        return token;\r\n    }\r\n\r\n}\r\n\r\nexport default UserService.Instance()\r\n\r\n//TODO valiate token,\r\n// https://medium.com/@siddharthac6/json-web-token-jwt-the-right-way-of-implementing-with-node-js-65b8915d550e","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport UserService from \"../services/UserService\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        UserService.isLoggedIn()\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n);\r\n\r\nexport default PrivateRoute","import axios from \"./axios\";\r\n\r\nclass DashboardService {\r\n\r\n    static Instance() {\r\n        return new DashboardService()\r\n    }\r\n\r\n    getTotalNoOfVehiclesBetweenTwoDates(filter) {\r\n        return axios.post('/api/dashboard/vehiclescount/datefilter',filter);\r\n    }\r\n\r\n    getTotalNoOfVehiclesBySelectedDate(filter) {\r\n        return axios.post('/api/dashboard/vehiclescount/date',filter);\r\n    }\r\n\r\n    getTotalNoOfVehiclesForLastMonths(filter) {\r\n        return axios.post('/api/dashboard/vehiclescount/month',filter);\r\n    }\r\n\r\n}\r\n\r\nexport default DashboardService.Instance()","import React, {Component} from \"react\";\r\nimport {Col, Row, Statistic,TimePicker,DatePicker,Button,Icon,message,Card,Menu, Dropdown,Select} from \"antd\";\r\nimport DashboardService from \"../services/DashboardService\";\r\nimport moment from 'moment';\r\nimport classnames from 'classnames';\r\nimport {Bar, Pie,Line} from 'react-chartjs-2';\r\nimport * as name from \"chartjs-plugin-colorschemes\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class HomeView extends Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        loading: true,\r\n        videoVisible: false,\r\n        layout: \"table\",\r\n        incidents: {},\r\n        filter: {\r\n            filterType:\"today\"\r\n\r\n        },\r\n        resultSetByDate: {\r\n            loading: true,\r\n            chartData: {}\r\n        },\r\n\r\n        resultSetByTime: {\r\n            loading: true,\r\n            chartData: {}\r\n        },\r\n        aggregation:\"\",\r\n        isOpenDatePicker:false\r\n    };\r\n\r\n    this.refresh = this.refresh.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onOk = this.onOk.bind(this);\r\n    this.fetchDateWiseVehiclesCount = this.fetchDateWiseVehiclesCount.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.openDatePicker = this.openDatePicker.bind(this);\r\n\r\n}\r\n   componentDidMount() {\r\n      this.refresh();\r\n   }\r\n\r\n\r\n   refresh(){\r\n       this.fetchDateWiseVehiclesCount();\r\n   }\r\n\r\n\r\n   fetchDateWiseVehiclesCount(){\r\n\r\n        DashboardService.getTotalNoOfVehiclesBetweenTwoDates(this.state.filter).then(response => {\r\n            let keys=[];\r\n            let values=[];\r\n            for(var i=0;i<response.data.length;i++){\r\n                keys.push(response.data[i].key);\r\n                values.push(response.data[i].countOfTotalVehicles);\r\n            }\r\n\r\n              let resultSet = {\r\n                 loading: false,\r\n                 chartData: {\r\n                     labels: keys,\r\n                     datasets: [{\r\n                         label: keys,\r\n                         data: values\r\n                     }]\r\n                 }\r\n              };\r\n             this.setState({resultSetByDate: resultSet,isOpenDatePicker:false});\r\n        },\r\n        error=>{\r\n            message.error(error.response.data.message);\r\n        })\r\n   }\r\n\r\n   handleChange(value){\r\n        let filter = this.state.filter;\r\n        filter.filterType=value;\r\n        this.setState({aggregation:value,filter:filter,isOpenDatePicker:false})\r\n        if(value!=\"custom\"){\r\n            this.fetchDateWiseVehiclesCount();\r\n        }\r\n        if(value==\"custom\"){\r\n            this.setState({isOpenDatePicker:true})\r\n        }\r\n   }\r\n\r\n   openDatePicker(){\r\n    this.setState({isOpenDatePicker:true})\r\n   }\r\n\r\n    onChange(value, dateString) {\r\n     console.log('Selected Time: ', value);\r\n     console.log('Formatted Selected Time: ', dateString);\r\n     let filter = this.state.filter;\r\n     filter.from=value[0];\r\n     filter.to=value[1];\r\n\r\n    }\r\n\r\n    onOk(value) {\r\n     console.log('onOk: ', value);\r\n     this.setState({isOpenDatePicker:false})\r\n     this.fetchDateWiseVehiclesCount()\r\n    }\r\n\r\n\r\n    render() {\r\n      const onChange=this.onChange;\r\n\r\n        return (\r\n            <div>\r\n                <Row gutter={24}>\r\n                    <Col span={12}>\r\n                        <Statistic title=\"Incidents (This Week)\" value={24} />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Statistic title=\"Incidents (Last Week)\" value={34} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={16}>\r\n\r\n                    <Col span={16}>\r\n                        <Card>\r\n\r\n\r\n                                <Select defaultValue=\"today\" style={{ width: 120 }} onChange={this.handleChange}>\r\n                                      <Option value=\"yesterday\">Yesterday</Option>\r\n                                      <Option value=\"today\">Today</Option>\r\n                                      <Option value=\"last7days\">\r\n                                        Last 7 days\r\n                                      </Option>\r\n                                      <Option value=\"last3months\">Last 3 months</Option>\r\n                                      <Option value=\"last6months\">Last 6 months</Option>\r\n                                      <Option value=\"custom\" onClick={this.openDatePicker}>Custom</Option>\r\n                                </Select>\r\n\r\n                                &nbsp; &nbsp;\r\n\r\n                                 {this.state.isOpenDatePicker ? <RangePicker open={this.state.isOpenDatePicker}\r\n                                       ranges={{\r\n                                         'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                                         'This Week': [moment().startOf('week'), moment().endOf('week')],\r\n                                       }}\r\n                                       defaultValue={[moment().startOf('week'), moment().endOf('week')]}\r\n                                       format=\"YYYY/MM/DD\"\r\n                                       onChange={onChange}\r\n                                       onOk={this.onOk}\r\n                                       showTime\r\n                                     /> :null}\r\n                                     &nbsp; &nbsp;\r\n\r\n\r\n\r\n                        {!this.state.resultSetByDate.loading ?\r\n                            <Bar data={this.state.resultSetByDate.chartData} options={{\r\n                                          title: {\r\n                                              display: true,\r\n                                              text: 'Vehicles'\r\n                                          },\r\n                                          options: {\r\n                                            maintainAspectRatio : false,\r\n                                            responsive: true,\r\n                                          },\r\n                                          legend: {\r\n                                              display: false\r\n                                          }, scales: {\r\n                                              yAxes: [{\r\n                                                  ticks: {\r\n                                                      beginAtZero: true\r\n                                                  },\r\n                                                  scaleLabel: {\r\n                                                      display: true,\r\n                                                      labelString: 'Total no of vehicles'\r\n                                                  }\r\n                                              }],\r\n                                              xAxes: [{\r\n                                                  scaleLabel: {\r\n                                                      display: true,\r\n                                                      labelString: 'Date'\r\n                                                  }\r\n                                              }]\r\n                                          },\r\n                                          tooltips: {\r\n                                              callbacks: {\r\n                                                  title: function (tooltipItem, chartData) {\r\n                                                      return \"Total vehicles enters\"\r\n                                                  },\r\n                                                  label: function (tooltipItems, data) {\r\n                                                      return data.datasets[tooltipItems.datasetIndex].label[tooltipItems.index] + \" : $\" + data.datasets[tooltipItems.datasetIndex].data[tooltipItems.index]\r\n                                                  }\r\n                                              }\r\n                                          },\r\n                                          plugins: {\r\n                                             colorschemes: {\r\n                                                  scheme: 'brewer.Paired12'\r\n                                             }\r\n                                          }\r\n                                   }}/>\r\n\r\n                               :null}\r\n                        </Card>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}","import axios from './axios';\r\n\r\nclass FeedService {\r\n\r\n    static Instance() {\r\n        return new FeedService()\r\n    }\r\n\r\n    getFeeds() {\r\n        return axios.get('/api/feeds');\r\n    }\r\n\r\n    getFeed(feed) {\r\n        return axios.get('/api/feed/' + feed.ID);\r\n    }\r\n\r\n    addFeed(feed) {\r\n        return axios.post('/api/feed/', feed)\r\n    }\r\n\r\n    removeFeed(feed) {\r\n        return axios.delete('/api/feed/' + feed.ID);\r\n    }\r\n\r\n    startFeed(feed) {\r\n        return axios.get('/api/feed/' +feed.ID+ '/start');\r\n    }\r\n\r\n    stopFeed(feed) {\r\n        return axios.get('/api/feed/' +feed.ID+ '/stop');\r\n    }\r\n}\r\n\r\nexport default FeedService.Instance()\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, Col, Form, Input, Row, Tag, Typography} from \"antd\";\r\nimport FeedService from \"../services/FeedService\";\r\nimport {EventBus} from \"../components/event\";\r\nconst {Text} = Typography;\r\n\r\nexport default class FeedView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            videoVisible: false,\r\n            feeds: {},\r\n        };\r\n\r\n        EventBus.subscribe('feed-refresh', (event) => this.refresh())\r\n        this.removeFeed = this.removeFeed.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        FeedService.getFeeds().then(request => {\r\n            this.setState({\"feeds\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    removeFeed(feed) {\r\n        FeedService.removeFeed(feed).then(() => {\r\n            this.refresh()\r\n        })\r\n    }\r\n\r\n    startFeed(feed) {\r\n        FeedService.startFeed(feed).then(() => {\r\n            //this should force re-render :)\r\n            this.setState({\"refresh_state\": Math.random()})\r\n        })\r\n    }\r\n\r\n    stopFeed(feed) {\r\n        FeedService.stopFeed(feed).then(() => {\r\n            //this should force re-render :)\r\n            this.setState({\"refresh_state\": Math.random()})\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let feeds = this.state.feeds;\r\n\r\n        if (this.state.loading || !this.state.feeds || this.state.feeds.length === 0) {\r\n            feeds = []\r\n        }\r\n\r\n        const WrappedFeedForm = Form.create({name: 'feed_form'})(FeedForm);\r\n\r\n        return (\r\n            <Row gutter={16}>\r\n                {\r\n                    feeds.map((feed, index) =>\r\n\r\n                        <Col span={8} key={index}>\r\n\r\n                            <Card\r\n                                title={\r\n                                    <Tag color=\"#f50\">{feed.site}/{feed.location}/{feed.name}</Tag>\r\n                                }\r\n                                cover={<img alt=\"feedview\" src={\"/api/feed/\" + feed.ID+ \"/view\"}/>}\r\n                                bordered={true}\r\n                                actions={[\r\n                                    <Button onClick={() => {this.startFeed(feed)}}>Start</Button>,\r\n                                    <Button onClick={() => {this.stopFeed(feed)}}>Stop</Button>,\r\n                                    <Button onClick={() => {this.removeFeed(feed)}}>Delete</Button>\r\n                                ]}\r\n                            >\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                }\r\n\r\n                <Col span={8} key={-1}>\r\n\r\n                    <Card bordered={true}>\r\n                        <WrappedFeedForm/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass FeedForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false,\r\n            loading: false,\r\n            loginError: '',\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        const form = this.props.form;\r\n        var feed = {};\r\n        feed.url = form.getFieldValue(\"url\");\r\n        feed.site = form.getFieldValue(\"site\");\r\n        feed.location = form.getFieldValue(\"location\");\r\n        feed.name = form.getFieldValue(\"name\");\r\n        let validationError;\r\n        if (!feed.url) {\r\n            validationError = \"Missing url\"\r\n        }\r\n\r\n        if (!feed.site) {\r\n            validationError = \"Missing site\"\r\n        }\r\n\r\n        if (!feed.location) {\r\n            validationError = \"Missing location\"\r\n        }\r\n\r\n        if (!feed.name) {\r\n            validationError = \"Missing name\"\r\n        }\r\n\r\n        if (validationError) {\r\n            this.setState({validationError: validationError});\r\n            return\r\n        }\r\n\r\n        console.log('saving feed', feed);\r\n        this.setState({submitted: true, loading: true});\r\n\r\n        FeedService.addFeed(feed).then(response => {\r\n            EventBus.publish('feed-refresh', {})\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {getFieldDecorator, getFieldsError} = this.props.form;\r\n        const validationError = this.state.validationError;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Item>\r\n                    {getFieldDecorator('url', {rules: [{required: true, message: 'enter feed url!'}],})(\r\n                        <Input addonBefore=\"Feed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\" placeholder=\"rtsp://\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('site', {rules: [{required: true, message: 'enter site!'}],})(\r\n                        <Input addonBefore=\"Site&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\r\n                               placeholder=\"Site (e.g. gurgaon)\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('location', {rules: [{required: true, message: 'enter location!'}],})(\r\n                        <Input addonBefore=\"Location\" placeholder=\"Location (e.g. 9th floor)\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('name', {rules: [{required: true, message: 'enter name!'}],})(\r\n                        <Input addonBefore=\"Name&nbsp;&nbsp;&nbsp;&nbsp;\" placeholder=\"Name (e.g. front gate )\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Button htmlType=\"submit\" type=\"primary\" disabled={hasErrors(getFieldsError())}>Add</Button>\r\n                {validationError && <Text type=\"danger\">{validationError}</Text>}\r\n            </Form>\r\n        )\r\n    }\r\n}","import axios from './axios';\r\nimport { authHeader } from '../helpers/auth-header';\r\nimport { config } from '../helpers/config'\r\n\r\nclass DeviceService {\r\n\r\n    static Instance() {\r\n        return new DeviceService()\r\n    }\r\n\r\n    getDevice() {\r\n       return axios.get('/api/device');\r\n    }\r\n\r\n    getDeviceConfig() {\r\n        return axios.get('/api/device/config');\r\n    }\r\n\r\n}\r\n\r\nexport default DeviceService.Instance()","import React, {Component} from \"react\";\r\nimport {Card, Icon} from 'antd';\r\nimport DeviceService from \"../services/DeviceService\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class DeviceView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {loading:true, device:{}}\r\n    }\r\n\r\n    componentDidMount() {\r\n        DeviceService.getDevice().then(request => {\r\n            this.setState({\"device\" : request.data, loading : false})\r\n        },\r\n        error =>{\r\n            console.log(\"error\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let loading = this.state.loading;\r\n        let device = this.state.device;\r\n\r\n        if (loading) {\r\n            return (<div>Loading..</div>)\r\n        }\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Card title=\"Device details\" style={{width: 300}} extra={<Link to=\"/device/conf\"><Icon type=\"setting\" /></Link>}>\r\n                    <p>ID: {device.fingerprint}</p>\r\n                    <p>Name: {device.name}</p>\r\n                    <p>Model: {device.model}</p>\r\n                    <p>License: {device.license}</p>\r\n                    <p>Status: {device.status}</p>\r\n                    <p>RegisteredTo: {device.registeredTo}</p>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Table, Divider,Row,Col,Card,Form,Button,Input,Icon,Typography,Select,Modal,message} from 'antd';\r\nimport UserService from \"../services/UserService\";\r\nimport {EventBus} from \"../components/event\";\r\nimport '../form.css';\r\nconst { Column} = Table;\r\nconst {Text} = Typography;\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nconst ButtonGroup = Button.Group;\r\nexport default class UserListView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            users: [],\r\n            showUserDetails:false,\r\n            mode:\"Add\",\r\n            user:{userName:\"\", lastName:\"\",firstName:\"\",email:\"\",password:\"\",roles:[],id:\"\"},\r\n            roles:[],\r\n            visible: false ,\r\n        }\r\n\r\n\r\n        this.addUser=this.addUser.bind(this);\r\n        this.refresh=this.refresh.bind(this);\r\n        this.refreshUsers=this.refreshUsers.bind(this);\r\n        this.close=this.close.bind(this);\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh(){\r\n        UserService.getUsers().then(request => {\r\n            this.setState({\"users\": request.data, loading: false,showUserDetails:false})\r\n        },\r\n        error=>{\r\n          message.error(error.response.data.message);\r\n        });\r\n\r\n        UserService.getRoles().then(request =>{\r\n            this.setState({roles:request.data})\r\n        },\r\n        error=>{\r\n          message.error(error.response.data.message);\r\n        });\r\n    }\r\n\r\n    refreshUsers(){\r\n        this.refresh();\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n    };\r\n\r\n\r\n    addUser(){\r\n        this.setState({mode:\"Add\",showUserDetails:true, user:{userName:\"\", lastName:\"\",firstName:\"\",email:\"\",password:\"\"}})\r\n    }\r\n\r\n    showUser(userId){\r\n        this.setState({showUserDetails:true,mode:\"Edit\"})\r\n        UserService.getUser(userId).then(response =>{\r\n            this.setState({user : response.data})\r\n        },\r\n        error=>{\r\n          message.error(error.response.data.message);\r\n        });\r\n    }\r\n\r\n    close(){\r\n        this.setState({showUserDetails:false})\r\n    }\r\n\r\n     showDeleteConfirm(userId,refresh) {\r\n      confirm({\r\n        title: 'Are you sure you want to make user inactive?',\r\n        okText: 'Yes',\r\n        okType: 'danger',\r\n        cancelText: 'No',\r\n        onOk() {\r\n          console.log('OK');\r\n          UserService.deleteUser(userId).then(response=>{\r\n            message.success(\"User Deactivated!\");\r\n            refresh();\r\n          },\r\n          error=>{\r\n            message.error(error.response.data.message);\r\n          });\r\n\r\n\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel');\r\n        },\r\n      });\r\n     }\r\n\r\n    render() {\r\n\r\n     const WrappedUserForm = Form.create({name: 'user_form'})(UserForm);\r\n     const showUserDetails=this.state.showUserDetails;\r\n     const mode=this.state.mode;\r\n     const user=this.state.user;\r\n\r\n        return (\r\n         <div>\r\n            <Row gutter={2}>\r\n                <Col span={2}>\r\n                    <Button type=\"primary\" onClick={this.addUser}>\r\n                         + ADD\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row gutter={24}>\r\n                <Col span={12}>\r\n                    <Card\r\n                      className=\"limitable\"\r\n                      bodyStyle={{ padding: \"0px\", width: \"100%\" }}\r\n                    >\r\n                     <Table dataSource={this.state.users} pagination={false} scroll={{ x: true}} >\r\n                            <Column title=\"Username\" dataIndex=\"userName\" key=\"userName\" render={(text, record) => (\r\n                                <span><a href={\"user/\" + record.ID}>{text}</a></span>\r\n                            )}/>\r\n                            <Column title=\"Email\" dataIndex=\"email\" key=\"email\" />\r\n                            <Column title=\"Token\" dataIndex=\"token\" key=\"token\" />\r\n                            <Column title=\"Action\" key=\"action\" render={(text, record) => (\r\n                                    <span>\r\n                                        <a onClick={this.showUser.bind(this,record.id)}>Edit</a>\r\n                                        <Divider type=\"vertical\" />\r\n                                        <a onClick={this.showDeleteConfirm.bind(this,record.id,this.refresh)}>Delete</a>\r\n                                    </span>\r\n                                )}\r\n                            />\r\n                     </Table>\r\n                    </Card>\r\n                </Col>\r\n\r\n               {showUserDetails ?\r\n                 <Col span={12}>\r\n                   <WrappedUserForm user={this.state.user} roles={this.state.roles} refresh={this.refreshUsers} close={this.close} mode={this.state.mode}/>\r\n                 </Col>\r\n                :null}\r\n\r\n            </Row>\r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass UserForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user:{},\r\n            loading: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.close = this.close.bind(this);\r\n\r\n    }\r\n\r\n    close(){\r\n        this.props.close();\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const form = this.props.form;\r\n        var user = {};\r\n        user.firstName = form.getFieldValue(\"firstname\");\r\n        user.userName = form.getFieldValue(\"username\");\r\n        user.lastName = form.getFieldValue(\"lastname\");\r\n        user.email = form.getFieldValue(\"email\");\r\n        user.password = form.getFieldValue(\"password\");\r\n        user.roles=form.getFieldValue(\"role\");\r\n        user.id=this.props.user.id;\r\n        let validationError;\r\n        if (!user.firstName) {\r\n            validationError = \"Missing firstname\"\r\n        }\r\n        if (!user.userName) {\r\n            validationError = \"Missing username\"\r\n        }\r\n        if (!user.lastName) {\r\n            validationError = \"Missing lastname\"\r\n        }\r\n        if (!user.email) {\r\n            validationError = \"Missing email\"\r\n        }\r\n\r\n        if(user.roles.length==0){\r\n            validationError=\"Missing role\"\r\n        }\r\n        if (validationError) {\r\n            this.setState({validationError: validationError});\r\n            return\r\n        }\r\n        this.setState({loading: true});\r\n        console.log('saving user', user);\r\n        UserService.createUser(user).then(response => {\r\n            if(user.id){\r\n                 message.success(\"User updated\")\r\n            }\r\n            else{\r\n                 message.success(\"User created\")\r\n            }\r\n            this.setState({loading: false});\r\n            this.props.refresh();\r\n\r\n        }).catch(error=> {\r\n            console.log(error);\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n        const validationError = this.state.validationError;\r\n\r\n         return (\r\n            <Card title={this.props.mode==\"Add\"? \"Add User\" : \"Edit User\"}>\r\n\r\n               <Form onSubmit={this.handleSubmit} className=\"user-form\" >\r\n                    <Form.Item label=\"Username\" className=\"formitem\">\r\n                        {getFieldDecorator('username', {\r\n                            initialValue:this.props.user.userName,\r\n                            rules: [{required: true, message: 'Please input your username!'}],\r\n                        })(\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Firstname\" className=\"formitem\">\r\n                        {getFieldDecorator('firstname', {\r\n                            initialValue:this.props.user.firstName,\r\n                            rules: [{required: true, message: 'Please input your Firstname!'}],\r\n                        })(\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Firstname\"\r\n\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Lastname\" className=\"formitem\">\r\n                        {getFieldDecorator('lastname', {\r\n                            initialValue:this.props.user.lastName,\r\n                            rules: [{required: true, message: 'Please input your lastname!'}],\r\n                        })(\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Lastname\"\r\n\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Email\" className=\"formitem\">\r\n                        {getFieldDecorator('email', {\r\n                            initialValue:this.props.user.email,\r\n                            rules: [{required: true, message: 'Please input your email!'}],\r\n                        })(\r\n                            <Input\r\n                                type=\"email\"\r\n                                placeholder=\"email\"\r\n\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Role\" className=\"formitem\">\r\n                          {getFieldDecorator('role', {\r\n                            initialValue:this.props.user.roles,\r\n                            rules: [{ required: true, message: 'Please select role!' }],\r\n                          })(\r\n                            <Select mode=\"multiple\"\r\n                              placeholder=\"Select a role\"\r\n                            >\r\n                            {this.props.roles.map(role =>\r\n                                 <option key={role.id} value={role.name} >{role.name}</option>\r\n                             )}\r\n\r\n                            </Select>,\r\n                              )}\r\n                    </Form.Item>\r\n                    <br/>\r\n                    <div align=\"right\">\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"user-form-button\"  size=\"small\" loading={this.state.loading}>\r\n                            Save\r\n                        </Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button type=\"secondary\" className=\"user-form-button\"  size=\"small\" onClick={this.close}>\r\n                            Close\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {validationError && <Text type=\"danger\">{validationError}</Text>}\r\n               </Form>\r\n            </Card>\r\n\r\n\r\n         )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport DeviceService from \"../services/DeviceService\";\r\nimport { Tabs } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class DeviceConfigView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {loading:true, deviceconfig:{}}\r\n    }\r\n\r\n    componentDidMount() {\r\n        DeviceService.getDeviceConfig().then(request => {\r\n            this.setState({\"deviceconfig\" : request.data, loading : false})\r\n        })\r\n    }\r\n\r\n    onTabChange(tab) {\r\n        console.log(\"tab changed\", tab)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Tabs defaultActiveKey=\"1\" onChange={this.onTabChange}>\r\n                <TabPane tab=\"Feed\" key=\"common\">\r\n                    Feed details\r\n                </TabPane>\r\n                <TabPane tab=\"Basic Intrusion\" key=\"bi\">\r\n                    Basic Intrusion\r\n                </TabPane>\r\n                <TabPane tab=\"Advanced Intrusion\" key=\"ai\">\r\n                    Advanced Intrusion\r\n                </TabPane>\r\n            </Tabs>\r\n        )\r\n    }\r\n}","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import React, {Component} from 'react';\r\nimport UserService from \"../services/UserService\";\r\nimport {EventBus} from \"../components/event\";\r\nimport {Button, Col, Form, Icon, Input, Row, Typography} from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {history} from \"../helpers/history\";\r\n\r\nconst {Text} = Typography;\r\n\r\n\r\nclass LoginView extends Component {\r\n\r\n    componentDidMount() {\r\n        if (UserService.isLoggedIn()) {\r\n            history.push( \"/\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const WrappedLoginForm = Form.create({name: 'login_form'})(LoginForm);\r\n        return (\r\n            <WrappedLoginForm/>\r\n        )\r\n    }\r\n}\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false,\r\n            loading: false,\r\n            loginError: '',\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        const form = this.props.form;\r\n        const username = form.getFieldValue(\"username\");\r\n        const password = form.getFieldValue(\"password\");\r\n        this.setState({submitted: true});\r\n\r\n        if (!(username && password)) {\r\n            return\r\n        }\r\n\r\n        this.setState({loading: true});\r\n        UserService.login(username, password)\r\n            .then(token => {\r\n                history.push( \"/\");\r\n                EventBus.publish('login-logout', {})\r\n            }).catch(error => {\r\n                this.setState({\r\n                    loginError: \"Something went wrong, please try again\",\r\n                    loading: false\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n        const loginError = this.state.loginError;\r\n\r\n        return (\r\n            <Row>\r\n                <Col span={8} offset={8}><h4>Login</h4>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {getFieldDecorator('username', {\r\n                                rules: [{required: true, message: 'Please input your username!'}],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                    placeholder=\"Username\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{required: true, message: 'Please input your Password!'}],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                Log in\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    {loginError && <Text type=\"danger\">{loginError}</Text>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(LoginView);\r\n","\r\nimport axios from \"./axios\";\r\n\r\nclass IncidentService {\r\n\r\n    static Instance() {\r\n        return new IncidentService()\r\n    }\r\n\r\n    getIncidents(filter) {\r\n        return axios.post('/api/incident', filter);\r\n    }\r\n\r\n    archiveIncident(incident) {\r\n        return axios.delete('/api/incident/' + incident.id);\r\n    }\r\n}\r\n\r\nexport default IncidentService.Instance()","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    Col,\r\n    Collapse,\r\n    DatePicker,\r\n    Divider,\r\n    Empty,\r\n    Icon,\r\n    Modal,\r\n    Pagination,\r\n    Row,\r\n    Table,\r\n    Tag,\r\n    TimePicker,\r\n    message\r\n} from 'antd';\r\nimport IncidentService from \"../services/IncidentService\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Moment from 'react-moment';\r\n\r\nconst {Column, ColumnGroup} = Table;\r\nconst {Panel} = Collapse;\r\nconst ButtonGroup = Button.Group;\r\nconst { confirm } = Modal;\r\n\r\n\r\nexport default class IncidentListView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            videoVisible: false,\r\n            layout: \"table\",\r\n            incidents: {},\r\n            filter: {\r\n                page: 1,\r\n                pageSize: 10\r\n            }\r\n        };\r\n        this.handleDone = this.handleDone.bind(this);\r\n        this.archiveIncident = this.archiveIncident.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onFromDateChange = this.onFromDateChange.bind(this);\r\n        this.onFromTimeChange = this.onFromTimeChange.bind(this);\r\n\r\n        this.onToDateChange = this.onToDateChange.bind(this);\r\n        this.onToTimeChange = this.onToTimeChange.bind(this);\r\n        this.onPageChange = this.onPageChange.bind(this);\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        IncidentService.getIncidents(this.state.filter).then(request => {\r\n            this.setState({\"incidentsresponse\": request.data, loading: false})\r\n        },\r\n        error=>{\r\n            message.error(error.response.data.message);\r\n        })\r\n    }\r\n\r\n    //cant use refresh to read from state as state may not have been set\r\n    refreshNow(filter) {\r\n        IncidentService.getIncidents(filter).then(request => {\r\n            this.setState({\"incidentsresponse\": request.data, loading: false, filter: filter})\r\n        })\r\n    }\r\n\r\n    archiveIncident(incident) {\r\n        IncidentService.archiveIncident(incident).then(() => {\r\n            this.refresh();\r\n            message.success(\"Incident successfully archived!\");\r\n        },\r\n        error=>{\r\n           message.error(error.response.data.message);\r\n        })\r\n    }\r\n\r\n    changeLayout(layout) {\r\n        this.setState({\"layout\": layout});\r\n    }\r\n\r\n    showVideo(videoid) {\r\n\r\n        let cp = ReactPlayer.canPlay(\"/api/incident/video/\" + this.state.videoid + \"/video.mp4\");\r\n        this.setState({\r\n            videoVisible: true,\r\n            videoid: videoid\r\n        });\r\n    };\r\n\r\n    handleDone() {\r\n        this.setState({\r\n            videoVisible: false,\r\n            videoid: \"\"\r\n        });\r\n    };\r\n\r\n    onFromDateChange(date) {\r\n        let filter = this.state.filter;\r\n        if(date!=null){\r\n          filter.fromDate = date.format(\"YYYY-MM-DD\");\r\n        }\r\n        else{\r\n            filter.fromDate=null;\r\n        }\r\n        this.setState({filter: filter});\r\n    }\r\n\r\n    onFromTimeChange(time) {\r\n\r\n        let filter = this.state.filter;\r\n        if(time!=null){\r\n          filter.fromTime = time.format(\"HH:mm:ss\");\r\n        }\r\n        else{\r\n            filter.fromTime=null;\r\n        }\r\n        this.setState({filter: filter});\r\n    }\r\n\r\n    onToDateChange(date) {\r\n        let filter = this.state.filter;\r\n        if(date!=null){\r\n          filter.toDate = date.format(\"YYYY-MM-DD\");\r\n        }\r\n        else{\r\n          filter.toDate=null;\r\n        }\r\n        this.setState({filter: filter});\r\n    }\r\n\r\n    onToTimeChange(time) {\r\n        let filter = this.state.filter;\r\n        if(time!=null){\r\n         filter.toTime = time.format(\"HH:mm:ss\");\r\n        }\r\n        else{\r\n          filter.toTime=null;\r\n        }\r\n        this.setState({filter: filter});\r\n    }\r\n\r\n    onPageChange(page, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter)\r\n    }\r\n\r\n    onPageSizeChange(current, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter);\r\n    }\r\n\r\n    showDeleteConfirm(incident,refresh) {\r\n     confirm({\r\n       title: 'Are you sure you want to archive the incident ?',\r\n       okText: 'Yes',\r\n       okType: 'danger',\r\n       cancelText: 'No',\r\n       onOk() {\r\n         console.log('OK');\r\n         IncidentService.archiveIncident(incident).then(() => {\r\n             refresh();\r\n             message.success(\"Incident successfully archived!\");\r\n         },\r\n         error=>{\r\n            message.error(error.response.data.message);\r\n         })\r\n       },\r\n       onCancel() {\r\n         console.log('Cancel');\r\n       },\r\n     });\r\n    }\r\n\r\n    render() {\r\n\r\n        let layout = this.state.layout;\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Modal\r\n                    title=\"Video\"\r\n                    visible={this.state.videoVisible}\r\n                    onOk={this.handleDone}\r\n                    onCancel={this.handleDone}\r\n                >\r\n                    {this.state.videoVisible ? (<ReactPlayer controls={true}\r\n                                                             url={\"/api/incident/video/\" + this.state.videoid + \"/video.mp4\"}\r\n                                                             width=\"300\"/>) : (<div><Empty/></div>)}\r\n                </Modal>\r\n\r\n                <Collapse bordered={false} defaultActiveKey={['1', '2']}>\r\n                    <Panel header=\"Filter\" key=\"1\">\r\n                        <span>From: </span>\r\n                        <DatePicker onChange={this.onFromDateChange}/>&nbsp;&nbsp;\r\n                        <TimePicker minuteStep={15} secondStep={60} onChange={this.onFromTimeChange}/>&nbsp;&nbsp;\r\n                        <span>To: </span>\r\n                        <DatePicker onChange={this.onToDateChange}/>&nbsp;&nbsp;\r\n                        <TimePicker minuteStep={15} secondStep={60} onChange={this.onToTimeChange}/>&nbsp;&nbsp;\r\n\r\n                        <ButtonGroup>\r\n                            <Button type={layout === \"list\" ? \"primary\" : \"\"} size=\"small\" icon=\"unordered-list\"\r\n                                    onClick={() => {\r\n                                        this.changeLayout(\"list\")\r\n                                    }}/>\r\n                            <Button type={layout === \"table\" ? \"primary\" : \"\"} size=\"small\" icon=\"table\"\r\n                                    onClick={() => {\r\n                                        this.changeLayout(\"table\")\r\n                                    }}/>\r\n                        </ButtonGroup>&nbsp;&nbsp;\r\n                        <Button onClick={() => {\r\n                            this.refresh()\r\n                        }}><Icon type=\"reload\"/>Reload</Button>\r\n                    </Panel>\r\n                    <Panel header=\"Incidents\" key=\"2\">\r\n                        {layout === \"table\" ? (this.renderGrid()) : (this.renderTable())}\r\n                    </Panel>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderGrid() {\r\n\r\n        if (this.state.loading || !this.state.incidents || this.state.incidents.Total === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let incidents = this.state.incidentsresponse.incidents;\r\n        let count = this.state.incidentsresponse.totalPages *  this.state.incidentsresponse.pageSize;\r\n\r\n\r\n        return <div style={{background: '#ECECEC', padding: '30px'}}>\r\n            <Row>\r\n                <Col>\r\n                    <Pagination onChange={this.onPageChange} onShowSizeChange={this.onPageSizeChange} showSizeChanger showQuickJumper\r\n                                defaultCurrent={1}  total={count} current={this.state.filter.page} pageSize ={this.state.filter.pageSize}/>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n                {\r\n                    incidents.map((incident, index) =>\r\n                        <Col span={8} key={index}>\r\n                            <Card\r\n                                title={\r\n                                    <div>\r\n                                        <Tag color=\"#f50\">{incident.eventType}</Tag>\r\n                                        <Tag color=\"#2db7f5\">{incident.eventDate}</Tag>\r\n                                        <Tag color=\"#87d068\"><span><Moment format=\"LTS\">{incident.eventStart}</Moment></span><Icon\r\n                                            type=\"right\" hidden/><span hidden><Moment\r\n                                            format=\"LTS\">{incident.eventEnd}</Moment></span></Tag>\r\n                                        <Tag color=\"#108ee9\" hidden>{incident.eventDuration}s</Tag>\r\n                                    </div>\r\n                                }\r\n                                bordered={true}\r\n                                cover={<img alt=\"incident image\"\r\n                                            src={\"/api/incident/image/\" + incident.imageId + \"/image.jpg\"}/>}\r\n                                actions={[\r\n                                    <Icon type=\"right\" key=\"play\" onClick={() => this.showVideo(incident.videoId)}/>,\r\n                                    <Icon type=\"edit\" key=\"edit\"/>,\r\n                                    <Icon type=\"delete\" key=\"delete\" onClick={this.showDeleteConfirm.bind(this,incident,this.refresh)}/>,\r\n                                ]}\r\n                            >\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n        </div>\r\n    }\r\n\r\n    renderTable() {\r\n\r\n        if (this.state.loading || !this.state.incidents || this.state.incidents.Total === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let incidents = this.state.incidentsresponse.incidents;\r\n        let count = this.state.incidentsresponse.totalPages *  this.state.incidentsresponse.pageSize ;\r\n\r\n        const paginationOptions = {\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            onShowSizeChange: this.onPageSizeChange,\r\n            onChange: this.onPageChange,\r\n            total: count\r\n        };\r\n\r\n        const pagination = {\r\n            ...paginationOptions,\r\n            total: count,\r\n            current: this.state.filter.page,\r\n            pageSize: this.state.filter.pageSize\r\n        };\r\n\r\n        return (\r\n            <Table dataSource={incidents} pagination={pagination}>\r\n                <Column title=\"ID\" dataIndex=\"id\" key=\"id\"/>\r\n                <Column title=\"Type\" dataIndex=\"eventType\" key=\"eventType\"/>\r\n                <Column title=\"Date\" dataIndex=\"eventDate\" key=\"eventDate\"/>\r\n                <Column title=\"Time\" dataIndex=\"eventStart\" key=\"eventStart\"\r\n                        render={eventStart => (<Moment format=\"LTS\">{eventStart}</Moment>)}/>\r\n                <Column title=\"Duration\" dataIndex=\"eventDuration\" key=\"eventDuration\" render={dur => (<span>{dur}s</span>) }/>\r\n                <Column title=\"Action\" key=\"action\" render={(text, incident) => (\r\n                    <span>\r\n                        <a onClick={() => this.showVideo(incident.videoId)}>Play</a>\r\n                        <Divider type=\"vertical\"/>\r\n                        <a onClick={this.showDeleteConfirm.bind(this,incident,this.refresh)}>Delete</a>\r\n                    </span>\r\n                )}/>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n","\r\nimport axios from './axios';\r\n\r\nclass TriggerService {\r\n\r\n    static Instance() {\r\n        return new TriggerService()\r\n    }\r\n\r\n    getTrigger() {\r\n        return axios.get('/api/trigger/');\r\n    }\r\n\r\n    getTriggers() {\r\n        return axios.get('/api/triggers');\r\n    }\r\n\r\n    createTrigger(trigger) {\r\n        return axios.post('/api/trigger/', trigger);\r\n    }\r\n\r\n    saveTrigger(trigger) {\r\n        return axios.put('/api/trigger/' + trigger.ID, trigger);\r\n    }\r\n\r\n    deleteTrigger(trigger) {\r\n        return axios.delete('/api/trigger/' + trigger.ID);\r\n    }\r\n}\r\n\r\nexport default TriggerService.Instance()","import React, {Component} from \"react\";\r\nimport {Slider, Button, Input} from \"antd\";\r\nimport TriggerService from \"../services/TriggerService\";\r\n\r\nexport default class TriggerSet extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n        this.onChange0 = this.onChange0.bind(this);\r\n        this.onChange1 = this.onChange1.bind(this);\r\n        this.onChange2 = this.onChange2.bind(this);\r\n        this.onChange3 = this.onChange3.bind(this);\r\n        this.onChange4 = this.onChange4.bind(this);\r\n        this.onChange5 = this.onChange5.bind(this);\r\n        this.onChange6 = this.onChange6.bind(this);\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n        this.saveTrigger = this.saveTrigger.bind(this);\r\n        this.deleteTrigger = this.deleteTrigger.bind(this);\r\n        this.setName = this.setName.bind(this);\r\n\r\n        this.state = {\r\n            trigger : this.props.trigger,\r\n            changed : false\r\n        }\r\n    }\r\n\r\n    onChange0(value) { this.onChangeValue(0, value)    }\r\n    onChange1(value) { this.onChangeValue(1, value)    }\r\n    onChange2(value) { this.onChangeValue(2, value)    }\r\n    onChange3(value) { this.onChangeValue(3, value)    }\r\n    onChange4(value) { this.onChangeValue(4, value)    }\r\n    onChange5(value) { this.onChangeValue(5, value)    }\r\n    onChange6(value) { this.onChangeValue(6, value)    }\r\n\r\n    onChangeValue(idx, value) {\r\n        let trigger = this.state.trigger;\r\n        trigger.TriggerDays[idx].Start = value[0];\r\n        trigger.TriggerDays[idx].End = value[1];\r\n        this.setState({trigger:trigger, changed: true})\r\n    }\r\n\r\n    saveTrigger() {\r\n\r\n        if (this.state.trigger.new) {\r\n            TriggerService.createTrigger(this.state.trigger)\r\n        } else {\r\n            TriggerService.saveTrigger(this.state.trigger)\r\n        }\r\n\r\n    }\r\n\r\n    NewTrigger() {\r\n        let trigger = {name:\"New\", TriggerDays: [], new:true};\r\n        for (let i=0;i<7;i++) {\r\n            trigger.TriggerDays.push({\r\n                Start:0,\r\n                End:24,\r\n                Day:i,\r\n            })\r\n        }\r\n        this.setState({trigger:trigger, changed: true})\r\n    }\r\n\r\n    setName(e, value) {\r\n        let trigger = this.state.trigger;\r\n        trigger.name = e.target.value;\r\n        this.setState({trigger:trigger, changed: true});\r\n    }\r\n\r\n    deleteTrigger() {\r\n        TriggerService.deleteTrigger(this.state.trigger)\r\n    }\r\n\r\n    ChangeTrigger(trigger) {\r\n        this.setState({trigger:trigger, changed: false})\r\n    }\r\n\r\n    render() {\r\n        let selected = this.state.trigger;\r\n        let changed = this.state.changed;\r\n\r\n        if (!selected) return (<div>Waiting..</div>);\r\n        let marks = {};\r\n        for (let i = 12; i <= 24; i++) {\r\n            let j = i - 12;\r\n            marks[j] = i + ':00'\r\n        }\r\n\r\n        for (let i = 0; i <= 12; i++) {\r\n            let j = i + 12;\r\n            marks[j] = (i < 10 ? '0' : '') + i + ':00'\r\n        }\r\n\r\n\r\n        selected.TriggerDays.map((day, idx) => {\r\n            let start = day.Start;\r\n            let end = day.End;\r\n            if (start > end) {\r\n                day.Start = start - 12;\r\n                day.End = end + 12\r\n            }\r\n        });\r\n\r\n        let dlist = selected.TriggerDays;\r\n\r\n        return (\r\n            <div>\r\n                {selected.new ? (<Input placeholder=\"Name\" onChange={this.setName}/>) : (<span>{selected.ID} - {selected.name}</span>)}\r\n                <div>\r\n                    <span>{this.days[dlist[0].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[0].Start, dlist[0].End]} onChange={this.onChange0}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[1].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[1].Start, dlist[1].End]} onChange={this.onChange1}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[2].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[2].Start, dlist[2].End]} onChange={this.onChange2}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[3].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[3].Start, dlist[3].End]} onChange={this.onChange3}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[4].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[4].Start, dlist[4].End]} onChange={this.onChange4}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[5].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[5].Start, dlist[5].End]} onChange={this.onChange5}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{this.days[dlist[6].Day]}</span>\r\n                    <Slider min={0} max={24} range marks={marks} value={[dlist[6].Start, dlist[6].End]} onChange={this.onChange6}/>\r\n                </div>\r\n\r\n                <Button type=\"primary\" disabled={!changed} onClick={this.saveTrigger}>Save</Button>\r\n                <Button type=\"link\" disabled={changed} onClick={this.deleteTrigger}>Delete</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\nimport {Select, Button} from 'antd';\r\nimport TriggerService from \"../services/TriggerService\";\r\nimport TriggerSet from \"../components/TriggerSet\";\r\n\r\nconst {Option} = Select;\r\nexport default class TriggerView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            triggers: []\r\n        };\r\n\r\n        this.tsRef = React.createRef();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.newTrigger = this.newTrigger.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        TriggerService.getTriggers().then(request => {\r\n            this.setState({\r\n                triggers: request.data,\r\n                selected: request.data[0].ID,\r\n                selectedt: request.data[0],\r\n                loading: false\r\n            })\r\n        });\r\n    }\r\n\r\n    newTrigger() {\r\n        this.tsRef.current.NewTrigger();\r\n    }\r\n\r\n    handleChange(id) {\r\n\r\n        console.log(\"changing to ...\", id);\r\n\r\n        for (let i = 0; i < this.state.triggers.length; i++) {\r\n            console.log(\"checking:\", this.state.triggers[i].ID);\r\n            if (id == this.state.triggers[i].ID) {\r\n                console.log(\"selected:\", id);\r\n                this.tsRef.current.ChangeTrigger(this.state.triggers[i]);\r\n                this.setState({selected: id, selectedt: this.state.triggers[i]});\r\n                return\r\n            }\r\n        }\r\n\r\n        console.log(\"cant select:(\")\r\n    }\r\n\r\n    render() {\r\n\r\n        let selected = this.state.selected;\r\n        let selectedt = this.state.selectedt;\r\n        let triggers = this.state.triggers;\r\n\r\n        if (this.state.loading) {\r\n            triggers = [];\r\n        }\r\n\r\n        let selectedname = \"\";\r\n        if (selectedt) {\r\n            selectedname = selectedt.Name\r\n        }\r\n\r\n        console.log(\"SN\", selectedname, selected, selectedt);\r\n        let selector = (\r\n\r\n            <div>\r\n                <Select style={{width: 120}} onChange={this.handleChange}>\r\n                    {\r\n                        triggers.map((trigger, index) =>\r\n                            <Option key={trigger.ID}>{trigger.name}</Option>\r\n                        )\r\n                    }\r\n\r\n                </Select>\r\n                &nbsp;\r\n                <Button type=\"primary\" onClick={this.newTrigger}>New</Button>\r\n            </div>\r\n        );\r\n\r\n        if (selectedt) {\r\n            return (\r\n                <div>\r\n                    {selector}\r\n                    <TriggerSet trigger={selectedt} ref={this.tsRef}/>\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n        return (\r\n            selector\r\n        )\r\n    }\r\n}","\r\nimport React, {Component} from \"react\";\r\nimport {Button,  Card, DatePicker, Icon, TimePicker} from 'antd';\r\nimport DeviceService from \"../services/DeviceService\";\r\nimport {Link} from \"react-router-dom\";\r\nconst ButtonGroup = Button.Group;\r\n\r\nexport default class DeviceView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            layout: \"table\",\r\n            filter: {\r\n                page: 1,\r\n                pageSize: 10\r\n            }\r\n        };\r\n        this.onFromDateChange = this.onFromDateChange.bind(this);\r\n        this.onFromTimeChange = this.onFromTimeChange.bind(this);\r\n        this.onToDateChange = this.onToDateChange.bind(this);\r\n        this.onToTimeChange = this.onToTimeChange.bind(this);\r\n        this.onPageChange = this.onPageChange.bind(this);\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    refresh(){\r\n        this.props.handleRefresh();\r\n    }\r\n    onPageChange(page, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter)\r\n    }\r\n\r\n    onPageSizeChange(current, pageSize) {\r\n        let filter = this.state.filter;\r\n        filter.pageSize = pageSize;\r\n        this.refreshNow(filter);\r\n    }\r\n\r\n    changeLayout(layout) {\r\n        this.setState({\"layout\": layout});\r\n        this.props.handleLayoutChange(layout);\r\n    }\r\n\r\n   onFromDateChange(date) {\r\n       let filter = this.state.filter;\r\n       if(date!=null){\r\n         filter.fromDate = date.format(\"YYYY-MM-DD\");\r\n       }\r\n       else{\r\n           filter.fromDate=null;\r\n       }\r\n       this.setState({filter: filter});\r\n       this.props.handleFilterChange(filter);\r\n   }\r\n\r\n   onFromTimeChange(time) {\r\n       let filter = this.state.filter;\r\n       if(time!=null){\r\n         filter.fromTime = time.format(\"HH:mm:ss\");\r\n       }\r\n       else{\r\n           filter.fromTime=null;\r\n       }\r\n       this.setState({filter: filter});\r\n       this.props.handleFilterChange(filter);\r\n   }\r\n\r\n   onToDateChange(date) {\r\n       let filter = this.state.filter;\r\n       if(date!=null){\r\n         filter.toDate = date.format(\"YYYY-MM-DD\");\r\n       }\r\n       else{\r\n         filter.toDate=null;\r\n       }\r\n       this.setState({filter: filter});\r\n       this.props.handleFilterChange(filter);\r\n   }\r\n\r\n   onToTimeChange(time) {\r\n       let filter = this.state.filter;\r\n       if(time!=null){\r\n        filter.toTime = time.format(\"HH:mm:ss\");\r\n       }\r\n       else{\r\n         filter.toTime=null;\r\n       }\r\n       this.setState({filter: filter});\r\n       this.props.handleFilterChange(filter);\r\n   }\r\n\r\n    render() {\r\n\r\n        let layout = this.state.layout;\r\n\r\n        return (\r\n            <div>\r\n                <span>From: </span>\r\n                <DatePicker onChange={this.onFromDateChange}/>&nbsp;&nbsp;\r\n                <TimePicker minuteStep={15} secondStep={60} onChange={this.onFromTimeChange}/>&nbsp;&nbsp;\r\n                <span>To: </span>\r\n                <DatePicker onChange={this.onToDateChange}/>&nbsp;&nbsp;\r\n                <TimePicker minuteStep={15} secondStep={60} onChange={this.onToTimeChange}/>&nbsp;&nbsp;\r\n\r\n                <ButtonGroup>\r\n                    <Button type={layout === \"list\" ? \"primary\" : \"\"} size=\"small\" icon=\"unordered-list\"\r\n                            onClick={() => {\r\n                                this.changeLayout(\"list\")\r\n                            }}/>\r\n                    <Button type={layout === \"table\" ? \"primary\" : \"\"} size=\"small\" icon=\"table\"\r\n                            onClick={() => {\r\n                                this.changeLayout(\"table\")\r\n                            }}/>\r\n                </ButtonGroup>&nbsp;&nbsp;\r\n                <Button onClick={() => {\r\n                    this.refresh()\r\n                }}><Icon type=\"reload\"/>Reload</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport axios from \"./axios\";\r\n\r\nclass AnprService {\r\n\r\n    static Instance() {\r\n        return new AnprService()\r\n    }\r\n\r\n    getEvents(filter) {\r\n        return axios.post('/api/anpr/events',filter);\r\n    }\r\n\r\n     archiveEvent(event) {\r\n         return axios.delete('/api/anpr/' + event.id);\r\n     }\r\n}\r\n\r\nexport default AnprService.Instance()","import React, {Component} from \"react\";\r\nimport {\r\n    Card,\r\n    Col,\r\n    Collapse,\r\n    Divider,\r\n    Empty,\r\n    Icon,\r\n    Pagination,\r\n    Row,\r\n    Table,\r\n    Tag,\r\n    Modal,\r\n    message\r\n} from 'antd';\r\nimport GenericFilter from \"../components/GenericFilter\";\r\nimport Moment from \"react-moment\";\r\nimport AnprService from \"../services/AnprService\";\r\n\r\nconst {Column} = Table;\r\nconst {Panel} = Collapse;\r\n\r\n\r\nexport default class DeviceView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            layout: \"table\",\r\n            events: {},\r\n            filter: {\r\n                page: 1,\r\n                pageSize: 10\r\n            }\r\n        };\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n        this.handleFilterChange = this.handleFilterChange.bind(this);\r\n        this.handleLayoutChange = this.handleLayoutChange.bind(this);\r\n        this.handleRefresh = this.handleRefresh.bind(this);\r\n        this.onPageChange = this.onPageChange.bind(this);\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        AnprService.getEvents(this.state.filter).then(request => {\r\n            this.setState({\"anprresponse\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    //cant use refresh to read from state as state may not have been set\r\n    refreshNow(filter) {\r\n        AnprService.getEvents(this.state.filter).then(request => {\r\n            this.setState({\"anprresponse\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    handleFilterChange(data){\r\n        this.setState({filter:data})\r\n    }\r\n\r\n     handleLayoutChange(data){\r\n         this.setState({layout:data})\r\n     }\r\n\r\n     handleRefresh(){\r\n        this.refresh();\r\n     }\r\n\r\n     onPageChange(page, pageSize) {\r\n         let filter = this.state.filter;\r\n         filter.page = page;\r\n         filter.pageSize = pageSize;\r\n         this.refreshNow(filter)\r\n     }\r\n\r\n     onPageSizeChange(current, pageSize) {\r\n         let filter = this.state.filter;\r\n         filter.pageSize = pageSize;\r\n         this.refreshNow(filter);\r\n     }\r\n\r\n\r\n    render() {\r\n\r\n        let layout = this.state.layout;\r\n\r\n        return (<div>ANPR\r\n            <Collapse bordered={false} defaultActiveKey={['1', '2']}>\r\n                <Panel header=\"Filter\" key=\"1\">\r\n                    <GenericFilter handleRefresh={this.refresh} filter={this.state.filter} layout={layout} handleFilterChange={this.handleFilterChange} handleLayoutChange={this.handleLayoutChange}/>\r\n                </Panel>\r\n                <Panel header=\"Events\" key=\"2\">\r\n                    {layout === \"table\" ? (this.renderTable()) :(this.renderGrid()) }\r\n                </Panel>\r\n            </Collapse>\r\n        </div>)\r\n    }\r\n\r\n    renderGrid() {\r\n\r\n        if (this.state.loading || !this.state.anprresponse || this.state.anprresponse.totalPage === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let events = this.state.anprresponse.events;\r\n        let count =  this.state.anprresponse.totalPages *  this.state.anprresponse.pageSize;\r\n\r\n        return <div style={{background: '#ECECEC', padding: '30px'}}>\r\n            <Row>\r\n                <Col>\r\n                    <Pagination onChange={this.onPageChange} onShowSizeChange={this.onPageSizeChange} showSizeChanger showQuickJumper\r\n                              defaultCurrent={1}  total={count} current={this.state.filter.page} pageSize ={this.state.filter.pageSize}/>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n                {\r\n                    events.map((event, index) =>\r\n                        <Col span={8} key={index}>\r\n                            <Card\r\n                                title={\r\n                                    <div>\r\n                                        <Tag color=\"#2db7f5\"><Moment format=\"L\">{event.eventDate}</Moment></Tag>\r\n                                        <Tag color=\"#87d068\"><span><Moment format=\"LTS\">{event.eventDate}</Moment></span><Icon\r\n                                            type=\"right\" hidden/><span hidden><Moment\r\n                                            format=\"LTS\">{event.eventDate}</Moment></span></Tag>\r\n                                    </div>\r\n                                }\r\n                                bordered={true}\r\n                                cover={<img alt=\"event\"\r\n                                            src={\"/api/event/image/\" + event.vehicleImage + \"/image.jpg\"}/>}\r\n                            >\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n        </div>\r\n    }\r\n\r\n    renderTable() {\r\n\r\n        if (this.state.loading || !this.state.events || this.state.events.Total === 0) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let events = this.state.anprresponse.events;\r\n        let count = this.state.anprresponse.totalPages *  this.state.anprresponse.pageSize;\r\n\r\n        const paginationOptions = {\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            onShowSizeChange: this.onPageSizeChange,\r\n            onChange: this.onPageChange,\r\n            total: count\r\n        };\r\n\r\n        const pagination = {\r\n            ...paginationOptions,\r\n            total: count,\r\n            current: this.state.filter.page,\r\n            pageSize: this.state.filter.pageSize\r\n        };\r\n\r\n        return (\r\n            <Table dataSource={events} pagination={pagination}>\r\n                <Column title=\"ID\" dataIndex=\"id\" key=\"id\"/>\r\n                <Column title=\"Date\" dataIndex=\"eventDate\" key=\"eventDate\"\r\n                        render={eventDate => (<Moment format=\"L\">{eventDate}</Moment>)}/>\r\n                <Column title=\"Time\" dataIndex=\"eventDate\" key=\"eventTime\"\r\n                        render={eventDate => (<Moment format=\"LTS\">{eventDate}</Moment>)}/>\r\n\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './App.css';\r\nimport {Layout} from 'antd';\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Headbar from \"./components/Headbar\";\r\nimport Footerbar from \"./components/Footerbar\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport HomeView from \"./views/HomeView\";\r\nimport FeedView from \"./views/FeedView\";\r\nimport {Route} from \"react-router-dom\";\r\nimport DeviceView from \"./views/DeviceView\";\r\nimport UserListView from \"./views/UserListView\";\r\nimport DeviceConfigView from \"./views/DeviceConfigView\";\r\n\r\nimport UserService from \"./services/UserService\";\r\nimport {EventBus} from \"./components/event\"\r\nimport LoginView from \"./views/LoginView\";\r\nimport IncidentListView from \"./views/IncidentListView\";\r\nimport TriggerView from \"./views/TriggerView\";\r\nimport AnprView from \"./views/AnprView\";\r\nconst {Content} = Layout;\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {loggedIn: false};\r\n\r\n        EventBus.subscribe('login-logout', (event) => this.refreshMenu(event))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshMenu()\r\n    }\r\n\r\n    refreshMenu() {\r\n        this.setState({loggedIn: UserService.isLoggedIn()});\r\n    }\r\n\r\n    render() {\r\n\r\n        const isLoggedIn = this.state.loggedIn;\r\n\r\n        const sideBar = isLoggedIn ? <Sidebar/> : null;\r\n        const header = isLoggedIn ? <Headbar isLoggedIn={isLoggedIn}/>: null;\r\n\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Layout>\r\n                    {sideBar}\r\n                    <Layout>\r\n                        {header}\r\n                        <Content style={{ margin: '24px 16px 0' }}>\r\n                            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\r\n                                <Route path='/login' exact={true} component={LoginView}/>\r\n                                <PrivateRoute path='/' exact={true} component={HomeView}/>\r\n                                <PrivateRoute path='/incidents' exact={true} component={IncidentListView}/>\r\n                                <PrivateRoute path='/anpr' exact={true} component={AnprView}/>\r\n                                <PrivateRoute path='/user' exact={true} component={UserListView}/>\r\n                                <PrivateRoute path='/feed' exact={true} component={FeedView}/>\r\n                                <PrivateRoute path='/trigger' exact={true} component={TriggerView}/>\r\n                                <PrivateRoute path='/device' exact={true} component={DeviceView}/>\r\n                                <PrivateRoute path='/device/conf' exact={true} component={DeviceConfigView}/>\r\n                            </div>\r\n                        </Content>\r\n                        <Footerbar/>\r\n                    </Layout>\r\n                </Layout>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router, Switch} from 'react-router-dom';\n\nclass Root extends React.Component {\n\n    render() {\n        return (\n            <Router>\n                    <Switch>\n                        <App/>\n                    </Switch>\n            </Router>\n        )\n    }\n}\n\nReactDOM.render(<Root/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const EventBus  = {\r\n    events : {},\r\n    publish: function (event, data) {\r\n        if (!this.events[event]) return;\r\n        this.events[event].forEach(callback => callback(data))\r\n    },\r\n    subscribe: function (event, callback) {\r\n        if (!this.events[event]) this.events[event] = [];\r\n        this.events[event].push(callback)\r\n    }\r\n};\r\n\r\nmodule.exports = {EventBus};"],"sourceRoot":""}