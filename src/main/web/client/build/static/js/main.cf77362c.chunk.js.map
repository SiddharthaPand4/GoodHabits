{"version":3,"sources":["components/event.js","components/Sidebar.js","components/Headbar.js","components/Footerbar.js","services/UserService.js","components/PrivateRoute.js","views/HomeView.js","views/FeedView.js","services/DeviceService.js","views/DeviceView.js","views/UserListView.js","views/DeviceConfigView.js","helpers/history.js","views/LoginView.js","services/IncidentService.js","views/IncidentListView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","EventBus","events","publish","event","data","this","forEach","callback","subscribe","push","Sider","Layout","SubMenu","Menu","Sidebar","breakpoint","collapsedWidth","onBreakpoint","broken","console","log","onCollapse","collapsed","type","className","theme","mode","defaultSelectedKeys","Item","key","to","title","Component","Header","Headbar","style","background","padding","Footer","textAlign","UserService","axios","get","JSON","parse","localStorage","getItem","username","password","post","stringify","response","token","setItem","Instance","PrivateRoute","component","rest","render","props","isLoggedIn","pathname","state","from","location","HomeView","FeedView","src","height","width","DeviceService","DeviceView","loading","device","getDevice","then","request","setState","extra","fingerprint","name","model","license","status","registeredTo","Column","Table","UserListView","users","getUsers","dataSource","dataIndex","text","record","href","ID","lastName","TabPane","Tabs","DeviceConfigView","deviceconfig","getDeviceConfig","tab","defaultActiveKey","onChange","onTabChange","history","createBrowserHistory","Text","Typography","LoginView","WrappedLoginForm","Form","create","LoginForm","submitted","loginError","handleSubmit","bind","e","preventDefault","form","getFieldValue","login","catch","error","getFieldDecorator","span","offset","onSubmit","rules","required","message","prefix","color","placeholder","htmlType","withRouter","IncidentService","incident","delete","Panel","Collapse","ButtonGroup","Card","Meta","Button","Group","IncidentListView","videoVisible","layout","incidents","handleDone","archiveIncident","refresh","getIncidents","videoid","ReactPlayer","canPlay","description","bordered","header","size","icon","onClick","changeLayout","renderGrid","renderList","visible","onOk","onCancel","controls","url","gutter","map","index","event_type","event_date","format","event_start","event_end","event_duration","cover","alt","image_id","actions","showVideo","video_id","Content","App","loggedIn","refreshMenu","sideBar","margin","minHeight","path","exact","Boolean","window","hostname","match","Root","React","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf77362c.chunk.js","sourcesContent":["const EventBus  = {\r\n    events : {},\r\n    publish: function (event, data) {\r\n        if (!this.events[event]) return;\r\n        this.events[event].forEach(callback => callback(data))\r\n    },\r\n    subscribe: function (event, callback) {\r\n        if (!this.events[event]) this.events[event] = [];\r\n        this.events[event].push(callback)\r\n    }\r\n};\r\n\r\nmodule.exports = {EventBus};","import React, {Component} from 'react';\r\nimport {Icon, Layout, Menu, } from \"antd\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class Sidebar extends Component {\r\n    render() {\r\n        return (\r\n            <Sider\r\n                breakpoint=\"lg\"\r\n                collapsedWidth=\"0\"\r\n                onBreakpoint={broken => {\r\n                    console.log(broken);\r\n                }}\r\n                onCollapse={(collapsed, type) => {\r\n                    console.log(collapsed, type);\r\n                }}\r\n            >\r\n                <div className=\"logo\"/>\r\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                    <Menu.Item key=\"1\">\r\n                        <Icon type=\"alert\"/>\r\n                        <span className=\"nav-text\"><NavLink to=\"/incidents\"  className=\"nav-text\">Incidents</NavLink></span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                        <Icon type=\"video-camera\"/>\r\n                        <span className=\"nav-text\"><NavLink to=\"/feed\"  className=\"nav-text\">Feed</NavLink></span>\r\n                    </Menu.Item>\r\n                    <SubMenu key=\"admin\" title={<span><Icon type=\"deployment-unit\"/>Admin</span>}>\r\n                        <Menu.Item key=\"3\">\r\n                            <Icon type=\"user\"/>\r\n                            <span className=\"nav-text\"><NavLink to=\"/user\"  className=\"nav-text\">Users</NavLink></span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\">\r\n                            <Icon type=\"laptop\"/>\r\n                            <span className=\"nav-text\"><NavLink to=\"/device\"  className=\"nav-text\">Device</NavLink></span>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n        );\r\n    }\r\n}","\r\nimport React, {Component} from 'react';\r\nimport {Layout} from \"antd\";\r\nconst {Header} = Layout;\r\n\r\nexport default class Headbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header style={{ background: '#fff', padding: 10 }} >&nbsp;</Header>\r\n        )\r\n    }\r\n}","\r\nimport React, {Component} from 'react';\r\nimport {Layout} from \"antd\";\r\nconst {Footer} = Layout;\r\n\r\nexport default class Headbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Footer style={{ textAlign: 'center' }}>SynergyLabs © 2019</Footer>\r\n        )\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nclass UserService {\r\n\r\n    static Instance() {\r\n        return new UserService()\r\n    }\r\n\r\n    getUser() {\r\n        return axios.get('/api/user/');\r\n    }\r\n\r\n    getUsers() {\r\n        return axios.get('/api/users');\r\n    }\r\n\r\n    isLoggedIn() {\r\n        let token = JSON.parse(localStorage.getItem('syntoken'));\r\n        if (!token) {\r\n            console.log(\"cannot locate token, returning false\");\r\n            return false;\r\n        }\r\n        console.log(\"located token, returning true\");\r\n        return true\r\n    }\r\n\r\n    async login(username, password) {\r\n\r\n        let response = await axios.post('/api/login', JSON.stringify({ username, password }));\r\n        console.log(\"got this response\", response);\r\n        let token = response.data;\r\n        if (token) {\r\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n            localStorage.setItem('syntoken', JSON.stringify(token));\r\n        }\r\n        return token;\r\n    }\r\n}\r\n\r\nexport default UserService.Instance()\r\n\r\n//TODO valiate token,\r\n// https://medium.com/@siddharthac6/json-web-token-jwt-the-right-way-of-implementing-with-node-js-65b8915d550e","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport UserService from \"../services/UserService\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        UserService.isLoggedIn()\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n);\r\n\r\nexport default PrivateRoute","import React, {Component} from \"react\";\r\n\r\nexport default class HomeView extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>this is home view</div>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\n\r\nexport default class FeedView extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src=\"http://192.168.0.64:9000\" height=\"400\" width=\"400\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport axios from 'axios';\r\n\r\nclass DeviceService {\r\n\r\n    static Instance() {\r\n        return new DeviceService()\r\n    }\r\n\r\n    getDevice() {\r\n        return axios.get('/api/device');\r\n    }\r\n\r\n    getDeviceConfig() {\r\n        return axios.get('/api/device/config');\r\n    }\r\n}\r\n\r\nexport default DeviceService.Instance()","import React, {Component} from \"react\";\r\nimport {Card, Icon} from 'antd';\r\nimport DeviceService from \"../services/DeviceService\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class DeviceView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {loading:true, device:{}}\r\n    }\r\n\r\n    componentDidMount() {\r\n        DeviceService.getDevice().then(request => {\r\n            this.setState({\"device\" : request.data, loading : false})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let loading = this.state.loading;\r\n        let device = this.state.device;\r\n\r\n        if (loading) {\r\n            return (<div>Loading..</div>)\r\n        }\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Card title=\"Device details\" style={{width: 300}} extra={<Link to=\"/device/conf\"><Icon type=\"setting\" /></Link>}>\r\n                    <p>ID: {device.fingerprint}</p>\r\n                    <p>Name:{device.name}</p>\r\n                    <p>Model:{device.model}</p>\r\n                    <p>License:{device.license}</p>\r\n                    <p>Status: {device.status}</p>\r\n                    <p>RegisteredTo: {device.registeredTo}</p>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Table, Divider} from 'antd';\r\nimport UserService from \"../services/UserService\";\r\nconst { Column} = Table;\r\nexport default class UserListView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {loading: true, users: []}\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserService.getUsers().then(request => {\r\n            this.setState({\"users\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table dataSource={this.state.users} >\r\n                <Column title=\"Username\" dataIndex=\"username\" key=\"username\" render={(text, record) => (\r\n                    <span><a href={\"user/\" + record.ID}>{text}</a></span>\r\n                )}/>\r\n                <Column title=\"Email\" dataIndex=\"email\" key=\"email\" />\r\n                <Column title=\"Token\" dataIndex=\"token\" key=\"token\" />\r\n                <Column title=\"Action\" key=\"action\" render={(text, record) => (\r\n                        <span>\r\n                            <a>Edit {record.lastName}</a>\r\n                            <Divider type=\"vertical\" />\r\n                            <a>Delete</a>\r\n                        </span>\r\n                    )}\r\n                />\r\n            </Table>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport DeviceService from \"../services/DeviceService\";\r\nimport { Tabs } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class DeviceConfigView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {loading:true, deviceconfig:{}}\r\n    }\r\n\r\n    componentDidMount() {\r\n        DeviceService.getDeviceConfig().then(request => {\r\n            this.setState({\"deviceconfig\" : request.data, loading : false})\r\n        })\r\n    }\r\n\r\n    onTabChange(tab) {\r\n        console.log(\"tab changed\", tab)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Tabs defaultActiveKey=\"1\" onChange={this.onTabChange}>\r\n                <TabPane tab=\"Feed\" key=\"common\">\r\n                    Feed details\r\n                </TabPane>\r\n                <TabPane tab=\"Basic Intrusion\" key=\"bi\">\r\n                    Basic Intrusion\r\n                </TabPane>\r\n                <TabPane tab=\"Advanced Intrusion\" key=\"ai\">\r\n                    Advanced Intrusion\r\n                </TabPane>\r\n            </Tabs>\r\n        )\r\n    }\r\n}","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import React, {Component} from 'react';\r\nimport UserService from \"../services/UserService\";\r\nimport {EventBus} from \"../components/event\";\r\nimport {Button, Col, Form, Icon, Input, Row, Typography} from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {history} from \"../helpers/history\";\r\n\r\nconst {Text} = Typography;\r\n\r\n\r\nclass LoginView extends Component {\r\n\r\n    componentDidMount() {\r\n        if (UserService.isLoggedIn()) {\r\n            history.push( \"/\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const WrappedLoginForm = Form.create({name: 'login_form'})(LoginForm);\r\n        return (\r\n            <WrappedLoginForm/>\r\n        )\r\n    }\r\n}\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false,\r\n            loading: false,\r\n            loginError: '',\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        const form = this.props.form;\r\n        const username = form.getFieldValue(\"username\");\r\n        const password = form.getFieldValue(\"password\");\r\n        this.setState({submitted: true});\r\n\r\n        if (!(username && password)) {\r\n            return\r\n        }\r\n\r\n        this.setState({loading: true});\r\n        UserService.login(username, password)\r\n            .then(token => {\r\n                history.push( \"/\");\r\n                EventBus.publish('login-logout', {})\r\n            }).catch(error => {\r\n                this.setState({\r\n                    loginError: \"Something went wrong, please try again\",\r\n                    loading: false\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n        const loginError = this.state.loginError;\r\n\r\n        return (\r\n            <Row>\r\n                <Col span={8} offset={8}><h4>Login</h4>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {getFieldDecorator('username', {\r\n                                rules: [{required: true, message: 'Please input your username!'}],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                    placeholder=\"Username\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{required: true, message: 'Please input your Password!'}],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                Log in\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    {loginError && <Text type=\"danger\">{loginError}</Text>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(LoginView);\r\n","\r\nimport axios from 'axios';\r\n\r\nclass IncidentService {\r\n\r\n    static Instance() {\r\n        return new IncidentService()\r\n    }\r\n\r\n    getIncidents() {\r\n        return axios.get('/api/incidents');\r\n    }\r\n\r\n    archiveIncident(incident) {\r\n        return axios.delete('/api/incident/' + incident.ID);\r\n    }\r\n}\r\n\r\nexport default IncidentService.Instance()","import React, {Component} from \"react\";\r\nimport {Avatar, Card, Col, Empty, Icon, Row, Tag} from 'antd';\r\nimport IncidentService from \"../services/IncidentService\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Modal, Button } from 'antd';\r\nimport Moment from 'react-moment';\r\nimport { Collapse } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\nconst { Meta } = Card;\r\nconst ButtonGroup = Button.Group;\r\n\r\nexport default class IncidentListView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            videoVisible: false,\r\n            layout: \"table\",\r\n            incidents: {},\r\n        };\r\n        this.handleDone = this.handleDone.bind(this);\r\n        this.archiveIncident = this.archiveIncident.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        IncidentService.getIncidents().then(request => {\r\n            this.setState({\"incidents\": request.data, loading: false})\r\n        })\r\n    }\r\n\r\n    archiveIncident(incident) {\r\n        IncidentService.archiveIncident(incident).then(() => {\r\n            this.refresh()\r\n        })\r\n    }\r\n\r\n    changeLayout(layout) {\r\n        this.setState({\"layout\" : layout});\r\n    }\r\n\r\n    showVideo(videoid) {\r\n\r\n        let cp = ReactPlayer.canPlay(\"/api/incident/video/\"+ this.state.videoid + \"/video.mp4\");\r\n        this.setState({\r\n            videoVisible: true,\r\n            videoid : videoid\r\n        });\r\n    };\r\n\r\n    handleDone() {\r\n        this.setState({\r\n            videoVisible: false,\r\n            videoid : \"\"\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        if (this.state.loading || !this.state.incidents) {\r\n            return <Empty description={false}/>\r\n        }\r\n\r\n        let layout = this.state.layout;\r\n\r\n        return (\r\n\r\n            <Collapse bordered={false} defaultActiveKey={['1']}>\r\n                <Panel header=\"Filter\" key=\"1\">\r\n                    <ButtonGroup>\r\n                        <Button type={layout === \"list\" ? \"primary\" : \"\"} size=\"small\" icon=\"unordered-list\" onClick={()=>{this.changeLayout(\"list\")}}/>\r\n                        <Button type={layout === \"table\" ? \"primary\" : \"\"} size=\"small\" icon=\"table\" onClick={()=>{this.changeLayout(\"table\")}}/>\r\n                    </ButtonGroup>\r\n                </Panel>\r\n                <Panel header=\"Incidents\" key=\"2\">\r\n                    {layout === \"table\" ? (this.renderGrid()) : (this.renderList())}\r\n                </Panel>\r\n            </Collapse>\r\n\r\n        )\r\n    }\r\n\r\n    renderGrid() {\r\n        let incidents = this.state.incidents;\r\n        return <div style={{background: '#ECECEC', padding: '30px'}}>\r\n            <Modal\r\n                title=\"Video\"\r\n                visible={this.state.videoVisible}\r\n                onOk={this.handleDone}\r\n                onCancel={this.handleDone}\r\n            >\r\n                { this.state.videoVisible ? (<ReactPlayer controls={true} url={\"http://localhost:9000/api/incident/video/\"+ this.state.videoid + \"/video.mp4\"}  width=\"300\" />) : (<div><Empty/></div>)}\r\n            </Modal>\r\n\r\n\r\n            <Row gutter={16}>\r\n                {\r\n                    incidents.map((incident, index) =>\r\n                        <Col span={8} key={index} >\r\n                            <Card\r\n                                title={\r\n                                    <div>\r\n                                        <Tag color=\"#f50\">{incident.event_type}</Tag>\r\n                                        <Tag color=\"#2db7f5\">{incident.event_date}</Tag>\r\n                                        <Tag color=\"#87d068\"><span><Moment format=\"LTS\">{incident.event_start}</Moment></span><Icon type=\"right\"/><span><Moment format=\"LTS\">{incident.event_end}</Moment></span></Tag>\r\n                                        <Tag color=\"#108ee9\">{incident.event_duration}s</Tag>\r\n                                    </div>\r\n                                }\r\n                                bordered={true}\r\n                                cover={<img alt=\"incident image\" src={\"/api/incident/image/\"+ incident.image_id}  />}\r\n                                actions={[\r\n                                    <Icon type=\"right\" key=\"play\" onClick={() => this.showVideo(incident.video_id)}/>,\r\n                                    <Icon type=\"edit\" key=\"edit\"/>,\r\n                                    <Icon type=\"delete\" key=\"delete\" onClick={() => this.archiveIncident(incident)}/>,\r\n                                ]}\r\n                            >\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n        </div>\r\n    }\r\n\r\n    renderList() {\r\n        let incidents = this.state.incidents;\r\n        return <div>list</div>\r\n    }\r\n}\r\n","import React, {Component} from 'react';\n\nimport './App.css';\nimport {Layout} from 'antd';\nimport Sidebar from \"./components/Sidebar\";\nimport Headbar from \"./components/Headbar\";\nimport Footerbar from \"./components/Footerbar\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport HomeView from \"./views/HomeView\";\nimport FeedView from \"./views/FeedView\";\nimport {Route} from \"react-router-dom\";\nimport DeviceView from \"./views/DeviceView\";\nimport UserListView from \"./views/UserListView\";\nimport DeviceConfigView from \"./views/DeviceConfigView\";\n\nimport UserService from \"./services/UserService\";\nimport {EventBus} from \"./components/event\"\nimport LoginView from \"./views/LoginView\";\nimport IncidentListView from \"./views/IncidentListView\";\nconst {Content} = Layout;\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {loggedIn: false};\n\n        EventBus.subscribe('login-logout', (event) => this.refreshMenu(event))\n    }\n\n    componentDidMount() {\n        this.refreshMenu()\n    }\n\n    refreshMenu() {\n        this.setState({loggedIn: UserService.isLoggedIn()});\n    }\n\n    render() {\n\n        const isLoggedIn = this.state.loggedIn;\n\n        const sideBar = isLoggedIn ? <Sidebar/> : null;\n        const header = isLoggedIn ? <Headbar isLoggedIn={isLoggedIn}/>: null;\n\n\n        return (\n            <div className=\"App\">\n                <Layout>\n                    {sideBar}\n                    <Layout>\n                        {header}\n                        <Content style={{ margin: '24px 16px 0' }}>\n                            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                                <Route path='/login' exact={true} component={LoginView}/>\n                                <PrivateRoute path='/' exact={true} component={HomeView}/>\n                                <PrivateRoute path='/incidents' exact={true} component={IncidentListView}/>\n                                <PrivateRoute path='/user' exact={true} component={UserListView}/>\n                                <PrivateRoute path='/feed' exact={true} component={FeedView}/>\n                                <PrivateRoute path='/device' exact={true} component={DeviceView}/>\n                                <PrivateRoute path='/device/conf' exact={true} component={DeviceConfigView}/>\n                            </div>\n                        </Content>\n                        <Footerbar/>\n                    </Layout>\n                </Layout>\n            </div>\n        );\n\n    }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router, Switch} from 'react-router-dom';\n\nclass Root extends React.Component {\n\n    render() {\n        return (\n            <Router>\n                    <Switch>\n                        <App/>\n                    </Switch>\n            </Router>\n        )\n    }\n}\n\nReactDOM.render(<Root/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}